   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 2
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"stm32f4xx_spi.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.SPI_I2S_DeInit,"ax",%progbits
  21              		.align	2
  22              		.global	SPI_I2S_DeInit
  23              		.thumb
  24              		.thumb_func
  26              	SPI_I2S_DeInit:
  27              	.LFB123:
  28              		.file 1 "Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c"
   1:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
   2:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   ******************************************************************************
   3:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @file    stm32f4xx_spi.c
   4:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @author  MCD Application Team
   5:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @version V1.5.0
   6:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @date    06-March-2015
   7:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief   This file provides firmware functions to manage the following 
   8:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          functionalities of the Serial peripheral interface (SPI):
   9:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *           + Initialization and Configuration
  10:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *           + Data transfers functions
  11:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *           + Hardware CRC Calculation
  12:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *           + DMA transfers management
  13:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *           + Interrupts and flags management 
  14:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *           
  15:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** @verbatim
  16:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
  17:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  ===================================================================
  18:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****                   ##### How to use this driver #####
  19:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  ===================================================================
  20:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  [..]
  21:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****    (#) Enable peripheral clock using the following functions 
  22:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        RCC_APB2PeriphClockCmd(RCC_APB2Periph_SPI1, ENABLE) for SPI1
  23:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        RCC_APB1PeriphClockCmd(RCC_APB1Periph_SPI2, ENABLE) for SPI2
  24:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI3, ENABLE) for SPI3
  25:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI3, ENABLE) for SPI4
  26:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI3, ENABLE) for SPI5
  27:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI3, ENABLE) for SPI6.
  28:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
  29:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****    (#) Enable SCK, MOSI, MISO and NSS GPIO clocks using RCC_AHB1PeriphClockCmd()
  30:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        function. In I2S mode, if an external clock source is used then the I2S 
  31:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        CKIN pin GPIO clock should also be enabled.
  32:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
  33:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****    (#) Peripherals alternate function: 
  34:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        (++) Connect the pin to the desired peripherals' Alternate Function (AF) 
  35:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****             using GPIO_PinAFConfig() function
  36:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        (++) Configure the desired pin in alternate function by: 
  37:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****             GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF
  38:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        (++) Select the type, pull-up/pull-down and output speed via GPIO_PuPd, 
  39:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****             GPIO_OType and GPIO_Speed members
  40:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        (++) Call GPIO_Init() function In I2S mode, if an external clock source is 
  41:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****             used then the I2S CKIN pin should be also configured in Alternate 
  42:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****             function Push-pull pull-up mode. 
  43:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****           
  44:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****    (#) Program the Polarity, Phase, First Data, Baud Rate Prescaler, Slave 
  45:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        Management, Peripheral Mode and CRC Polynomial values using the SPI_Init()
  46:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        function.
  47:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        In I2S mode, program the Mode, Standard, Data Format, MCLK Output, Audio 
  48:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        frequency and Polarity using I2S_Init() function. For I2S mode, make sure 
  49:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        that either:
  50:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        (++) I2S PLL is configured using the functions 
  51:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****             RCC_I2SCLKConfig(RCC_I2S2CLKSource_PLLI2S), RCC_PLLI2SCmd(ENABLE) and 
  52:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****             RCC_GetFlagStatus(RCC_FLAG_PLLI2SRDY); or 
  53:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        (++) External clock source is configured using the function 
  54:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****             RCC_I2SCLKConfig(RCC_I2S2CLKSource_Ext) and after setting correctly 
  55:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****             the define constant I2S_EXTERNAL_CLOCK_VAL in the stm32f4xx_conf.h file. 
  56:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
  57:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****    (#) Enable the NVIC and the corresponding interrupt using the function 
  58:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        SPI_ITConfig() if you need to use interrupt mode. 
  59:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
  60:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****    (#) When using the DMA mode 
  61:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        (++) Configure the DMA using DMA_Init() function
  62:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        (++) Active the needed channel Request using SPI_I2S_DMACmd() function
  63:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****    
  64:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****    (#) Enable the SPI using the SPI_Cmd() function or enable the I2S using
  65:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        I2S_Cmd().
  66:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****    
  67:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****    (#) Enable the DMA using the DMA_Cmd() function when using DMA mode. 
  68:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
  69:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****    (#) Optionally, you can enable/configure the following parameters without
  70:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        re-initialization (i.e there is no need to call again SPI_Init() function):
  71:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        (++) When bidirectional mode (SPI_Direction_1Line_Rx or SPI_Direction_1Line_Tx)
  72:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****             is programmed as Data direction parameter using the SPI_Init() function
  73:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****             it can be possible to switch between SPI_Direction_Tx or SPI_Direction_Rx
  74:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****             using the SPI_BiDirectionalLineConfig() function.
  75:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        (++) When SPI_NSS_Soft is selected as Slave Select Management parameter 
  76:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****             using the SPI_Init() function it can be possible to manage the 
  77:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****             NSS internal signal using the SPI_NSSInternalSoftwareConfig() function.
  78:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        (++) Reconfigure the data size using the SPI_DataSizeConfig() function  
  79:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        (++) Enable or disable the SS output using the SPI_SSOutputCmd() function  
  80:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****             
  81:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     (#) To use the CRC Hardware calculation feature refer to the Peripheral 
  82:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****         CRC hardware Calculation subsection.
  83:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****      
  84:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
  85:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  [..] It is possible to use SPI in I2S full duplex mode, in this case, each SPI 
  86:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       peripheral is able to manage sending and receiving data simultaneously
  87:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       using two data lines. Each SPI peripheral has an extended block called I2Sxext
  88:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       (ie. I2S2ext for SPI2 and I2S3ext for SPI3).
  89:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       The extension block is not a full SPI IP, it is used only as I2S slave to
  90:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       implement full duplex mode. The extension block uses the same clock sources
  91:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       as its master.          
  92:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       To configure I2S full duplex you have to:
  93:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****               
  94:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       (#) Configure SPIx in I2S mode (I2S_Init() function) as described above. 
  95:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****              
  96:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       (#) Call the I2S_FullDuplexConfig() function using the same structure passed to  
  97:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****           I2S_Init() function.
  98:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****               
  99:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       (#) Call I2S_Cmd() for SPIx then for its extended block.
 100:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****             
 101:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       (#) To configure interrupts or DMA requests and to get/clear flag status, 
 102:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****           use I2Sxext instance for the extension block.
 103:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****                
 104:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  [..] Functions that can be called with I2Sxext instances are: I2S_Cmd(), 
 105:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       I2S_FullDuplexConfig(), SPI_I2S_ReceiveData(), SPI_I2S_SendData(), 
 106:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       SPI_I2S_DMACmd(), SPI_I2S_ITConfig(), SPI_I2S_GetFlagStatus(), 
 107:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       SPI_I2S_ClearFlag(), SPI_I2S_GetITStatus() and SPI_I2S_ClearITPendingBit().
 108:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****                    
 109:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       Example: To use SPI3 in Full duplex mode (SPI3 is Master Tx, I2S3ext is Slave Rx):
 110:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****               
 111:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       RCC_APB1PeriphClockCmd(RCC_APB1Periph_SPI3, ENABLE);   
 112:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       I2S_StructInit(&I2SInitStruct);
 113:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       I2SInitStruct.Mode = I2S_Mode_MasterTx;     
 114:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       I2S_Init(SPI3, &I2SInitStruct);
 115:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       I2S_FullDuplexConfig(SPI3ext, &I2SInitStruct)
 116:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       I2S_Cmd(SPI3, ENABLE);
 117:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       I2S_Cmd(SPI3ext, ENABLE);
 118:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       ...
 119:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       while (SPI_I2S_GetFlagStatus(SPI2, SPI_FLAG_TXE) == RESET)
 120:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       {}
 121:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       SPI_I2S_SendData(SPI3, txdata[i]);
 122:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       ...  
 123:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       while (SPI_I2S_GetFlagStatus(I2S3ext, SPI_FLAG_RXNE) == RESET)
 124:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       {}
 125:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       rxdata[i] = SPI_I2S_ReceiveData(I2S3ext);
 126:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       ...          
 127:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****                 
 128:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  [..]       
 129:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****    (@) In I2S mode: if an external clock is used as source clock for the I2S,  
 130:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        then the define I2S_EXTERNAL_CLOCK_VAL in file stm32f4xx_conf.h should 
 131:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        be enabled and set to the value of the source clock frequency (in Hz).
 132:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****    
 133:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****    (@) In SPI mode: To use the SPI TI mode, call the function SPI_TIModeCmd() 
 134:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        just after calling the function SPI_Init().
 135:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
 136:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** @endverbatim  
 137:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *                                  
 138:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   ******************************************************************************
 139:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @attention
 140:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *
 141:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * <h2><center>&copy; COPYRIGHT 2015 STMicroelectronics</center></h2>
 142:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *
 143:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
 144:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * You may not use this file except in compliance with the License.
 145:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * You may obtain a copy of the License at:
 146:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *
 147:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
 148:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *
 149:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * Unless required by applicable law or agreed to in writing, software 
 150:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
 151:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 152:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * See the License for the specific language governing permissions and
 153:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * limitations under the License.
 154:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *
 155:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   ******************************************************************************  
 156:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */ 
 157:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 158:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /* Includes ------------------------------------------------------------------*/
 159:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** #include "stm32f4xx_spi.h"
 160:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** #include "stm32f4xx_rcc.h"
 161:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 162:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 163:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @{
 164:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 165:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 166:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /** @defgroup SPI 
 167:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief SPI driver modules
 168:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @{
 169:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */ 
 170:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 171:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /* Private typedef -----------------------------------------------------------*/
 172:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /* Private define ------------------------------------------------------------*/
 173:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 174:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /* SPI registers Masks */
 175:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** #define CR1_CLEAR_MASK            ((uint16_t)0x3040)
 176:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** #define I2SCFGR_CLEAR_MASK        ((uint16_t)0xF040)
 177:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 178:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /* RCC PLLs masks */
 179:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** #define PLLCFGR_PPLR_MASK         ((uint32_t)0x70000000)
 180:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** #define PLLCFGR_PPLN_MASK         ((uint32_t)0x00007FC0)
 181:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 182:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** #define SPI_CR2_FRF               ((uint16_t)0x0010)
 183:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** #define SPI_SR_TIFRFE             ((uint16_t)0x0100)
 184:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 185:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /* Private macro -------------------------------------------------------------*/
 186:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /* Private variables ---------------------------------------------------------*/
 187:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /* Private function prototypes -----------------------------------------------*/
 188:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /* Private functions ---------------------------------------------------------*/
 189:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 190:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /** @defgroup SPI_Private_Functions
 191:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @{
 192:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 193:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 194:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /** @defgroup SPI_Group1 Initialization and Configuration functions
 195:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  *  @brief   Initialization and Configuration functions 
 196:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  *
 197:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** @verbatim   
 198:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  ===============================================================================
 199:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****              ##### Initialization and Configuration functions ##### 
 200:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  ===============================================================================  
 201:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  [..] This section provides a set of functions allowing to initialize the SPI 
 202:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       Direction, SPI Mode, SPI Data Size, SPI Polarity, SPI Phase, SPI NSS 
 203:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       Management, SPI Baud Rate Prescaler, SPI First Bit and SPI CRC Polynomial.
 204:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
 205:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  [..] The SPI_Init() function follows the SPI configuration procedures for Master 
 206:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       mode and Slave mode (details for these procedures are available in reference 
 207:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       manual (RM0090)).
 208:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
 209:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** @endverbatim
 210:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @{
 211:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 212:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 213:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
 214:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief  De-initialize the SPIx peripheral registers to their default reset values.
 215:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPIx: To select the SPIx/I2Sx peripheral, where x can be: 1, 2, 3, 4, 5 or 6 
 216:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         in SPI mode or 2 or 3 in I2S mode.   
 217:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         
 218:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @note   The extended I2S blocks (ie. I2S2ext and I2S3ext blocks) are de-initialized
 219:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         when the relative I2S peripheral is de-initialized (the extended block's clock
 220:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         is managed by the I2S peripheral clock).
 221:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *             
 222:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @retval None
 223:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 224:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** void SPI_I2S_DeInit(SPI_TypeDef* SPIx)
 225:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** {
  29              		.loc 1 225 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              	.LVL0:
  34 0000 38B5     		push	{r3, r4, r5, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 16
  37              		.cfi_offset 3, -16
  38              		.cfi_offset 4, -12
  39              		.cfi_offset 5, -8
  40              		.cfi_offset 14, -4
 226:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
 227:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
  41              		.loc 1 227 0
  42 0002 4FF46052 		mov	r2, #14336
  43 0006 4FF44053 		mov	r3, #12288
  44 000a C4F20002 		movt	r2, 16384
  45 000e C4F20103 		movt	r3, 16385
  46 0012 9042     		cmp	r0, r2
  47 0014 18BF     		it	ne
  48 0016 9842     		cmpne	r0, r3
 225:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
  49              		.loc 1 225 0
  50 0018 0446     		mov	r4, r0
  51              		.loc 1 227 0
  52 001a 0CBF     		ite	eq
  53 001c 0025     		moveq	r5, #0
  54 001e 0125     		movne	r5, #1
  55 0020 24D0     		beq	.L2
  56              		.loc 1 227 0 is_stmt 0 discriminator 1
  57 0022 4FF47052 		mov	r2, #15360
  58 0026 4FF45053 		mov	r3, #13312
  59 002a C4F20002 		movt	r2, 16384
  60 002e C4F20103 		movt	r3, 16385
  61 0032 9042     		cmp	r0, r2
  62 0034 18BF     		it	ne
  63 0036 9842     		cmpne	r0, r3
  64 0038 28D1     		bne	.L17
  65              	.LVL1:
  66              	.L5:
 228:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 229:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   if (SPIx == SPI1)
 230:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 231:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Enable SPI1 reset state */
 232:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_SPI1, ENABLE);
 233:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Release SPI1 from reset state */
 234:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_SPI1, DISABLE);
 235:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 236:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   else if (SPIx == SPI2)
 237:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 238:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Enable SPI2 reset state */
 239:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI2, ENABLE);
 240:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Release SPI2 from reset state */
 241:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI2, DISABLE);
 242:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 243:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   else if (SPIx == SPI3)
  67              		.loc 1 243 0 is_stmt 1
  68 003a 4FF47053 		mov	r3, #15360
  69 003e C4F20003 		movt	r3, 16384
  70 0042 9C42     		cmp	r4, r3
  71 0044 4ED0     		beq	.L18
 244:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 245:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Enable SPI3 reset state */
 246:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI3, ENABLE);
 247:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Release SPI3 from reset state */
 248:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI3, DISABLE);
 249:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 250:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   else if (SPIx == SPI4)
  72              		.loc 1 250 0
  73 0046 4FF45053 		mov	r3, #13312
  74 004a C4F20103 		movt	r3, 16385
  75 004e 9C42     		cmp	r4, r3
  76 0050 54D0     		beq	.L19
 251:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 252:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Enable SPI4 reset state */
 253:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_SPI4, ENABLE);
 254:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Release SPI4 from reset state */
 255:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_SPI4, DISABLE);
 256:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 257:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   else if (SPIx == SPI5)
  77              		.loc 1 257 0
  78 0052 4FF4A043 		mov	r3, #20480
  79 0056 C4F20103 		movt	r3, 16385
  80 005a 9C42     		cmp	r4, r3
  81 005c 5AD0     		beq	.L20
 258:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 259:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Enable SPI5 reset state */
 260:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_SPI5, ENABLE);
 261:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Release SPI5 from reset state */
 262:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_SPI5, DISABLE);
 263:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 264:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   else 
 265:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 266:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     if (SPIx == SPI6)
  82              		.loc 1 266 0
  83 005e 4FF4A843 		mov	r3, #21504
  84 0062 C4F20103 		movt	r3, 16385
  85 0066 9C42     		cmp	r4, r3
  86 0068 24D0     		beq	.L21
  87 006a 38BD     		pop	{r3, r4, r5, pc}
  88              	.LVL2:
  89              	.L2:
 229:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
  90              		.loc 1 229 0
  91 006c 9842     		cmp	r0, r3
  92 006e 2DD0     		beq	.L22
 236:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
  93              		.loc 1 236 0
  94 0070 9042     		cmp	r0, r2
  95 0072 E2D1     		bne	.L5
 239:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Release SPI2 from reset state */
  96              		.loc 1 239 0
  97 0074 4FF48040 		mov	r0, #16384
  98              	.LVL3:
  99 0078 0121     		movs	r1, #1
 100 007a FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 101              	.LVL4:
 241:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 102              		.loc 1 241 0
 103 007e 2946     		mov	r1, r5
 104 0080 4FF48040 		mov	r0, #16384
 267:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     {
 268:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       /* Enable SPI6 reset state */
 269:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_SPI6, ENABLE);
 270:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       /* Release SPI6 from reset state */
 271:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_SPI6, DISABLE);
 272:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     }
 273:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 274:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** }
 105              		.loc 1 274 0
 106 0084 BDE83840 		pop	{r3, r4, r5, lr}
 107              	.LVL5:
 241:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 108              		.loc 1 241 0
 109 0088 FFF7FEBF 		b	RCC_APB1PeriphResetCmd
 110              	.LVL6:
 111              	.L17:
 227:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 112              		.loc 1 227 0 discriminator 1
 113 008c 4FF4A042 		mov	r2, #20480
 114 0090 4FF4A843 		mov	r3, #21504
 115 0094 C4F20102 		movt	r2, 16385
 116 0098 C4F20103 		movt	r3, 16385
 117 009c 9042     		cmp	r0, r2
 118 009e 18BF     		it	ne
 119 00a0 9842     		cmpne	r0, r3
 120 00a2 CAD0     		beq	.L5
 121 00a4 40F20000 		movw	r0, #:lower16:.LC0
 122              	.LVL7:
 123 00a8 C0F20000 		movt	r0, #:upper16:.LC0
 124 00ac E321     		movs	r1, #227
 125 00ae FFF7FEFF 		bl	assert_failed
 126              	.LVL8:
 127 00b2 C2E7     		b	.L5
 128              	.L21:
 269:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       /* Release SPI6 from reset state */
 129              		.loc 1 269 0
 130 00b4 4FF40010 		mov	r0, #2097152
 131 00b8 0121     		movs	r1, #1
 132 00ba FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 133              	.LVL9:
 271:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     }
 134              		.loc 1 271 0
 135 00be 4FF40010 		mov	r0, #2097152
 136 00c2 0021     		movs	r1, #0
 137              		.loc 1 274 0
 138 00c4 BDE83840 		pop	{r3, r4, r5, lr}
 139              	.LVL10:
 271:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     }
 140              		.loc 1 271 0
 141 00c8 FFF7FEBF 		b	RCC_APB2PeriphResetCmd
 142              	.LVL11:
 143              	.L22:
 232:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Release SPI1 from reset state */
 144              		.loc 1 232 0
 145 00cc 4FF48050 		mov	r0, #4096
 146              	.LVL12:
 147 00d0 0121     		movs	r1, #1
 148 00d2 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 149              	.LVL13:
 234:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 150              		.loc 1 234 0
 151 00d6 2946     		mov	r1, r5
 152 00d8 4FF48050 		mov	r0, #4096
 153              		.loc 1 274 0
 154 00dc BDE83840 		pop	{r3, r4, r5, lr}
 155              	.LVL14:
 234:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 156              		.loc 1 234 0
 157 00e0 FFF7FEBF 		b	RCC_APB2PeriphResetCmd
 158              	.LVL15:
 159              	.L18:
 246:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Release SPI3 from reset state */
 160              		.loc 1 246 0
 161 00e4 4FF40040 		mov	r0, #32768
 162 00e8 0121     		movs	r1, #1
 163 00ea FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 164              	.LVL16:
 248:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 165              		.loc 1 248 0
 166 00ee 4FF40040 		mov	r0, #32768
 167 00f2 0021     		movs	r1, #0
 168              		.loc 1 274 0
 169 00f4 BDE83840 		pop	{r3, r4, r5, lr}
 170              	.LVL17:
 248:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 171              		.loc 1 248 0
 172 00f8 FFF7FEBF 		b	RCC_APB1PeriphResetCmd
 173              	.LVL18:
 174              	.L19:
 253:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Release SPI4 from reset state */
 175              		.loc 1 253 0
 176 00fc 4FF40050 		mov	r0, #8192
 177 0100 0121     		movs	r1, #1
 178 0102 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 179              	.LVL19:
 255:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 180              		.loc 1 255 0
 181 0106 4FF40050 		mov	r0, #8192
 182 010a 0021     		movs	r1, #0
 183              		.loc 1 274 0
 184 010c BDE83840 		pop	{r3, r4, r5, lr}
 185              	.LVL20:
 255:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 186              		.loc 1 255 0
 187 0110 FFF7FEBF 		b	RCC_APB2PeriphResetCmd
 188              	.LVL21:
 189              	.L20:
 260:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Release SPI5 from reset state */
 190              		.loc 1 260 0
 191 0114 4FF48010 		mov	r0, #1048576
 192 0118 0121     		movs	r1, #1
 193 011a FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 194              	.LVL22:
 262:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 195              		.loc 1 262 0
 196 011e 4FF48010 		mov	r0, #1048576
 197 0122 0021     		movs	r1, #0
 198              		.loc 1 274 0
 199 0124 BDE83840 		pop	{r3, r4, r5, lr}
 200              	.LVL23:
 262:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 201              		.loc 1 262 0
 202 0128 FFF7FEBF 		b	RCC_APB2PeriphResetCmd
 203              	.LVL24:
 204              		.cfi_endproc
 205              	.LFE123:
 207              		.section	.text.SPI_Init,"ax",%progbits
 208              		.align	2
 209              		.global	SPI_Init
 210              		.thumb
 211              		.thumb_func
 213              	SPI_Init:
 214              	.LFB124:
 275:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 276:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
 277:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief  Initializes the SPIx peripheral according to the specified 
 278:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         parameters in the SPI_InitStruct.
 279:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2, 3, 4, 5 or 6 to select the SPI peripheral.
 280:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPI_InitStruct: pointer to a SPI_InitTypeDef structure that
 281:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         contains the configuration information for the specified SPI peripheral.
 282:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @retval None
 283:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 284:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** void SPI_Init(SPI_TypeDef* SPIx, SPI_InitTypeDef* SPI_InitStruct)
 285:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** {
 215              		.loc 1 285 0
 216              		.cfi_startproc
 217              		@ args = 0, pretend = 0, frame = 0
 218              		@ frame_needed = 0, uses_anonymous_args = 0
 219              	.LVL25:
 286:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   uint16_t tmpreg = 0;
 287:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
 288:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* check the parameters */
 289:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 220              		.loc 1 289 0
 221 0000 4FF44052 		mov	r2, #12288
 222 0004 4FF46053 		mov	r3, #14336
 223 0008 C4F20102 		movt	r2, 16385
 224 000c C4F20003 		movt	r3, 16384
 225 0010 9042     		cmp	r0, r2
 226 0012 18BF     		it	ne
 227 0014 9842     		cmpne	r0, r3
 285:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   uint16_t tmpreg = 0;
 228              		.loc 1 285 0
 229 0016 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 230              	.LCFI1:
 231              		.cfi_def_cfa_offset 32
 232              		.cfi_offset 4, -32
 233              		.cfi_offset 5, -28
 234              		.cfi_offset 6, -24
 235              		.cfi_offset 7, -20
 236              		.cfi_offset 8, -16
 237              		.cfi_offset 9, -12
 238              		.cfi_offset 10, -8
 239              		.cfi_offset 14, -4
 285:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   uint16_t tmpreg = 0;
 240              		.loc 1 285 0
 241 001a 0546     		mov	r5, r0
 242 001c 0C46     		mov	r4, r1
 243              		.loc 1 289 0
 244 001e 0BD0     		beq	.L24
 245              		.loc 1 289 0 is_stmt 0 discriminator 1
 246 0020 4FF47052 		mov	r2, #15360
 247 0024 4FF45053 		mov	r3, #13312
 248 0028 C4F20002 		movt	r2, 16384
 249 002c C4F20103 		movt	r3, 16385
 250 0030 9042     		cmp	r0, r2
 251 0032 18BF     		it	ne
 252 0034 9842     		cmpne	r0, r3
 253 0036 78D1     		bne	.L70
 254              	.LVL26:
 255              	.L24:
 290:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
 291:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the SPI parameters */
 292:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_DIRECTION_MODE(SPI_InitStruct->SPI_Direction));
 256              		.loc 1 292 0 is_stmt 1
 257 0038 2288     		ldrh	r2, [r4]
 258 003a 4FF6FF33 		movw	r3, #64511
 259 003e 1340     		ands	r3, r3, r2
 260 0040 6BB1     		cbz	r3, .L25
 261              		.loc 1 292 0 is_stmt 0 discriminator 1
 262 0042 4BF6FF73 		movw	r3, #49151
 263 0046 1340     		ands	r3, r3, r2
 264 0048 B3F5004F 		cmp	r3, #32768
 265 004c 07D0     		beq	.L25
 266 004e 40F20000 		movw	r0, #:lower16:.LC0
 267 0052 C0F20000 		movt	r0, #:upper16:.LC0
 268 0056 4FF49271 		mov	r1, #292
 269 005a FFF7FEFF 		bl	assert_failed
 270              	.LVL27:
 271              	.L25:
 293:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_MODE(SPI_InitStruct->SPI_Mode));
 272              		.loc 1 293 0 is_stmt 1
 273 005e 6388     		ldrh	r3, [r4, #2]
 274 0060 002B     		cmp	r3, #0
 275 0062 18BF     		it	ne
 276 0064 B3F5827F 		cmpne	r3, #260
 277 0068 7ED1     		bne	.L71
 278              	.L26:
 294:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_DATASIZE(SPI_InitStruct->SPI_DataSize));
 279              		.loc 1 294 0
 280 006a A388     		ldrh	r3, [r4, #4]
 281 006c 23F40063 		bic	r3, r3, #2048
 282 0070 1B04     		lsls	r3, r3, #16
 283 0072 1B0C     		lsrs	r3, r3, #16
 284 0074 002B     		cmp	r3, #0
 285 0076 6ED1     		bne	.L72
 286              	.L27:
 295:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_CPOL(SPI_InitStruct->SPI_CPOL));
 287              		.loc 1 295 0
 288 0078 E388     		ldrh	r3, [r4, #6]
 289 007a 23F00203 		bic	r3, r3, #2
 290 007e 1B04     		lsls	r3, r3, #16
 291 0080 1B0C     		lsrs	r3, r3, #16
 292 0082 002B     		cmp	r3, #0
 293 0084 40F08B80 		bne	.L73
 294              	.L28:
 296:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_CPHA(SPI_InitStruct->SPI_CPHA));
 295              		.loc 1 296 0
 296 0088 2389     		ldrh	r3, [r4, #8]
 297 008a 012B     		cmp	r3, #1
 298 008c 07D9     		bls	.L29
 299              		.loc 1 296 0 is_stmt 0 discriminator 1
 300 008e 40F20000 		movw	r0, #:lower16:.LC0
 301 0092 C0F20000 		movt	r0, #:upper16:.LC0
 302 0096 4FF49471 		mov	r1, #296
 303 009a FFF7FEFF 		bl	assert_failed
 304              	.LVL28:
 305              	.L29:
 297:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_NSS(SPI_InitStruct->SPI_NSS));
 306              		.loc 1 297 0 is_stmt 1
 307 009e 6389     		ldrh	r3, [r4, #10]
 308 00a0 23F40073 		bic	r3, r3, #512
 309 00a4 1B04     		lsls	r3, r3, #16
 310 00a6 1B0C     		lsrs	r3, r3, #16
 311 00a8 002B     		cmp	r3, #0
 312 00aa 6FD1     		bne	.L74
 313              	.L30:
 298:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_BAUDRATE_PRESCALER(SPI_InitStruct->SPI_BaudRatePrescaler));
 314              		.loc 1 298 0
 315 00ac A389     		ldrh	r3, [r4, #12]
 316 00ae 23F01803 		bic	r3, r3, #24
 317 00b2 9BB2     		uxth	r3, r3
 318 00b4 002B     		cmp	r3, #0
 319 00b6 7BD1     		bne	.L34
 320              	.L31:
 299:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_FIRST_BIT(SPI_InitStruct->SPI_FirstBit));
 321              		.loc 1 299 0
 322 00b8 E389     		ldrh	r3, [r4, #14]
 323 00ba 23F08003 		bic	r3, r3, #128
 324 00be 1B04     		lsls	r3, r3, #16
 325 00c0 1B0C     		lsrs	r3, r3, #16
 326 00c2 002B     		cmp	r3, #0
 327 00c4 59D1     		bne	.L75
 328              	.L32:
 300:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_CRC_POLYNOMIAL(SPI_InitStruct->SPI_CRCPolynomial));
 329              		.loc 1 300 0
 330 00c6 238A     		ldrh	r3, [r4, #16]
 331 00c8 1F46     		mov	r7, r3
 332 00ca 43B9     		cbnz	r3, .L33
 333              		.loc 1 300 0 is_stmt 0 discriminator 1
 334 00cc 40F20000 		movw	r0, #:lower16:.LC0
 335 00d0 C0F20000 		movt	r0, #:upper16:.LC0
 336 00d4 4FF49671 		mov	r1, #300
 337 00d8 FFF7FEFF 		bl	assert_failed
 338              	.LVL29:
 339 00dc 278A     		ldrh	r7, [r4, #16]
 340              	.L33:
 301:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 302:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /*---------------------------- SPIx CR1 Configuration ------------------------*/
 303:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Get the SPIx CR1 value */
 304:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   tmpreg = SPIx->CR1;
 305:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Clear BIDIMode, BIDIOE, RxONLY, SSM, SSI, LSBFirst, BR, MSTR, CPOL and CPHA bits */
 306:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   tmpreg &= CR1_CLEAR_MASK;
 307:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Configure SPIx: direction, NSS management, first transmitted bit, BaudRate prescaler
 308:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****      master/salve mode, CPOL and CPHA */
 309:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Set BIDImode, BIDIOE and RxONLY bits according to SPI_Direction value */
 310:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Set SSM, SSI and MSTR bits according to SPI_Mode and SPI_NSS values */
 311:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Set LSBFirst bit according to SPI_FirstBit value */
 312:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Set BR bits according to SPI_BaudRatePrescaler value */
 313:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Set CPOL bit according to SPI_CPOL value */
 314:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Set CPHA bit according to SPI_CPHA value */
 315:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   tmpreg |= (uint16_t)((uint32_t)SPI_InitStruct->SPI_Direction | SPI_InitStruct->SPI_Mode |
 341              		.loc 1 315 0 is_stmt 1
 342 00de B4F802A0 		ldrh	r10, [r4, #2]
 343 00e2 2188     		ldrh	r1, [r4]
 344 00e4 B4F80490 		ldrh	r9, [r4, #4]
 345 00e8 B4F80680 		ldrh	r8, [r4, #6]
 346 00ec B4F808C0 		ldrh	ip, [r4, #8]
 347 00f0 6389     		ldrh	r3, [r4, #10]
 348 00f2 A689     		ldrh	r6, [r4, #12]
 304:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Clear BIDIMode, BIDIOE, RxONLY, SSM, SSI, LSBFirst, BR, MSTR, CPOL and CPHA bits */
 349              		.loc 1 304 0
 350 00f4 2A88     		ldrh	r2, [r5]
 351              	.LVL30:
 352              		.loc 1 315 0
 353 00f6 E089     		ldrh	r0, [r4, #14]
 354 00f8 4AEA0101 		orr	r1, r10, r1
 355 00fc 41EA0901 		orr	r1, r1, r9
 356 0100 41EA0801 		orr	r1, r1, r8
 357 0104 41EA0C01 		orr	r1, r1, ip
 358 0108 1943     		orrs	r1, r1, r3
 359 010a 3143     		orrs	r1, r1, r6
 360 010c 0143     		orrs	r1, r1, r0
 306:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Configure SPIx: direction, NSS management, first transmitted bit, BaudRate prescaler
 361              		.loc 1 306 0
 362 010e 02F44152 		and	r2, r2, #12352
 363              	.LVL31:
 364              		.loc 1 315 0
 365 0112 0A43     		orrs	r2, r2, r1
 366              	.LVL32:
 367 0114 92B2     		uxth	r2, r2
 368              	.LVL33:
 316:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****                   SPI_InitStruct->SPI_DataSize | SPI_InitStruct->SPI_CPOL |  
 317:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****                   SPI_InitStruct->SPI_CPHA | SPI_InitStruct->SPI_NSS |  
 318:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****                   SPI_InitStruct->SPI_BaudRatePrescaler | SPI_InitStruct->SPI_FirstBit);
 319:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Write to SPIx CR1 */
 320:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   SPIx->CR1 = tmpreg;
 369              		.loc 1 320 0
 370 0116 2A80     		strh	r2, [r5]	@ movhi
 321:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 322:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Activate the SPI mode (Reset I2SMOD bit in I2SCFGR register) */
 323:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   SPIx->I2SCFGR &= (uint16_t)~((uint16_t)SPI_I2SCFGR_I2SMOD);
 371              		.loc 1 323 0
 372 0118 AA8B     		ldrh	r2, [r5, #28]
 373              	.LVL34:
 374 011a 22F40063 		bic	r3, r2, #2048
 375 011e 1B04     		lsls	r3, r3, #16
 376 0120 1B0C     		lsrs	r3, r3, #16
 377 0122 AB83     		strh	r3, [r5, #28]	@ movhi
 324:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /*---------------------------- SPIx CRCPOLY Configuration --------------------*/
 325:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Write to SPIx CRCPOLY */
 326:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   SPIx->CRCPR = SPI_InitStruct->SPI_CRCPolynomial;
 378              		.loc 1 326 0
 379 0124 2F82     		strh	r7, [r5, #16]	@ movhi
 380 0126 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 381              	.LVL35:
 382              	.L70:
 289:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
 383              		.loc 1 289 0 discriminator 1
 384 012a 4FF4A042 		mov	r2, #20480
 385 012e 4FF4A843 		mov	r3, #21504
 386 0132 C4F20102 		movt	r2, 16385
 387 0136 C4F20103 		movt	r3, 16385
 388 013a 9042     		cmp	r0, r2
 389 013c 18BF     		it	ne
 390 013e 9842     		cmpne	r0, r3
 391 0140 3FF47AAF 		beq	.L24
 392 0144 40F20000 		movw	r0, #:lower16:.LC0
 393              	.LVL36:
 394 0148 C0F20000 		movt	r0, #:upper16:.LC0
 395 014c 40F22111 		movw	r1, #289
 396              	.LVL37:
 397 0150 FFF7FEFF 		bl	assert_failed
 398              	.LVL38:
 399 0154 70E7     		b	.L24
 400              	.L72:
 294:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_CPOL(SPI_InitStruct->SPI_CPOL));
 401              		.loc 1 294 0 discriminator 1
 402 0156 40F20000 		movw	r0, #:lower16:.LC0
 403 015a C0F20000 		movt	r0, #:upper16:.LC0
 404 015e 4FF49371 		mov	r1, #294
 405 0162 FFF7FEFF 		bl	assert_failed
 406              	.LVL39:
 407 0166 87E7     		b	.L27
 408              	.L71:
 293:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_DATASIZE(SPI_InitStruct->SPI_DataSize));
 409              		.loc 1 293 0 discriminator 1
 410 0168 40F20000 		movw	r0, #:lower16:.LC0
 411 016c C0F20000 		movt	r0, #:upper16:.LC0
 412 0170 40F22511 		movw	r1, #293
 413 0174 FFF7FEFF 		bl	assert_failed
 414              	.LVL40:
 415 0178 77E7     		b	.L26
 416              	.L75:
 299:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_CRC_POLYNOMIAL(SPI_InitStruct->SPI_CRCPolynomial));
 417              		.loc 1 299 0 discriminator 1
 418 017a 40F20000 		movw	r0, #:lower16:.LC0
 419 017e C0F20000 		movt	r0, #:upper16:.LC0
 420 0182 40F22B11 		movw	r1, #299
 421 0186 FFF7FEFF 		bl	assert_failed
 422              	.LVL41:
 423 018a 9CE7     		b	.L32
 424              	.L74:
 297:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_BAUDRATE_PRESCALER(SPI_InitStruct->SPI_BaudRatePrescaler));
 425              		.loc 1 297 0 discriminator 1
 426 018c 40F20000 		movw	r0, #:lower16:.LC0
 427 0190 C0F20000 		movt	r0, #:upper16:.LC0
 428 0194 40F22911 		movw	r1, #297
 429 0198 FFF7FEFF 		bl	assert_failed
 430              	.LVL42:
 431 019c 86E7     		b	.L30
 432              	.L73:
 295:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_CPHA(SPI_InitStruct->SPI_CPHA));
 433              		.loc 1 295 0 discriminator 1
 434 019e 40F20000 		movw	r0, #:lower16:.LC0
 435 01a2 C0F20000 		movt	r0, #:upper16:.LC0
 436 01a6 40F22711 		movw	r1, #295
 437 01aa FFF7FEFF 		bl	assert_failed
 438              	.LVL43:
 439 01ae 6BE7     		b	.L28
 440              	.L34:
 298:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_FIRST_BIT(SPI_InitStruct->SPI_FirstBit));
 441              		.loc 1 298 0 discriminator 1
 442 01b0 202B     		cmp	r3, #32
 443 01b2 81D0     		beq	.L31
 444 01b4 40F20000 		movw	r0, #:lower16:.LC0
 445 01b8 C0F20000 		movt	r0, #:upper16:.LC0
 446 01bc 4FF49571 		mov	r1, #298
 447 01c0 FFF7FEFF 		bl	assert_failed
 448              	.LVL44:
 449 01c4 78E7     		b	.L31
 450              		.cfi_endproc
 451              	.LFE124:
 453 01c6 00BF     		.section	.text.I2S_Init,"ax",%progbits
 454              		.align	2
 455              		.global	I2S_Init
 456              		.thumb
 457              		.thumb_func
 459              	I2S_Init:
 460              	.LFB125:
 327:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** }
 328:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 329:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
 330:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief  Initializes the SPIx peripheral according to the specified 
 331:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         parameters in the I2S_InitStruct.
 332:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPIx: where x can be  2 or 3 to select the SPI peripheral (configured in I2S mode).
 333:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  I2S_InitStruct: pointer to an I2S_InitTypeDef structure that
 334:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         contains the configuration information for the specified SPI peripheral
 335:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         configured in I2S mode.
 336:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *           
 337:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @note   The function calculates the optimal prescaler needed to obtain the most 
 338:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         accurate audio frequency (depending on the I2S clock source, the PLL values 
 339:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         and the product configuration). But in case the prescaler value is greater 
 340:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         than 511, the default value (0x02) will be configured instead.    
 341:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * 
 342:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @note   if an external clock is used as source clock for the I2S, then the define
 343:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         I2S_EXTERNAL_CLOCK_VAL in file stm32f4xx_conf.h should be enabled and set
 344:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         to the value of the source clock frequency (in Hz).
 345:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *  
 346:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @retval None
 347:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 348:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** void I2S_Init(SPI_TypeDef* SPIx, I2S_InitTypeDef* I2S_InitStruct)
 349:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** {
 461              		.loc 1 349 0
 462              		.cfi_startproc
 463              		@ args = 0, pretend = 0, frame = 0
 464              		@ frame_needed = 0, uses_anonymous_args = 0
 465              	.LVL45:
 350:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   uint16_t tmpreg = 0, i2sdiv = 2, i2sodd = 0, packetlength = 1;
 351:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   uint32_t tmp = 0, i2sclk = 0;
 352:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** #ifndef I2S_EXTERNAL_CLOCK_VAL
 353:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   uint32_t pllm = 0, plln = 0, pllr = 0;
 354:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** #endif /* I2S_EXTERNAL_CLOCK_VAL */
 355:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
 356:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the I2S parameters */
 357:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_23_PERIPH(SPIx));
 466              		.loc 1 357 0
 467 0000 4FF47052 		mov	r2, #15360
 468 0004 4FF46053 		mov	r3, #14336
 469 0008 C4F20002 		movt	r2, 16384
 470 000c C4F20003 		movt	r3, 16384
 471 0010 9042     		cmp	r0, r2
 472 0012 18BF     		it	ne
 473 0014 9842     		cmpne	r0, r3
 349:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   uint16_t tmpreg = 0, i2sdiv = 2, i2sodd = 0, packetlength = 1;
 474              		.loc 1 349 0
 475 0016 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 476              	.LCFI2:
 477              		.cfi_def_cfa_offset 32
 478              		.cfi_offset 4, -32
 479              		.cfi_offset 5, -28
 480              		.cfi_offset 6, -24
 481              		.cfi_offset 7, -20
 482              		.cfi_offset 8, -16
 483              		.cfi_offset 9, -12
 484              		.cfi_offset 10, -8
 485              		.cfi_offset 14, -4
 349:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   uint16_t tmpreg = 0, i2sdiv = 2, i2sodd = 0, packetlength = 1;
 486              		.loc 1 349 0
 487 001a 0546     		mov	r5, r0
 488 001c 0C46     		mov	r4, r1
 489              		.loc 1 357 0
 490 001e 40F0B680 		bne	.L125
 491              	.LVL46:
 492              	.L77:
 358:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_I2S_MODE(I2S_InitStruct->I2S_Mode));
 493              		.loc 1 358 0
 494 0022 2388     		ldrh	r3, [r4]
 495 0024 23F44073 		bic	r3, r3, #768
 496 0028 9BB2     		uxth	r3, r3
 497 002a 002B     		cmp	r3, #0
 498 002c 40F0D780 		bne	.L93
 359:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_I2S_STANDARD(I2S_InitStruct->I2S_Standard));
 499              		.loc 1 359 0
 500 0030 6288     		ldrh	r2, [r4, #2]
 501 0032 4FF6CF73 		movw	r3, #65487
 502 0036 1340     		ands	r3, r3, r2
 503 0038 4BB1     		cbz	r3, .L79
 504              	.L78:
 505              		.loc 1 359 0 is_stmt 0 discriminator 1
 506 003a B02A     		cmp	r2, #176
 507 003c 07D0     		beq	.L79
 508 003e 40F20000 		movw	r0, #:lower16:.LC0
 509 0042 C0F20000 		movt	r0, #:upper16:.LC0
 510 0046 40F26711 		movw	r1, #359
 511 004a FFF7FEFF 		bl	assert_failed
 512              	.LVL47:
 513              	.L79:
 360:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_I2S_DATA_FORMAT(I2S_InitStruct->I2S_DataFormat));
 514              		.loc 1 360 0 is_stmt 1
 515 004e A388     		ldrh	r3, [r4, #4]
 516 0050 032B     		cmp	r3, #3
 517 0052 18BF     		it	ne
 518 0054 012B     		cmpne	r3, #1
 519 0056 09D9     		bls	.L80
 520              		.loc 1 360 0 is_stmt 0 discriminator 1
 521 0058 052B     		cmp	r3, #5
 522 005a 07D0     		beq	.L80
 523 005c 40F20000 		movw	r0, #:lower16:.LC0
 524 0060 C0F20000 		movt	r0, #:upper16:.LC0
 525 0064 4FF4B471 		mov	r1, #360
 526 0068 FFF7FEFF 		bl	assert_failed
 527              	.LVL48:
 528              	.L80:
 361:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_I2S_MCLK_OUTPUT(I2S_InitStruct->I2S_MCLKOutput));
 529              		.loc 1 361 0 is_stmt 1
 530 006c E388     		ldrh	r3, [r4, #6]
 531 006e 23F40073 		bic	r3, r3, #512
 532 0072 1B04     		lsls	r3, r3, #16
 533 0074 1B0C     		lsrs	r3, r3, #16
 534 0076 002B     		cmp	r3, #0
 535 0078 40F0A580 		bne	.L126
 536              	.L81:
 362:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_I2S_AUDIO_FREQ(I2S_InitStruct->I2S_AudioFreq));
 537              		.loc 1 362 0
 538 007c A368     		ldr	r3, [r4, #8]
 539 007e 4CF6C062 		movw	r2, #52928
 540 0082 A3F5FA51 		sub	r1, r3, #8000
 541 0086 C0F20202 		movt	r2, 2
 542 008a 022B     		cmp	r3, #2
 543 008c 18BF     		it	ne
 544 008e 9142     		cmpne	r1, r2
 545 0090 00F29080 		bhi	.L127
 546              	.L82:
 363:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_I2S_CPOL(I2S_InitStruct->I2S_CPOL));  
 547              		.loc 1 363 0
 548 0094 A289     		ldrh	r2, [r4, #12]
 549 0096 4FF6F773 		movw	r3, #65527
 550 009a 1340     		ands	r3, r3, r2
 551 009c 1746     		mov	r7, r2
 552 009e 002B     		cmp	r3, #0
 553 00a0 7ED1     		bne	.L128
 554              	.L83:
 364:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 365:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /*----------------------- SPIx I2SCFGR & I2SPR Configuration -----------------*/
 366:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Clear I2SMOD, I2SE, I2SCFG, PCMSYNC, I2SSTD, CKPOL, DATLEN and CHLEN bits */
 367:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   SPIx->I2SCFGR &= I2SCFGR_CLEAR_MASK; 
 555              		.loc 1 367 0
 556 00a2 AB8B     		ldrh	r3, [r5, #28]
 368:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   SPIx->I2SPR = 0x0002;
 369:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
 370:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Get the I2SCFGR register value */
 371:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   tmpreg = SPIx->I2SCFGR;
 372:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
 373:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* If the default value has to be written, reinitialize i2sdiv and i2sodd*/
 374:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   if(I2S_InitStruct->I2S_AudioFreq == I2S_AudioFreq_Default)
 557              		.loc 1 374 0
 558 00a4 A268     		ldr	r2, [r4, #8]
 367:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   SPIx->I2SPR = 0x0002;
 559              		.loc 1 367 0
 560 00a6 23F47B63 		bic	r3, r3, #4016
 561 00aa 23F00F03 		bic	r3, r3, #15
 562 00ae 1B04     		lsls	r3, r3, #16
 368:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   SPIx->I2SPR = 0x0002;
 563              		.loc 1 368 0
 564 00b0 0221     		movs	r1, #2
 367:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   SPIx->I2SPR = 0x0002;
 565              		.loc 1 367 0
 566 00b2 1B0C     		lsrs	r3, r3, #16
 567 00b4 AB83     		strh	r3, [r5, #28]	@ movhi
 368:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   SPIx->I2SPR = 0x0002;
 568              		.loc 1 368 0
 569 00b6 2984     		strh	r1, [r5, #32]	@ movhi
 371:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
 570              		.loc 1 371 0
 571 00b8 B5F81CC0 		ldrh	ip, [r5, #28]
 572              		.loc 1 374 0
 573 00bc 8A42     		cmp	r2, r1
 371:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
 574              		.loc 1 371 0
 575 00be 1FFA8CFC 		uxth	ip, ip
 576              	.LVL49:
 577              		.loc 1 374 0
 578 00c2 00F08980 		beq	.L129
 375:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 376:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     i2sodd = (uint16_t)0;
 377:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     i2sdiv = (uint16_t)2;   
 378:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 379:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* If the requested audio frequency is not the default, compute the prescaler */
 380:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   else
 381:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 382:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Check the frame length (For the Prescaler computing) *******************/
 383:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     if(I2S_InitStruct->I2S_DataFormat == I2S_DataFormat_16b)
 384:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     {
 385:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       /* Packet length is 16 bits */
 386:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       packetlength = 1;
 387:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     }
 388:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     else
 389:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     {
 390:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       /* Packet length is 32 bits */
 391:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       packetlength = 2;
 392:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     }
 393:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 394:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Get I2S source Clock frequency  ****************************************/
 395:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       
 396:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* If an external I2S clock has to be used, this define should be set  
 397:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        in the project configuration or in the stm32f4xx_conf.h file */
 398:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   #ifdef I2S_EXTERNAL_CLOCK_VAL     
 399:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Set external clock as I2S clock source */
 400:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     if ((RCC->CFGR & RCC_CFGR_I2SSRC) == 0)
 401:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     {
 402:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       RCC->CFGR |= (uint32_t)RCC_CFGR_I2SSRC;
 403:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     }
 404:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     
 405:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Set the I2S clock to the external clock  value */
 406:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     i2sclk = I2S_EXTERNAL_CLOCK_VAL;
 407:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 408:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   #else /* There is no define for External I2S clock source */
 409:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Set PLLI2S as I2S clock source */
 410:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     if ((RCC->CFGR & RCC_CFGR_I2SSRC) != 0)
 579              		.loc 1 410 0
 580 00c6 4FF46053 		mov	r3, #14336
 581 00ca C4F20203 		movt	r3, 16386
 383:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     {
 582              		.loc 1 383 0
 583 00ce A188     		ldrh	r1, [r4, #4]
 584              		.loc 1 410 0
 585 00d0 9868     		ldr	r0, [r3, #8]
 383:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     {
 586              		.loc 1 383 0
 587 00d2 0029     		cmp	r1, #0
 588 00d4 0CBF     		ite	eq
 589 00d6 4FF02009 		moveq	r9, #32
 590 00da 4FF04009 		movne	r9, #64
 591              	.LVL50:
 592              		.loc 1 410 0
 593 00de 0602     		lsls	r6, r0, #8
 411:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     {
 412:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       RCC->CFGR &= ~(uint32_t)RCC_CFGR_I2SSRC;
 594              		.loc 1 412 0
 595 00e0 42BF     		ittt	mi
 596 00e2 9868     		ldrmi	r0, [r3, #8]
 597 00e4 20F40000 		bicmi	r0, r0, #8388608
 598 00e8 9860     		strmi	r0, [r3, #8]
 413:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     }    
 414:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     
 415:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Get the PLLI2SN value */
 416:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     plln = (uint32_t)(((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SN) >> 6) & \
 599              		.loc 1 416 0
 600 00ea 4FF46053 		mov	r3, #14336
 601 00ee C4F20203 		movt	r3, 16386
 602 00f2 D3F88460 		ldr	r6, [r3, #132]
 417:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****                       (RCC_PLLI2SCFGR_PLLI2SN >> 6));
 418:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     
 419:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Get the PLLI2SR value */
 420:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     pllr = (uint32_t)(((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> 28) & \
 603              		.loc 1 420 0
 604 00f6 D3F884A0 		ldr	r10, [r3, #132]
 421:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****                       (RCC_PLLI2SCFGR_PLLI2SR >> 28));
 422:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     
 423:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Get the PLLM value */
 424:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     pllm = (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM);
 605              		.loc 1 424 0
 606 00fa D3F80480 		ldr	r8, [r3, #4]
 425:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 426:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     if((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)
 607              		.loc 1 426 0
 608 00fe 5868     		ldr	r0, [r3, #4]
 609 0100 4002     		lsls	r0, r0, #9
 427:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     {
 428:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       /* Get the I2S source clock value */
 429:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       i2sclk = (uint32_t)(((HSE_VALUE / pllm) * plln) / pllr);
 610              		.loc 1 429 0
 611 0102 4CBF     		ite	mi
 612 0104 4FF49050 		movmi	r0, #4608
 430:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     }
 431:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     else
 432:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     { /* Get the I2S source clock value */
 433:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       i2sclk = (uint32_t)(((HSI_VALUE / pllm) * plln) / pllr);
 613              		.loc 1 433 0
 614 0108 4FF41050 		movpl	r0, #9216
 424:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 615              		.loc 1 424 0
 616 010c 08F03F08 		and	r8, r8, #63
 429:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     }
 617              		.loc 1 429 0
 618 0110 4CBF     		ite	mi
 619 0112 C0F27A00 		movtmi	r0, 122
 620              		.loc 1 433 0
 621 0116 C0F2F400 		movtpl	r0, 244
 416:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****                       (RCC_PLLI2SCFGR_PLLI2SN >> 6));
 622              		.loc 1 416 0
 623 011a C6F38816 		ubfx	r6, r6, #6, #9
 624              	.LVL51:
 625              		.loc 1 433 0
 626 011e B0FBF8F0 		udiv	r0, r0, r8
 420:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****                       (RCC_PLLI2SCFGR_PLLI2SR >> 28));
 627              		.loc 1 420 0
 628 0122 CAF30273 		ubfx	r3, r10, #28, #3
 629              	.LVL52:
 630              		.loc 1 433 0
 631 0126 06FB00F0 		mul	r0, r6, r0
 632 012a B0FBF3F0 		udiv	r0, r0, r3
 633              	.LVL53:
 434:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     }
 435:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   #endif /* I2S_EXTERNAL_CLOCK_VAL */
 436:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     
 437:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Compute the Real divider depending on the MCLK output state, with a floating point */
 438:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     if(I2S_InitStruct->I2S_MCLKOutput == I2S_MCLKOutput_Enable)
 634              		.loc 1 438 0
 635 012e E388     		ldrh	r3, [r4, #6]
 636              	.LVL54:
 637 0130 B3F5007F 		cmp	r3, #512
 439:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     {
 440:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       /* MCLK output is enabled */
 441:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       tmp = (uint16_t)(((((i2sclk / 256) * 10) / I2S_InitStruct->I2S_AudioFreq)) + 5);
 638              		.loc 1 441 0
 639 0134 0CBF     		ite	eq
 640 0136 000A     		lsreq	r0, r0, #8
 641              	.LVL55:
 442:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     }
 443:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     else
 444:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     {
 445:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       /* MCLK output is disabled */
 446:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       tmp = (uint16_t)(((((i2sclk / (32 * packetlength)) *10 ) / I2S_InitStruct->I2S_AudioFreq)) + 
 642              		.loc 1 446 0
 643 0138 B0FBF9F0 		udivne	r0, r0, r9
 644 013c 00EB8000 		add	r0, r0, r0, lsl #2
 645 0140 4000     		lsls	r0, r0, #1
 646 0142 B0FBF2F0 		udiv	r0, r0, r2
 647 0146 0530     		adds	r0, r0, #5
 447:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     }
 448:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     
 449:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Remove the flatting point */
 450:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     tmp = tmp / 10;  
 648              		.loc 1 450 0
 649 0148 4CF6CD46 		movw	r6, #52429
 650              	.LVL56:
 651 014c CCF6CC46 		movt	r6, 52428
 446:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     }
 652              		.loc 1 446 0
 653 0150 80B2     		uxth	r0, r0
 654              	.LVL57:
 655              		.loc 1 450 0
 656 0152 A6FB0020 		umull	r2, r0, r6, r0
 657              	.LVL58:
 658 0156 C008     		lsrs	r0, r0, #3
 659              	.LVL59:
 451:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       
 452:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Check the parity of the divider */
 453:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     i2sodd = (uint16_t)(tmp & (uint16_t)0x0001);
 454:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****    
 455:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Compute the i2sdiv prescaler */
 456:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     i2sdiv = (uint16_t)((tmp - i2sodd) / 2);
 660              		.loc 1 456 0
 661 0158 4608     		lsrs	r6, r0, #1
 457:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****    
 458:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Get the Mask for the Odd bit (SPI_I2SPR[8]) register */
 459:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     i2sodd = (uint16_t) (i2sodd << 8);
 460:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 461:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 462:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Test if the divider is 1 or 0 or greater than 0xFF */
 463:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   if ((i2sdiv < 2) || (i2sdiv > 0xFF))
 662              		.loc 1 463 0
 663 015a A6F10208 		sub	r8, r6, #2
 664              	.LVL60:
 665 015e B8F1FD0F 		cmp	r8, #253
 456:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****    
 666              		.loc 1 456 0
 667 0162 00F00100 		and	r0, r0, #1
 668              	.LVL61:
 669 0166 94BF     		ite	ls
 670 0168 46EA0022 		orrls	r2, r6, r0, lsl #8
 671              	.LVL62:
 672 016c 0222     		movhi	r2, #2
 673              	.LVL63:
 674              	.L92:
 464:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 465:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Set the default values */
 466:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     i2sdiv = 2;
 467:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     i2sodd = 0;
 468:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 469:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 470:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Write to SPIx I2SPR register the computed value */
 471:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   SPIx->I2SPR = (uint16_t)((uint16_t)i2sdiv | (uint16_t)(i2sodd | (uint16_t)I2S_InitStruct->I2S_MCL
 472:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  
 473:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Configure the I2S with the SPI_InitStruct values */
 474:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   tmpreg |= (uint16_t)((uint16_t)SPI_I2SCFGR_I2SMOD | (uint16_t)(I2S_InitStruct->I2S_Mode | \
 475:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 675              		.loc 1 475 0
 676 016e 2688     		ldrh	r6, [r4]
 474:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 677              		.loc 1 474 0
 678 0170 6088     		ldrh	r0, [r4, #2]
 679              		.loc 1 475 0
 680 0172 4CEA0604 		orr	r4, ip, r6
 681              	.LVL64:
 682 0176 44F40064 		orr	r4, r4, #2048
 474:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 683              		.loc 1 474 0
 684 017a 0443     		orrs	r4, r4, r0
 685 017c 3C43     		orrs	r4, r4, r7
 471:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  
 686              		.loc 1 471 0
 687 017e 1343     		orrs	r3, r3, r2
 474:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 688              		.loc 1 474 0
 689 0180 A4B2     		uxth	r4, r4
 471:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  
 690              		.loc 1 471 0
 691 0182 9BB2     		uxth	r3, r3
 474:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 692              		.loc 1 474 0
 693 0184 2143     		orrs	r1, r1, r4
 694              	.LVL65:
 471:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  
 695              		.loc 1 471 0
 696 0186 2B84     		strh	r3, [r5, #32]	@ movhi
 476:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****                   (uint16_t)I2S_InitStruct->I2S_CPOL))));
 477:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  
 478:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Write to SPIx I2SCFGR */  
 479:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   SPIx->I2SCFGR = tmpreg;
 697              		.loc 1 479 0
 698 0188 A983     		strh	r1, [r5, #28]	@ movhi
 699 018a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 700              	.LVL66:
 701              	.L125:
 357:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_I2S_MODE(I2S_InitStruct->I2S_Mode));
 702              		.loc 1 357 0 discriminator 1
 703 018e 40F20000 		movw	r0, #:lower16:.LC0
 704              	.LVL67:
 705 0192 C0F20000 		movt	r0, #:upper16:.LC0
 706 0196 40F26511 		movw	r1, #357
 707              	.LVL68:
 708 019a FFF7FEFF 		bl	assert_failed
 709              	.LVL69:
 710 019e 40E7     		b	.L77
 711              	.L128:
 363:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 712              		.loc 1 363 0 discriminator 1
 713 01a0 40F20000 		movw	r0, #:lower16:.LC0
 714 01a4 C0F20000 		movt	r0, #:upper16:.LC0
 715 01a8 40F26B11 		movw	r1, #363
 716 01ac FFF7FEFF 		bl	assert_failed
 717              	.LVL70:
 718 01b0 A789     		ldrh	r7, [r4, #12]
 719 01b2 76E7     		b	.L83
 720              	.L127:
 362:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_I2S_CPOL(I2S_InitStruct->I2S_CPOL));  
 721              		.loc 1 362 0 discriminator 1
 722 01b4 40F20000 		movw	r0, #:lower16:.LC0
 723 01b8 C0F20000 		movt	r0, #:upper16:.LC0
 724 01bc 4FF4B571 		mov	r1, #362
 725 01c0 FFF7FEFF 		bl	assert_failed
 726              	.LVL71:
 727 01c4 66E7     		b	.L82
 728              	.L126:
 361:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_I2S_AUDIO_FREQ(I2S_InitStruct->I2S_AudioFreq));
 729              		.loc 1 361 0 discriminator 1
 730 01c6 40F20000 		movw	r0, #:lower16:.LC0
 731 01ca C0F20000 		movt	r0, #:upper16:.LC0
 732 01ce 40F26911 		movw	r1, #361
 733 01d2 FFF7FEFF 		bl	assert_failed
 734              	.LVL72:
 735 01d6 51E7     		b	.L81
 736              	.LVL73:
 737              	.L129:
 738 01d8 A188     		ldrh	r1, [r4, #4]
 739 01da E388     		ldrh	r3, [r4, #6]
 740 01dc C7E7     		b	.L92
 741              	.LVL74:
 742              	.L93:
 358:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_I2S_STANDARD(I2S_InitStruct->I2S_Standard));
 743              		.loc 1 358 0 discriminator 1
 744 01de 40F20000 		movw	r0, #:lower16:.LC0
 745 01e2 C0F20000 		movt	r0, #:upper16:.LC0
 746 01e6 4FF4B371 		mov	r1, #358
 747 01ea FFF7FEFF 		bl	assert_failed
 748              	.LVL75:
 359:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_I2S_DATA_FORMAT(I2S_InitStruct->I2S_DataFormat));
 749              		.loc 1 359 0 discriminator 1
 750 01ee 6288     		ldrh	r2, [r4, #2]
 751 01f0 4FF6CF73 		movw	r3, #65487
 752 01f4 1340     		ands	r3, r3, r2
 753 01f6 002B     		cmp	r3, #0
 754 01f8 7FF41FAF 		bne	.L78
 755 01fc 27E7     		b	.L79
 756              		.cfi_endproc
 757              	.LFE125:
 759 01fe 00BF     		.section	.text.SPI_StructInit,"ax",%progbits
 760              		.align	2
 761              		.global	SPI_StructInit
 762              		.thumb
 763              		.thumb_func
 765              	SPI_StructInit:
 766              	.LFB126:
 480:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** }
 481:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 482:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
 483:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief  Fills each SPI_InitStruct member with its default value.
 484:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPI_InitStruct: pointer to a SPI_InitTypeDef structure which will be initialized.
 485:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @retval None
 486:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 487:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** void SPI_StructInit(SPI_InitTypeDef* SPI_InitStruct)
 488:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** {
 767              		.loc 1 488 0
 768              		.cfi_startproc
 769              		@ args = 0, pretend = 0, frame = 0
 770              		@ frame_needed = 0, uses_anonymous_args = 0
 771              		@ link register save eliminated.
 772              	.LVL76:
 489:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /*--------------- Reset SPI init structure parameters values -----------------*/
 490:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Initialize the SPI_Direction member */
 491:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   SPI_InitStruct->SPI_Direction = SPI_Direction_2Lines_FullDuplex;
 773              		.loc 1 491 0
 774 0000 0023     		movs	r3, #0
 492:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* initialize the SPI_Mode member */
 493:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   SPI_InitStruct->SPI_Mode = SPI_Mode_Slave;
 494:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* initialize the SPI_DataSize member */
 495:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   SPI_InitStruct->SPI_DataSize = SPI_DataSize_8b;
 496:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Initialize the SPI_CPOL member */
 497:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   SPI_InitStruct->SPI_CPOL = SPI_CPOL_Low;
 498:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Initialize the SPI_CPHA member */
 499:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   SPI_InitStruct->SPI_CPHA = SPI_CPHA_1Edge;
 500:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Initialize the SPI_NSS member */
 501:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   SPI_InitStruct->SPI_NSS = SPI_NSS_Hard;
 502:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Initialize the SPI_BaudRatePrescaler member */
 503:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   SPI_InitStruct->SPI_BaudRatePrescaler = SPI_BaudRatePrescaler_2;
 504:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Initialize the SPI_FirstBit member */
 505:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   SPI_InitStruct->SPI_FirstBit = SPI_FirstBit_MSB;
 506:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Initialize the SPI_CRCPolynomial member */
 507:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   SPI_InitStruct->SPI_CRCPolynomial = 7;
 775              		.loc 1 507 0
 776 0002 0722     		movs	r2, #7
 777 0004 0282     		strh	r2, [r0, #16]	@ movhi
 491:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* initialize the SPI_Mode member */
 778              		.loc 1 491 0
 779 0006 0380     		strh	r3, [r0]	@ movhi
 493:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* initialize the SPI_DataSize member */
 780              		.loc 1 493 0
 781 0008 4380     		strh	r3, [r0, #2]	@ movhi
 495:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Initialize the SPI_CPOL member */
 782              		.loc 1 495 0
 783 000a 8380     		strh	r3, [r0, #4]	@ movhi
 497:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Initialize the SPI_CPHA member */
 784              		.loc 1 497 0
 785 000c C380     		strh	r3, [r0, #6]	@ movhi
 499:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Initialize the SPI_NSS member */
 786              		.loc 1 499 0
 787 000e 0381     		strh	r3, [r0, #8]	@ movhi
 501:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Initialize the SPI_BaudRatePrescaler member */
 788              		.loc 1 501 0
 789 0010 4381     		strh	r3, [r0, #10]	@ movhi
 503:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Initialize the SPI_FirstBit member */
 790              		.loc 1 503 0
 791 0012 8381     		strh	r3, [r0, #12]	@ movhi
 505:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Initialize the SPI_CRCPolynomial member */
 792              		.loc 1 505 0
 793 0014 C381     		strh	r3, [r0, #14]	@ movhi
 794 0016 7047     		bx	lr
 795              		.cfi_endproc
 796              	.LFE126:
 798              		.section	.text.I2S_StructInit,"ax",%progbits
 799              		.align	2
 800              		.global	I2S_StructInit
 801              		.thumb
 802              		.thumb_func
 804              	I2S_StructInit:
 805              	.LFB127:
 508:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** }
 509:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 510:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
 511:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief  Fills each I2S_InitStruct member with its default value.
 512:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  I2S_InitStruct: pointer to a I2S_InitTypeDef structure which will be initialized.
 513:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @retval None
 514:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 515:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** void I2S_StructInit(I2S_InitTypeDef* I2S_InitStruct)
 516:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** {
 806              		.loc 1 516 0
 807              		.cfi_startproc
 808              		@ args = 0, pretend = 0, frame = 0
 809              		@ frame_needed = 0, uses_anonymous_args = 0
 810              		@ link register save eliminated.
 811              	.LVL77:
 517:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /*--------------- Reset I2S init structure parameters values -----------------*/
 518:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Initialize the I2S_Mode member */
 519:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   I2S_InitStruct->I2S_Mode = I2S_Mode_SlaveTx;
 812              		.loc 1 519 0
 813 0000 0023     		movs	r3, #0
 520:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
 521:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Initialize the I2S_Standard member */
 522:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   I2S_InitStruct->I2S_Standard = I2S_Standard_Phillips;
 523:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
 524:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Initialize the I2S_DataFormat member */
 525:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   I2S_InitStruct->I2S_DataFormat = I2S_DataFormat_16b;
 526:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
 527:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Initialize the I2S_MCLKOutput member */
 528:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   I2S_InitStruct->I2S_MCLKOutput = I2S_MCLKOutput_Disable;
 529:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
 530:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Initialize the I2S_AudioFreq member */
 531:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   I2S_InitStruct->I2S_AudioFreq = I2S_AudioFreq_Default;
 814              		.loc 1 531 0
 815 0002 0222     		movs	r2, #2
 816 0004 8260     		str	r2, [r0, #8]
 519:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
 817              		.loc 1 519 0
 818 0006 0360     		str	r3, [r0]
 819 0008 4360     		str	r3, [r0, #4]
 532:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
 533:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Initialize the I2S_CPOL member */
 534:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   I2S_InitStruct->I2S_CPOL = I2S_CPOL_Low;
 820              		.loc 1 534 0
 821 000a 8381     		strh	r3, [r0, #12]	@ movhi
 822 000c 7047     		bx	lr
 823              		.cfi_endproc
 824              	.LFE127:
 826 000e 00BF     		.section	.text.SPI_Cmd,"ax",%progbits
 827              		.align	2
 828              		.global	SPI_Cmd
 829              		.thumb
 830              		.thumb_func
 832              	SPI_Cmd:
 833              	.LFB128:
 535:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** }
 536:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 537:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
 538:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief  Enables or disables the specified SPI peripheral.
 539:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2, 3, 4, 5 or 6 to select the SPI peripheral.
 540:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  NewState: new state of the SPIx peripheral. 
 541:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          This parameter can be: ENABLE or DISABLE.
 542:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @retval None
 543:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 544:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** void SPI_Cmd(SPI_TypeDef* SPIx, FunctionalState NewState)
 545:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** {
 834              		.loc 1 545 0
 835              		.cfi_startproc
 836              		@ args = 0, pretend = 0, frame = 0
 837              		@ frame_needed = 0, uses_anonymous_args = 0
 838              	.LVL78:
 839 0000 38B5     		push	{r3, r4, r5, lr}
 840              	.LCFI3:
 841              		.cfi_def_cfa_offset 16
 842              		.cfi_offset 3, -16
 843              		.cfi_offset 4, -12
 844              		.cfi_offset 5, -8
 845              		.cfi_offset 14, -4
 546:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
 547:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 846              		.loc 1 547 0
 847 0002 4FF44052 		mov	r2, #12288
 848 0006 4FF46053 		mov	r3, #14336
 849 000a C4F20102 		movt	r2, 16385
 850 000e C4F20003 		movt	r3, 16384
 851 0012 9042     		cmp	r0, r2
 852 0014 18BF     		it	ne
 853 0016 9842     		cmpne	r0, r3
 545:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
 854              		.loc 1 545 0
 855 0018 0446     		mov	r4, r0
 856 001a 0D46     		mov	r5, r1
 857              		.loc 1 547 0
 858 001c 0BD0     		beq	.L133
 859              		.loc 1 547 0 is_stmt 0 discriminator 1
 860 001e 4FF47052 		mov	r2, #15360
 861 0022 4FF45053 		mov	r3, #13312
 862 0026 C4F20002 		movt	r2, 16384
 863 002a C4F20103 		movt	r3, 16385
 864 002e 9042     		cmp	r0, r2
 865 0030 18BF     		it	ne
 866 0032 9842     		cmpne	r0, r3
 867 0034 0FD1     		bne	.L147
 868              	.LVL79:
 869              	.L133:
 548:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 870              		.loc 1 548 0 is_stmt 1
 871 0036 012D     		cmp	r5, #1
 872 0038 22D9     		bls	.L134
 873              		.loc 1 548 0 is_stmt 0 discriminator 1
 874 003a 40F20000 		movw	r0, #:lower16:.LC0
 875 003e C0F20000 		movt	r0, #:upper16:.LC0
 876 0042 4FF40971 		mov	r1, #548
 877 0046 FFF7FEFF 		bl	assert_failed
 878              	.LVL80:
 879              	.L135:
 549:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   if (NewState != DISABLE)
 550:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 551:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Enable the selected SPI peripheral */
 552:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     SPIx->CR1 |= SPI_CR1_SPE;
 880              		.loc 1 552 0 is_stmt 1
 881 004a 2388     		ldrh	r3, [r4]
 882 004c 9BB2     		uxth	r3, r3
 883 004e 43F04003 		orr	r3, r3, #64
 884 0052 2380     		strh	r3, [r4]	@ movhi
 885 0054 38BD     		pop	{r3, r4, r5, pc}
 886              	.LVL81:
 887              	.L147:
 547:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 888              		.loc 1 547 0 discriminator 1
 889 0056 4FF4A042 		mov	r2, #20480
 890 005a 4FF4A843 		mov	r3, #21504
 891 005e C4F20102 		movt	r2, 16385
 892 0062 C4F20103 		movt	r3, 16385
 893 0066 9042     		cmp	r0, r2
 894 0068 18BF     		it	ne
 895 006a 9842     		cmpne	r0, r3
 896 006c E3D0     		beq	.L133
 897 006e 40F20000 		movw	r0, #:lower16:.LC0
 898              	.LVL82:
 899 0072 C0F20000 		movt	r0, #:upper16:.LC0
 900 0076 40F22321 		movw	r1, #547
 901              	.LVL83:
 902 007a FFF7FEFF 		bl	assert_failed
 903              	.LVL84:
 904 007e DAE7     		b	.L133
 905              	.L134:
 549:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   if (NewState != DISABLE)
 906              		.loc 1 549 0
 907 0080 002D     		cmp	r5, #0
 908 0082 E2D1     		bne	.L135
 553:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 554:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   else
 555:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 556:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Disable the selected SPI peripheral */
 557:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     SPIx->CR1 &= (uint16_t)~((uint16_t)SPI_CR1_SPE);
 909              		.loc 1 557 0
 910 0084 2388     		ldrh	r3, [r4]
 911 0086 23F04003 		bic	r3, r3, #64
 912 008a 1B04     		lsls	r3, r3, #16
 913 008c 1B0C     		lsrs	r3, r3, #16
 914 008e 2380     		strh	r3, [r4]	@ movhi
 915 0090 38BD     		pop	{r3, r4, r5, pc}
 916              		.cfi_endproc
 917              	.LFE128:
 919 0092 00BF     		.section	.text.I2S_Cmd,"ax",%progbits
 920              		.align	2
 921              		.global	I2S_Cmd
 922              		.thumb
 923              		.thumb_func
 925              	I2S_Cmd:
 926              	.LFB129:
 558:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 559:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** }
 560:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 561:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
 562:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief  Enables or disables the specified SPI peripheral (in I2S mode).
 563:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 2 or 3 to select the SPI peripheral (or I2Sxext 
 564:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         for full duplex mode).
 565:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  NewState: new state of the SPIx peripheral. 
 566:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         This parameter can be: ENABLE or DISABLE.
 567:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @retval None
 568:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 569:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** void I2S_Cmd(SPI_TypeDef* SPIx, FunctionalState NewState)
 570:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** {
 927              		.loc 1 570 0
 928              		.cfi_startproc
 929              		@ args = 0, pretend = 0, frame = 0
 930              		@ frame_needed = 0, uses_anonymous_args = 0
 931              	.LVL85:
 932 0000 38B5     		push	{r3, r4, r5, lr}
 933              	.LCFI4:
 934              		.cfi_def_cfa_offset 16
 935              		.cfi_offset 3, -16
 936              		.cfi_offset 4, -12
 937              		.cfi_offset 5, -8
 938              		.cfi_offset 14, -4
 571:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
 572:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_23_PERIPH_EXT(SPIx));
 939              		.loc 1 572 0
 940 0002 4FF46052 		mov	r2, #14336
 941 0006 4FF47053 		mov	r3, #15360
 942 000a C4F20002 		movt	r2, 16384
 943 000e C4F20003 		movt	r3, 16384
 944 0012 9042     		cmp	r0, r2
 945 0014 18BF     		it	ne
 946 0016 9842     		cmpne	r0, r3
 570:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
 947              		.loc 1 570 0
 948 0018 0446     		mov	r4, r0
 949 001a 0D46     		mov	r5, r1
 950              		.loc 1 572 0
 951 001c 08D0     		beq	.L149
 952              		.loc 1 572 0 is_stmt 0 discriminator 1
 953 001e 4FF45053 		mov	r3, #13312
 954 0022 C4F20003 		movt	r3, 16384
 955 0026 9842     		cmp	r0, r3
 956 0028 18BF     		it	ne
 957 002a B0F1402F 		cmpne	r0, #1073758208
 958 002e 18D1     		bne	.L160
 959              	.LVL86:
 960              	.L149:
 573:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 961              		.loc 1 573 0 is_stmt 1
 962 0030 012D     		cmp	r5, #1
 963 0032 0DD9     		bls	.L150
 964              		.loc 1 573 0 is_stmt 0 discriminator 1
 965 0034 40F20000 		movw	r0, #:lower16:.LC0
 966 0038 C0F20000 		movt	r0, #:upper16:.LC0
 967 003c 40F23D21 		movw	r1, #573
 968 0040 FFF7FEFF 		bl	assert_failed
 969              	.LVL87:
 970              	.L151:
 574:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
 575:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   if (NewState != DISABLE)
 576:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 577:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Enable the selected SPI peripheral (in I2S mode) */
 578:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     SPIx->I2SCFGR |= SPI_I2SCFGR_I2SE;
 971              		.loc 1 578 0 is_stmt 1
 972 0044 A38B     		ldrh	r3, [r4, #28]
 973 0046 9BB2     		uxth	r3, r3
 974 0048 43F48063 		orr	r3, r3, #1024
 975 004c A383     		strh	r3, [r4, #28]	@ movhi
 976 004e 38BD     		pop	{r3, r4, r5, pc}
 977              	.LVL88:
 978              	.L150:
 575:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 979              		.loc 1 575 0
 980 0050 002D     		cmp	r5, #0
 981 0052 F7D1     		bne	.L151
 579:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 580:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   else
 581:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 582:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Disable the selected SPI peripheral in I2S mode */
 583:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     SPIx->I2SCFGR &= (uint16_t)~((uint16_t)SPI_I2SCFGR_I2SE);
 982              		.loc 1 583 0
 983 0054 A38B     		ldrh	r3, [r4, #28]
 984 0056 23F48063 		bic	r3, r3, #1024
 985 005a 1B04     		lsls	r3, r3, #16
 986 005c 1B0C     		lsrs	r3, r3, #16
 987 005e A383     		strh	r3, [r4, #28]	@ movhi
 988 0060 38BD     		pop	{r3, r4, r5, pc}
 989              	.LVL89:
 990              	.L160:
 572:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 991              		.loc 1 572 0 discriminator 1
 992 0062 40F20000 		movw	r0, #:lower16:.LC0
 993              	.LVL90:
 994 0066 C0F20000 		movt	r0, #:upper16:.LC0
 995 006a 4FF40F71 		mov	r1, #572
 996              	.LVL91:
 997 006e FFF7FEFF 		bl	assert_failed
 998              	.LVL92:
 999 0072 DDE7     		b	.L149
 1000              		.cfi_endproc
 1001              	.LFE129:
 1003              		.section	.text.SPI_DataSizeConfig,"ax",%progbits
 1004              		.align	2
 1005              		.global	SPI_DataSizeConfig
 1006              		.thumb
 1007              		.thumb_func
 1009              	SPI_DataSizeConfig:
 1010              	.LFB130:
 584:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 585:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** }
 586:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 587:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
 588:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief  Configures the data size for the selected SPI.
 589:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2, 3, 4, 5 or 6 to select the SPI peripheral.
 590:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPI_DataSize: specifies the SPI data size.
 591:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          This parameter can be one of the following values:
 592:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_DataSize_16b: Set data frame format to 16bit
 593:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_DataSize_8b: Set data frame format to 8bit
 594:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @retval None
 595:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 596:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** void SPI_DataSizeConfig(SPI_TypeDef* SPIx, uint16_t SPI_DataSize)
 597:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** {
 1011              		.loc 1 597 0
 1012              		.cfi_startproc
 1013              		@ args = 0, pretend = 0, frame = 0
 1014              		@ frame_needed = 0, uses_anonymous_args = 0
 1015              	.LVL93:
 1016 0000 38B5     		push	{r3, r4, r5, lr}
 1017              	.LCFI5:
 1018              		.cfi_def_cfa_offset 16
 1019              		.cfi_offset 3, -16
 1020              		.cfi_offset 4, -12
 1021              		.cfi_offset 5, -8
 1022              		.cfi_offset 14, -4
 598:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
 599:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 1023              		.loc 1 599 0
 1024 0002 4FF44052 		mov	r2, #12288
 1025 0006 4FF46053 		mov	r3, #14336
 1026 000a C4F20102 		movt	r2, 16385
 1027 000e C4F20003 		movt	r3, 16384
 1028 0012 9042     		cmp	r0, r2
 1029 0014 18BF     		it	ne
 1030 0016 9842     		cmpne	r0, r3
 597:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
 1031              		.loc 1 597 0
 1032 0018 0446     		mov	r4, r0
 1033 001a 0D46     		mov	r5, r1
 1034              		.loc 1 599 0
 1035 001c 0BD0     		beq	.L162
 1036              		.loc 1 599 0 is_stmt 0 discriminator 1
 1037 001e 4FF47052 		mov	r2, #15360
 1038 0022 4FF45053 		mov	r3, #13312
 1039 0026 C4F20002 		movt	r2, 16384
 1040 002a C4F20103 		movt	r3, 16385
 1041 002e 9042     		cmp	r0, r2
 1042 0030 18BF     		it	ne
 1043 0032 9842     		cmpne	r0, r3
 1044 0034 16D1     		bne	.L176
 1045              	.LVL94:
 1046              	.L162:
 600:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_DATASIZE(SPI_DataSize));
 1047              		.loc 1 600 0 is_stmt 1
 1048 0036 4FF2FF73 		movw	r3, #63487
 1049 003a 2B40     		ands	r3, r3, r5
 1050 003c 3BB1     		cbz	r3, .L163
 1051              		.loc 1 600 0 is_stmt 0 discriminator 1
 1052 003e 40F20000 		movw	r0, #:lower16:.LC0
 1053 0042 C0F20000 		movt	r0, #:upper16:.LC0
 1054 0046 4FF41671 		mov	r1, #600
 1055 004a FFF7FEFF 		bl	assert_failed
 1056              	.LVL95:
 1057              	.L163:
 601:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Clear DFF bit */
 602:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   SPIx->CR1 &= (uint16_t)~SPI_DataSize_16b;
 1058              		.loc 1 602 0 is_stmt 1
 1059 004e 2388     		ldrh	r3, [r4]
 1060 0050 23F40063 		bic	r3, r3, #2048
 1061 0054 1B04     		lsls	r3, r3, #16
 1062 0056 1B0C     		lsrs	r3, r3, #16
 1063 0058 2380     		strh	r3, [r4]	@ movhi
 603:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Set new DFF bit value */
 604:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   SPIx->CR1 |= SPI_DataSize;
 1064              		.loc 1 604 0
 1065 005a 2388     		ldrh	r3, [r4]
 1066 005c 9BB2     		uxth	r3, r3
 1067 005e 1D43     		orrs	r5, r5, r3
 1068 0060 2580     		strh	r5, [r4]	@ movhi
 1069 0062 38BD     		pop	{r3, r4, r5, pc}
 1070              	.LVL96:
 1071              	.L176:
 599:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_DATASIZE(SPI_DataSize));
 1072              		.loc 1 599 0 discriminator 1
 1073 0064 4FF4A042 		mov	r2, #20480
 1074 0068 4FF4A843 		mov	r3, #21504
 1075 006c C4F20102 		movt	r2, 16385
 1076 0070 C4F20103 		movt	r3, 16385
 1077 0074 9042     		cmp	r0, r2
 1078 0076 18BF     		it	ne
 1079 0078 9842     		cmpne	r0, r3
 1080 007a DCD0     		beq	.L162
 1081 007c 40F20000 		movw	r0, #:lower16:.LC0
 1082              	.LVL97:
 1083 0080 C0F20000 		movt	r0, #:upper16:.LC0
 1084 0084 40F25721 		movw	r1, #599
 1085              	.LVL98:
 1086 0088 FFF7FEFF 		bl	assert_failed
 1087              	.LVL99:
 1088 008c D3E7     		b	.L162
 1089              		.cfi_endproc
 1090              	.LFE130:
 1092 008e 00BF     		.section	.text.SPI_BiDirectionalLineConfig,"ax",%progbits
 1093              		.align	2
 1094              		.global	SPI_BiDirectionalLineConfig
 1095              		.thumb
 1096              		.thumb_func
 1098              	SPI_BiDirectionalLineConfig:
 1099              	.LFB131:
 605:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** }
 606:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 607:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
 608:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief  Selects the data transfer direction in bidirectional mode for the specified SPI.
 609:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2, 3, 4, 5 or 6 to select the SPI peripheral.
 610:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPI_Direction: specifies the data transfer direction in bidirectional mode. 
 611:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          This parameter can be one of the following values:
 612:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_Direction_Tx: Selects Tx transmission direction
 613:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_Direction_Rx: Selects Rx receive direction
 614:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @retval None
 615:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 616:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** void SPI_BiDirectionalLineConfig(SPI_TypeDef* SPIx, uint16_t SPI_Direction)
 617:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** {
 1100              		.loc 1 617 0
 1101              		.cfi_startproc
 1102              		@ args = 0, pretend = 0, frame = 0
 1103              		@ frame_needed = 0, uses_anonymous_args = 0
 1104              	.LVL100:
 1105 0000 38B5     		push	{r3, r4, r5, lr}
 1106              	.LCFI6:
 1107              		.cfi_def_cfa_offset 16
 1108              		.cfi_offset 3, -16
 1109              		.cfi_offset 4, -12
 1110              		.cfi_offset 5, -8
 1111              		.cfi_offset 14, -4
 618:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
 619:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 1112              		.loc 1 619 0
 1113 0002 4FF44052 		mov	r2, #12288
 1114 0006 4FF46053 		mov	r3, #14336
 1115 000a C4F20102 		movt	r2, 16385
 1116 000e C4F20003 		movt	r3, 16384
 1117 0012 9042     		cmp	r0, r2
 1118 0014 18BF     		it	ne
 1119 0016 9842     		cmpne	r0, r3
 617:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
 1120              		.loc 1 617 0
 1121 0018 0446     		mov	r4, r0
 1122 001a 0D46     		mov	r5, r1
 1123              		.loc 1 619 0
 1124 001c 0BD0     		beq	.L178
 1125              		.loc 1 619 0 is_stmt 0 discriminator 1
 1126 001e 4FF47052 		mov	r2, #15360
 1127 0022 4FF45053 		mov	r3, #13312
 1128 0026 C4F20002 		movt	r2, 16384
 1129 002a C4F20103 		movt	r3, 16385
 1130 002e 9042     		cmp	r0, r2
 1131 0030 18BF     		it	ne
 1132 0032 9842     		cmpne	r0, r3
 1133 0034 10D1     		bne	.L191
 1134              	.LVL101:
 1135              	.L178:
 620:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_DIRECTION(SPI_Direction));
 1136              		.loc 1 620 0 is_stmt 1
 1137 0036 4BF6FF73 		movw	r3, #49151
 1138 003a B5F5804F 		cmp	r5, #16384
 1139 003e 18BF     		it	ne
 1140 0040 9D42     		cmpne	r5, r3
 1141 0042 1ED1     		bne	.L192
 621:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   if (SPI_Direction == SPI_Direction_Tx)
 1142              		.loc 1 621 0
 1143 0044 B5F5804F 		cmp	r5, #16384
 1144 0048 24D0     		beq	.L193
 1145              	.L180:
 622:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 623:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Set the Tx only mode */
 624:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     SPIx->CR1 |= SPI_Direction_Tx;
 625:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 626:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   else
 627:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 628:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Set the Rx only mode */
 629:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     SPIx->CR1 &= SPI_Direction_Rx;
 1146              		.loc 1 629 0
 1147 004a 2388     		ldrh	r3, [r4]
 1148 004c 23F48043 		bic	r3, r3, #16384
 1149 0050 1B04     		lsls	r3, r3, #16
 1150 0052 1B0C     		lsrs	r3, r3, #16
 1151 0054 2380     		strh	r3, [r4]	@ movhi
 1152 0056 38BD     		pop	{r3, r4, r5, pc}
 1153              	.LVL102:
 1154              	.L191:
 619:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_DIRECTION(SPI_Direction));
 1155              		.loc 1 619 0 discriminator 1
 1156 0058 4FF4A042 		mov	r2, #20480
 1157 005c 4FF4A843 		mov	r3, #21504
 1158 0060 C4F20102 		movt	r2, 16385
 1159 0064 C4F20103 		movt	r3, 16385
 1160 0068 9042     		cmp	r0, r2
 1161 006a 18BF     		it	ne
 1162 006c 9842     		cmpne	r0, r3
 1163 006e E2D0     		beq	.L178
 1164 0070 40F20000 		movw	r0, #:lower16:.LC0
 1165              	.LVL103:
 1166 0074 C0F20000 		movt	r0, #:upper16:.LC0
 1167 0078 40F26B21 		movw	r1, #619
 1168              	.LVL104:
 1169 007c FFF7FEFF 		bl	assert_failed
 1170              	.LVL105:
 1171 0080 D9E7     		b	.L178
 1172              	.L192:
 620:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   if (SPI_Direction == SPI_Direction_Tx)
 1173              		.loc 1 620 0 discriminator 1
 1174 0082 40F20000 		movw	r0, #:lower16:.LC0
 1175 0086 C0F20000 		movt	r0, #:upper16:.LC0
 1176 008a 4FF41B71 		mov	r1, #620
 1177 008e FFF7FEFF 		bl	assert_failed
 1178              	.LVL106:
 1179 0092 DAE7     		b	.L180
 1180              	.L193:
 624:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 1181              		.loc 1 624 0
 1182 0094 2388     		ldrh	r3, [r4]
 1183 0096 9BB2     		uxth	r3, r3
 1184 0098 43F48043 		orr	r3, r3, #16384
 1185 009c 2380     		strh	r3, [r4]	@ movhi
 1186 009e 38BD     		pop	{r3, r4, r5, pc}
 1187              		.cfi_endproc
 1188              	.LFE131:
 1190              		.section	.text.SPI_NSSInternalSoftwareConfig,"ax",%progbits
 1191              		.align	2
 1192              		.global	SPI_NSSInternalSoftwareConfig
 1193              		.thumb
 1194              		.thumb_func
 1196              	SPI_NSSInternalSoftwareConfig:
 1197              	.LFB132:
 630:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 631:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** }
 632:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 633:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
 634:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief  Configures internally by software the NSS pin for the selected SPI.
 635:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2, 3, 4, 5 or 6 to select the SPI peripheral.
 636:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPI_NSSInternalSoft: specifies the SPI NSS internal state.
 637:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          This parameter can be one of the following values:
 638:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_NSSInternalSoft_Set: Set NSS pin internally
 639:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_NSSInternalSoft_Reset: Reset NSS pin internally
 640:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @retval None
 641:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 642:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** void SPI_NSSInternalSoftwareConfig(SPI_TypeDef* SPIx, uint16_t SPI_NSSInternalSoft)
 643:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** {
 1198              		.loc 1 643 0
 1199              		.cfi_startproc
 1200              		@ args = 0, pretend = 0, frame = 0
 1201              		@ frame_needed = 0, uses_anonymous_args = 0
 1202              	.LVL107:
 1203 0000 38B5     		push	{r3, r4, r5, lr}
 1204              	.LCFI7:
 1205              		.cfi_def_cfa_offset 16
 1206              		.cfi_offset 3, -16
 1207              		.cfi_offset 4, -12
 1208              		.cfi_offset 5, -8
 1209              		.cfi_offset 14, -4
 644:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
 645:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 1210              		.loc 1 645 0
 1211 0002 4FF44052 		mov	r2, #12288
 1212 0006 4FF46053 		mov	r3, #14336
 1213 000a C4F20102 		movt	r2, 16385
 1214 000e C4F20003 		movt	r3, 16384
 1215 0012 9042     		cmp	r0, r2
 1216 0014 18BF     		it	ne
 1217 0016 9842     		cmpne	r0, r3
 643:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
 1218              		.loc 1 643 0
 1219 0018 0446     		mov	r4, r0
 1220 001a 0D46     		mov	r5, r1
 1221              		.loc 1 645 0
 1222 001c 0BD0     		beq	.L195
 1223              		.loc 1 645 0 is_stmt 0 discriminator 1
 1224 001e 4FF47052 		mov	r2, #15360
 1225 0022 4FF45053 		mov	r3, #13312
 1226 0026 C4F20002 		movt	r2, 16384
 1227 002a C4F20103 		movt	r3, 16385
 1228 002e 9042     		cmp	r0, r2
 1229 0030 18BF     		it	ne
 1230 0032 9842     		cmpne	r0, r3
 1231 0034 1FD1     		bne	.L209
 1232              	.LVL108:
 1233              	.L195:
 646:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_NSS_INTERNAL(SPI_NSSInternalSoft));
 1234              		.loc 1 646 0 is_stmt 1
 1235 0036 4FF6FF63 		movw	r3, #65279
 1236 003a EA1A     		subs	r2, r5, r3
 1237 003c 18BF     		it	ne
 1238 003e 0122     		movne	r2, #1
 1239 0040 B5F5807F 		cmp	r5, #256
 1240 0044 18BF     		it	ne
 1241 0046 9D42     		cmpne	r5, r3
 1242 0048 07D1     		bne	.L210
 647:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   if (SPI_NSSInternalSoft != SPI_NSSInternalSoft_Reset)
 1243              		.loc 1 647 0
 1244 004a 72B9     		cbnz	r2, .L197
 648:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 649:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Set NSS pin internally by software */
 650:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     SPIx->CR1 |= SPI_NSSInternalSoft_Set;
 651:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 652:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   else
 653:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 654:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Reset NSS pin internally by software */
 655:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     SPIx->CR1 &= SPI_NSSInternalSoft_Reset;
 1245              		.loc 1 655 0
 1246 004c 2388     		ldrh	r3, [r4]
 1247 004e 23F48073 		bic	r3, r3, #256
 1248 0052 1B04     		lsls	r3, r3, #16
 1249 0054 1B0C     		lsrs	r3, r3, #16
 1250 0056 2380     		strh	r3, [r4]	@ movhi
 1251 0058 38BD     		pop	{r3, r4, r5, pc}
 1252              	.LVL109:
 1253              	.L210:
 646:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   if (SPI_NSSInternalSoft != SPI_NSSInternalSoft_Reset)
 1254              		.loc 1 646 0 discriminator 1
 1255 005a 40F20000 		movw	r0, #:lower16:.LC0
 1256 005e C0F20000 		movt	r0, #:upper16:.LC0
 1257 0062 40F28621 		movw	r1, #646
 1258 0066 FFF7FEFF 		bl	assert_failed
 1259              	.LVL110:
 1260              	.L197:
 650:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 1261              		.loc 1 650 0
 1262 006a 2388     		ldrh	r3, [r4]
 1263 006c 9BB2     		uxth	r3, r3
 1264 006e 43F48073 		orr	r3, r3, #256
 1265 0072 2380     		strh	r3, [r4]	@ movhi
 1266 0074 38BD     		pop	{r3, r4, r5, pc}
 1267              	.LVL111:
 1268              	.L209:
 645:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_NSS_INTERNAL(SPI_NSSInternalSoft));
 1269              		.loc 1 645 0 discriminator 1
 1270 0076 4FF4A042 		mov	r2, #20480
 1271 007a 4FF4A843 		mov	r3, #21504
 1272 007e C4F20102 		movt	r2, 16385
 1273 0082 C4F20103 		movt	r3, 16385
 1274 0086 9042     		cmp	r0, r2
 1275 0088 18BF     		it	ne
 1276 008a 9842     		cmpne	r0, r3
 1277 008c D3D0     		beq	.L195
 1278 008e 40F20000 		movw	r0, #:lower16:.LC0
 1279              	.LVL112:
 1280 0092 C0F20000 		movt	r0, #:upper16:.LC0
 1281 0096 40F28521 		movw	r1, #645
 1282              	.LVL113:
 1283 009a FFF7FEFF 		bl	assert_failed
 1284              	.LVL114:
 1285 009e CAE7     		b	.L195
 1286              		.cfi_endproc
 1287              	.LFE132:
 1289              		.section	.text.SPI_SSOutputCmd,"ax",%progbits
 1290              		.align	2
 1291              		.global	SPI_SSOutputCmd
 1292              		.thumb
 1293              		.thumb_func
 1295              	SPI_SSOutputCmd:
 1296              	.LFB133:
 656:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 657:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** }
 658:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 659:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
 660:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief  Enables or disables the SS output for the selected SPI.
 661:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2, 3, 4, 5 or 6 to select the SPI peripheral.
 662:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  NewState: new state of the SPIx SS output. 
 663:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          This parameter can be: ENABLE or DISABLE.
 664:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @retval None
 665:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 666:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** void SPI_SSOutputCmd(SPI_TypeDef* SPIx, FunctionalState NewState)
 667:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** {
 1297              		.loc 1 667 0
 1298              		.cfi_startproc
 1299              		@ args = 0, pretend = 0, frame = 0
 1300              		@ frame_needed = 0, uses_anonymous_args = 0
 1301              	.LVL115:
 1302 0000 38B5     		push	{r3, r4, r5, lr}
 1303              	.LCFI8:
 1304              		.cfi_def_cfa_offset 16
 1305              		.cfi_offset 3, -16
 1306              		.cfi_offset 4, -12
 1307              		.cfi_offset 5, -8
 1308              		.cfi_offset 14, -4
 668:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
 669:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 1309              		.loc 1 669 0
 1310 0002 4FF44052 		mov	r2, #12288
 1311 0006 4FF46053 		mov	r3, #14336
 1312 000a C4F20102 		movt	r2, 16385
 1313 000e C4F20003 		movt	r3, 16384
 1314 0012 9042     		cmp	r0, r2
 1315 0014 18BF     		it	ne
 1316 0016 9842     		cmpne	r0, r3
 667:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
 1317              		.loc 1 667 0
 1318 0018 0446     		mov	r4, r0
 1319 001a 0D46     		mov	r5, r1
 1320              		.loc 1 669 0
 1321 001c 0BD0     		beq	.L212
 1322              		.loc 1 669 0 is_stmt 0 discriminator 1
 1323 001e 4FF47052 		mov	r2, #15360
 1324 0022 4FF45053 		mov	r3, #13312
 1325 0026 C4F20002 		movt	r2, 16384
 1326 002a C4F20103 		movt	r3, 16385
 1327 002e 9042     		cmp	r0, r2
 1328 0030 18BF     		it	ne
 1329 0032 9842     		cmpne	r0, r3
 1330 0034 0FD1     		bne	.L226
 1331              	.LVL116:
 1332              	.L212:
 670:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1333              		.loc 1 670 0 is_stmt 1
 1334 0036 012D     		cmp	r5, #1
 1335 0038 22D9     		bls	.L213
 1336              		.loc 1 670 0 is_stmt 0 discriminator 1
 1337 003a 40F20000 		movw	r0, #:lower16:.LC0
 1338 003e C0F20000 		movt	r0, #:upper16:.LC0
 1339 0042 40F29E21 		movw	r1, #670
 1340 0046 FFF7FEFF 		bl	assert_failed
 1341              	.LVL117:
 1342              	.L214:
 671:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   if (NewState != DISABLE)
 672:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 673:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Enable the selected SPI SS output */
 674:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     SPIx->CR2 |= (uint16_t)SPI_CR2_SSOE;
 1343              		.loc 1 674 0 is_stmt 1
 1344 004a A388     		ldrh	r3, [r4, #4]
 1345 004c 9BB2     		uxth	r3, r3
 1346 004e 43F00403 		orr	r3, r3, #4
 1347 0052 A380     		strh	r3, [r4, #4]	@ movhi
 1348 0054 38BD     		pop	{r3, r4, r5, pc}
 1349              	.LVL118:
 1350              	.L226:
 669:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1351              		.loc 1 669 0 discriminator 1
 1352 0056 4FF4A042 		mov	r2, #20480
 1353 005a 4FF4A843 		mov	r3, #21504
 1354 005e C4F20102 		movt	r2, 16385
 1355 0062 C4F20103 		movt	r3, 16385
 1356 0066 9042     		cmp	r0, r2
 1357 0068 18BF     		it	ne
 1358 006a 9842     		cmpne	r0, r3
 1359 006c E3D0     		beq	.L212
 1360 006e 40F20000 		movw	r0, #:lower16:.LC0
 1361              	.LVL119:
 1362 0072 C0F20000 		movt	r0, #:upper16:.LC0
 1363 0076 40F29D21 		movw	r1, #669
 1364              	.LVL120:
 1365 007a FFF7FEFF 		bl	assert_failed
 1366              	.LVL121:
 1367 007e DAE7     		b	.L212
 1368              	.L213:
 671:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   if (NewState != DISABLE)
 1369              		.loc 1 671 0
 1370 0080 002D     		cmp	r5, #0
 1371 0082 E2D1     		bne	.L214
 675:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 676:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   else
 677:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 678:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Disable the selected SPI SS output */
 679:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     SPIx->CR2 &= (uint16_t)~((uint16_t)SPI_CR2_SSOE);
 1372              		.loc 1 679 0
 1373 0084 A388     		ldrh	r3, [r4, #4]
 1374 0086 23F00403 		bic	r3, r3, #4
 1375 008a 1B04     		lsls	r3, r3, #16
 1376 008c 1B0C     		lsrs	r3, r3, #16
 1377 008e A380     		strh	r3, [r4, #4]	@ movhi
 1378 0090 38BD     		pop	{r3, r4, r5, pc}
 1379              		.cfi_endproc
 1380              	.LFE133:
 1382 0092 00BF     		.section	.text.SPI_TIModeCmd,"ax",%progbits
 1383              		.align	2
 1384              		.global	SPI_TIModeCmd
 1385              		.thumb
 1386              		.thumb_func
 1388              	SPI_TIModeCmd:
 1389              	.LFB134:
 680:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 681:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** }
 682:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 683:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
 684:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief  Enables or disables the SPIx/I2Sx DMA interface.
 685:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *   
 686:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @note   This function can be called only after the SPI_Init() function has 
 687:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         been called. 
 688:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @note   When TI mode is selected, the control bits SSM, SSI, CPOL and CPHA 
 689:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         are not taken into consideration and are configured by hardware
 690:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         respectively to the TI mode requirements.  
 691:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * 
 692:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2, 3, 4, 5 or 6 
 693:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  NewState: new state of the selected SPI TI communication mode.
 694:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          This parameter can be: ENABLE or DISABLE.
 695:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @retval None
 696:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 697:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** void SPI_TIModeCmd(SPI_TypeDef* SPIx, FunctionalState NewState)
 698:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** {
 1390              		.loc 1 698 0
 1391              		.cfi_startproc
 1392              		@ args = 0, pretend = 0, frame = 0
 1393              		@ frame_needed = 0, uses_anonymous_args = 0
 1394              	.LVL122:
 1395 0000 38B5     		push	{r3, r4, r5, lr}
 1396              	.LCFI9:
 1397              		.cfi_def_cfa_offset 16
 1398              		.cfi_offset 3, -16
 1399              		.cfi_offset 4, -12
 1400              		.cfi_offset 5, -8
 1401              		.cfi_offset 14, -4
 699:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
 700:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 1402              		.loc 1 700 0
 1403 0002 4FF44052 		mov	r2, #12288
 1404 0006 4FF46053 		mov	r3, #14336
 1405 000a C4F20102 		movt	r2, 16385
 1406 000e C4F20003 		movt	r3, 16384
 1407 0012 9042     		cmp	r0, r2
 1408 0014 18BF     		it	ne
 1409 0016 9842     		cmpne	r0, r3
 698:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
 1410              		.loc 1 698 0
 1411 0018 0446     		mov	r4, r0
 1412 001a 0D46     		mov	r5, r1
 1413              		.loc 1 700 0
 1414 001c 0BD0     		beq	.L228
 1415              		.loc 1 700 0 is_stmt 0 discriminator 1
 1416 001e 4FF47052 		mov	r2, #15360
 1417 0022 4FF45053 		mov	r3, #13312
 1418 0026 C4F20002 		movt	r2, 16384
 1419 002a C4F20103 		movt	r3, 16385
 1420 002e 9042     		cmp	r0, r2
 1421 0030 18BF     		it	ne
 1422 0032 9842     		cmpne	r0, r3
 1423 0034 0FD1     		bne	.L242
 1424              	.LVL123:
 1425              	.L228:
 701:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1426              		.loc 1 701 0 is_stmt 1
 1427 0036 012D     		cmp	r5, #1
 1428 0038 22D9     		bls	.L229
 1429              		.loc 1 701 0 is_stmt 0 discriminator 1
 1430 003a 40F20000 		movw	r0, #:lower16:.LC0
 1431 003e C0F20000 		movt	r0, #:upper16:.LC0
 1432 0042 40F2BD21 		movw	r1, #701
 1433 0046 FFF7FEFF 		bl	assert_failed
 1434              	.LVL124:
 1435              	.L230:
 702:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 703:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   if (NewState != DISABLE)
 704:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 705:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Enable the TI mode for the selected SPI peripheral */
 706:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     SPIx->CR2 |= SPI_CR2_FRF;
 1436              		.loc 1 706 0 is_stmt 1
 1437 004a A388     		ldrh	r3, [r4, #4]
 1438 004c 9BB2     		uxth	r3, r3
 1439 004e 43F01003 		orr	r3, r3, #16
 1440 0052 A380     		strh	r3, [r4, #4]	@ movhi
 1441 0054 38BD     		pop	{r3, r4, r5, pc}
 1442              	.LVL125:
 1443              	.L242:
 700:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1444              		.loc 1 700 0 discriminator 1
 1445 0056 4FF4A042 		mov	r2, #20480
 1446 005a 4FF4A843 		mov	r3, #21504
 1447 005e C4F20102 		movt	r2, 16385
 1448 0062 C4F20103 		movt	r3, 16385
 1449 0066 9042     		cmp	r0, r2
 1450 0068 18BF     		it	ne
 1451 006a 9842     		cmpne	r0, r3
 1452 006c E3D0     		beq	.L228
 1453 006e 40F20000 		movw	r0, #:lower16:.LC0
 1454              	.LVL126:
 1455 0072 C0F20000 		movt	r0, #:upper16:.LC0
 1456 0076 4FF42F71 		mov	r1, #700
 1457              	.LVL127:
 1458 007a FFF7FEFF 		bl	assert_failed
 1459              	.LVL128:
 1460 007e DAE7     		b	.L228
 1461              	.L229:
 703:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 1462              		.loc 1 703 0
 1463 0080 002D     		cmp	r5, #0
 1464 0082 E2D1     		bne	.L230
 707:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 708:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   else
 709:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 710:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Disable the TI mode for the selected SPI peripheral */
 711:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     SPIx->CR2 &= (uint16_t)~SPI_CR2_FRF;
 1465              		.loc 1 711 0
 1466 0084 A388     		ldrh	r3, [r4, #4]
 1467 0086 23F01003 		bic	r3, r3, #16
 1468 008a 1B04     		lsls	r3, r3, #16
 1469 008c 1B0C     		lsrs	r3, r3, #16
 1470 008e A380     		strh	r3, [r4, #4]	@ movhi
 1471 0090 38BD     		pop	{r3, r4, r5, pc}
 1472              		.cfi_endproc
 1473              	.LFE134:
 1475 0092 00BF     		.section	.text.I2S_FullDuplexConfig,"ax",%progbits
 1476              		.align	2
 1477              		.global	I2S_FullDuplexConfig
 1478              		.thumb
 1479              		.thumb_func
 1481              	I2S_FullDuplexConfig:
 1482              	.LFB135:
 712:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 713:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** }
 714:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 715:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
 716:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief  Configures the full duplex mode for the I2Sx peripheral using its
 717:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         extension I2Sxext according to the specified parameters in the 
 718:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         I2S_InitStruct.
 719:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  I2Sxext: where x can be  2 or 3 to select the I2S peripheral extension block.
 720:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  I2S_InitStruct: pointer to an I2S_InitTypeDef structure that
 721:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         contains the configuration information for the specified I2S peripheral
 722:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         extension.
 723:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * 
 724:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @note   The structure pointed by I2S_InitStruct parameter should be the same
 725:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         used for the master I2S peripheral. In this case, if the master is 
 726:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         configured as transmitter, the slave will be receiver and vice versa.
 727:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         Or you can force a different mode by modifying the field I2S_Mode to the
 728:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         value I2S_SlaveRx or I2S_SlaveTx independently of the master configuration.    
 729:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         
 730:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @note   The I2S full duplex extension can be configured in slave mode only.    
 731:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *  
 732:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @retval None
 733:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 734:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** void I2S_FullDuplexConfig(SPI_TypeDef* I2Sxext, I2S_InitTypeDef* I2S_InitStruct)
 735:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** {
 1483              		.loc 1 735 0
 1484              		.cfi_startproc
 1485              		@ args = 0, pretend = 0, frame = 0
 1486              		@ frame_needed = 0, uses_anonymous_args = 0
 1487              	.LVL129:
 1488 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1489              	.LCFI10:
 1490              		.cfi_def_cfa_offset 24
 1491              		.cfi_offset 3, -24
 1492              		.cfi_offset 4, -20
 1493              		.cfi_offset 5, -16
 1494              		.cfi_offset 6, -12
 1495              		.cfi_offset 7, -8
 1496              		.cfi_offset 14, -4
 736:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   uint16_t tmpreg = 0, tmp = 0;
 737:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
 738:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the I2S parameters */
 739:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_I2S_EXT_PERIPH(I2Sxext));
 1497              		.loc 1 739 0
 1498 0002 4FF45053 		mov	r3, #13312
 1499 0006 C4F20003 		movt	r3, 16384
 1500 000a B0F1402F 		cmp	r0, #1073758208
 1501 000e 18BF     		it	ne
 1502 0010 9842     		cmpne	r0, r3
 735:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   uint16_t tmpreg = 0, tmp = 0;
 1503              		.loc 1 735 0
 1504 0012 0446     		mov	r4, r0
 1505 0014 0D46     		mov	r5, r1
 1506              		.loc 1 739 0
 1507 0016 49D1     		bne	.L271
 1508              	.LVL130:
 1509              	.L244:
 740:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_I2S_MODE(I2S_InitStruct->I2S_Mode));
 1510              		.loc 1 740 0
 1511 0018 2B88     		ldrh	r3, [r5]
 1512 001a 23F44073 		bic	r3, r3, #768
 1513 001e 9BB2     		uxth	r3, r3
 1514 0020 002B     		cmp	r3, #0
 1515 0022 56D1     		bne	.L250
 741:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_I2S_STANDARD(I2S_InitStruct->I2S_Standard));
 1516              		.loc 1 741 0
 1517 0024 6A88     		ldrh	r2, [r5, #2]
 1518 0026 4FF6CF73 		movw	r3, #65487
 1519 002a 1340     		ands	r3, r3, r2
 1520 002c 4BB1     		cbz	r3, .L246
 1521              	.L245:
 1522              		.loc 1 741 0 is_stmt 0 discriminator 1
 1523 002e B02A     		cmp	r2, #176
 1524 0030 07D0     		beq	.L246
 1525 0032 40F20000 		movw	r0, #:lower16:.LC0
 1526 0036 C0F20000 		movt	r0, #:upper16:.LC0
 1527 003a 40F2E521 		movw	r1, #741
 1528 003e FFF7FEFF 		bl	assert_failed
 1529              	.LVL131:
 1530              	.L246:
 742:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_I2S_DATA_FORMAT(I2S_InitStruct->I2S_DataFormat));
 1531              		.loc 1 742 0 is_stmt 1
 1532 0042 AB88     		ldrh	r3, [r5, #4]
 1533 0044 032B     		cmp	r3, #3
 1534 0046 18BF     		it	ne
 1535 0048 012B     		cmpne	r3, #1
 1536 004a 09D9     		bls	.L247
 1537              		.loc 1 742 0 is_stmt 0 discriminator 1
 1538 004c 052B     		cmp	r3, #5
 1539 004e 07D0     		beq	.L247
 1540 0050 40F20000 		movw	r0, #:lower16:.LC0
 1541 0054 C0F20000 		movt	r0, #:upper16:.LC0
 1542 0058 40F2E621 		movw	r1, #742
 1543 005c FFF7FEFF 		bl	assert_failed
 1544              	.LVL132:
 1545              	.L247:
 743:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_I2S_CPOL(I2S_InitStruct->I2S_CPOL));  
 1546              		.loc 1 743 0 is_stmt 1
 1547 0060 AA89     		ldrh	r2, [r5, #12]
 1548 0062 4FF6F773 		movw	r3, #65527
 1549 0066 1340     		ands	r3, r3, r2
 1550 0068 4BBB     		cbnz	r3, .L272
 1551              	.L248:
 744:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 745:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /*----------------------- SPIx I2SCFGR & I2SPR Configuration -----------------*/
 746:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Clear I2SMOD, I2SE, I2SCFG, PCMSYNC, I2SSTD, CKPOL, DATLEN and CHLEN bits */
 747:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   I2Sxext->I2SCFGR &= I2SCFGR_CLEAR_MASK; 
 1552              		.loc 1 747 0
 1553 006a A38B     		ldrh	r3, [r4, #28]
 748:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   I2Sxext->I2SPR = 0x0002;
 749:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
 750:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Get the I2SCFGR register value */
 751:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   tmpreg = I2Sxext->I2SCFGR;
 752:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
 753:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Get the mode to be configured for the extended I2S */
 754:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   if ((I2S_InitStruct->I2S_Mode == I2S_Mode_MasterTx) || (I2S_InitStruct->I2S_Mode == I2S_Mode_Slav
 755:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 756:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     tmp = I2S_Mode_SlaveRx;
 757:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 758:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   else
 759:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 760:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     if ((I2S_InitStruct->I2S_Mode == I2S_Mode_MasterRx) || (I2S_InitStruct->I2S_Mode == I2S_Mode_Sl
 761:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     {
 762:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       tmp = I2S_Mode_SlaveTx;
 763:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     }
 764:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 765:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 766:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  
 767:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Configure the I2S with the SPI_InitStruct values */
 768:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   tmpreg |= (uint16_t)((uint16_t)SPI_I2SCFGR_I2SMOD | (uint16_t)(tmp | \
 769:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 1554              		.loc 1 769 0
 1555 006c 6F88     		ldrh	r7, [r5, #2]
 754:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 1556              		.loc 1 754 0
 1557 006e 2E88     		ldrh	r6, [r5]
 768:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 1558              		.loc 1 768 0
 1559 0070 A888     		ldrh	r0, [r5, #4]
 747:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   I2Sxext->I2SPR = 0x0002;
 1560              		.loc 1 747 0
 1561 0072 23F47B63 		bic	r3, r3, #4016
 1562 0076 23F00F03 		bic	r3, r3, #15
 1563 007a 1B04     		lsls	r3, r3, #16
 1564 007c 1B0C     		lsrs	r3, r3, #16
 748:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
 1565              		.loc 1 748 0
 1566 007e 0221     		movs	r1, #2
 747:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   I2Sxext->I2SPR = 0x0002;
 1567              		.loc 1 747 0
 1568 0080 A383     		strh	r3, [r4, #28]	@ movhi
 748:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
 1569              		.loc 1 748 0
 1570 0082 2184     		strh	r1, [r4, #32]	@ movhi
 751:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
 1571              		.loc 1 751 0
 1572 0084 A18B     		ldrh	r1, [r4, #28]
 1573 0086 89B2     		uxth	r1, r1
 1574              	.LVL133:
 1575              		.loc 1 769 0
 1576 0088 3943     		orrs	r1, r1, r7
 1577              	.LVL134:
 1578 008a 41F40061 		orr	r1, r1, #2048
 754:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 1579              		.loc 1 754 0
 1580 008e 26F40073 		bic	r3, r6, #512
 768:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 1581              		.loc 1 768 0
 1582 0092 0143     		orrs	r1, r1, r0
 754:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 1583              		.loc 1 754 0
 1584 0094 1B04     		lsls	r3, r3, #16
 768:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 1585              		.loc 1 768 0
 1586 0096 0A43     		orrs	r2, r2, r1
 754:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 1587              		.loc 1 754 0
 1588 0098 1B0C     		lsrs	r3, r3, #16
 768:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 1589              		.loc 1 768 0
 1590 009a 92B2     		uxth	r2, r2
 756:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 1591              		.loc 1 756 0
 1592 009c 002B     		cmp	r3, #0
 1593 009e 0CBF     		ite	eq
 1594 00a0 4FF48073 		moveq	r3, #256
 1595 00a4 0023     		movne	r3, #0
 1596              	.LVL135:
 768:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 1597              		.loc 1 768 0
 1598 00a6 1343     		orrs	r3, r3, r2
 1599              	.LVL136:
 770:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****                   (uint16_t)I2S_InitStruct->I2S_CPOL))));
 771:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  
 772:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Write to SPIx I2SCFGR */  
 773:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   I2Sxext->I2SCFGR = tmpreg;
 1600              		.loc 1 773 0
 1601 00a8 A383     		strh	r3, [r4, #28]	@ movhi
 1602 00aa F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1603              	.LVL137:
 1604              	.L271:
 739:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_I2S_MODE(I2S_InitStruct->I2S_Mode));
 1605              		.loc 1 739 0 discriminator 1
 1606 00ac 40F20000 		movw	r0, #:lower16:.LC0
 1607              	.LVL138:
 1608 00b0 C0F20000 		movt	r0, #:upper16:.LC0
 1609 00b4 40F2E321 		movw	r1, #739
 1610              	.LVL139:
 1611 00b8 FFF7FEFF 		bl	assert_failed
 1612              	.LVL140:
 1613 00bc ACE7     		b	.L244
 1614              	.L272:
 743:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 1615              		.loc 1 743 0 discriminator 1
 1616 00be 40F20000 		movw	r0, #:lower16:.LC0
 1617 00c2 C0F20000 		movt	r0, #:upper16:.LC0
 1618 00c6 40F2E721 		movw	r1, #743
 1619 00ca FFF7FEFF 		bl	assert_failed
 1620              	.LVL141:
 1621 00ce AA89     		ldrh	r2, [r5, #12]
 1622 00d0 CBE7     		b	.L248
 1623              	.L250:
 740:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_I2S_STANDARD(I2S_InitStruct->I2S_Standard));
 1624              		.loc 1 740 0 discriminator 1
 1625 00d2 40F20000 		movw	r0, #:lower16:.LC0
 1626 00d6 C0F20000 		movt	r0, #:upper16:.LC0
 1627 00da 4FF43971 		mov	r1, #740
 1628 00de FFF7FEFF 		bl	assert_failed
 1629              	.LVL142:
 741:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_I2S_DATA_FORMAT(I2S_InitStruct->I2S_DataFormat));
 1630              		.loc 1 741 0 discriminator 1
 1631 00e2 6A88     		ldrh	r2, [r5, #2]
 1632 00e4 4FF6CF73 		movw	r3, #65487
 1633 00e8 1340     		ands	r3, r3, r2
 1634 00ea 002B     		cmp	r3, #0
 1635 00ec 9FD1     		bne	.L245
 1636 00ee A8E7     		b	.L246
 1637              		.cfi_endproc
 1638              	.LFE135:
 1640              		.section	.text.SPI_I2S_ReceiveData,"ax",%progbits
 1641              		.align	2
 1642              		.global	SPI_I2S_ReceiveData
 1643              		.thumb
 1644              		.thumb_func
 1646              	SPI_I2S_ReceiveData:
 1647              	.LFB136:
 774:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** }
 775:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 776:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
 777:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @}
 778:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 779:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 780:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /** @defgroup SPI_Group2 Data transfers functions
 781:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  *  @brief   Data transfers functions
 782:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  *
 783:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** @verbatim   
 784:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  ===============================================================================
 785:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****                       ##### Data transfers functions #####
 786:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  ===============================================================================  
 787:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 788:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  [..] This section provides a set of functions allowing to manage the SPI data 
 789:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       transfers. In reception, data are received and then stored into an internal 
 790:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       Rx buffer while. In transmission, data are first stored into an internal Tx 
 791:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       buffer before being transmitted.
 792:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 793:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  [..] The read access of the SPI_DR register can be done using the SPI_I2S_ReceiveData()
 794:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       function and returns the Rx buffered value. Whereas a write access to the SPI_DR 
 795:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       can be done using SPI_I2S_SendData() function and stores the written data into 
 796:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       Tx buffer.
 797:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 798:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** @endverbatim
 799:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @{
 800:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 801:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 802:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
 803:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief  Returns the most recent received data by the SPIx/I2Sx peripheral. 
 804:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPIx: To select the SPIx/I2Sx peripheral, where x can be: 1, 2, 3, 4, 5 or 6 
 805:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         in SPI mode or 2 or 3 in I2S mode or I2Sxext for I2S full duplex mode. 
 806:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @retval The value of the received data.
 807:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 808:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** uint16_t SPI_I2S_ReceiveData(SPI_TypeDef* SPIx)
 809:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** {
 1648              		.loc 1 809 0
 1649              		.cfi_startproc
 1650              		@ args = 0, pretend = 0, frame = 0
 1651              		@ frame_needed = 0, uses_anonymous_args = 0
 1652              	.LVL143:
 810:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
 811:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH_EXT(SPIx));
 1653              		.loc 1 811 0
 1654 0000 4FF44052 		mov	r2, #12288
 1655 0004 4FF46053 		mov	r3, #14336
 1656 0008 C4F20102 		movt	r2, 16385
 1657 000c C4F20003 		movt	r3, 16384
 1658 0010 9042     		cmp	r0, r2
 1659 0012 18BF     		it	ne
 1660 0014 9842     		cmpne	r0, r3
 809:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
 1661              		.loc 1 809 0
 1662 0016 10B5     		push	{r4, lr}
 1663              	.LCFI11:
 1664              		.cfi_def_cfa_offset 8
 1665              		.cfi_offset 4, -8
 1666              		.cfi_offset 14, -4
 809:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
 1667              		.loc 1 809 0
 1668 0018 0446     		mov	r4, r0
 1669              		.loc 1 811 0
 1670 001a 20D0     		beq	.L274
 1671              		.loc 1 811 0 is_stmt 0 discriminator 1
 1672 001c 4FF47052 		mov	r2, #15360
 1673 0020 4FF45053 		mov	r3, #13312
 1674 0024 C4F20002 		movt	r2, 16384
 1675 0028 C4F20103 		movt	r3, 16385
 1676 002c 9042     		cmp	r0, r2
 1677 002e 18BF     		it	ne
 1678 0030 9842     		cmpne	r0, r3
 1679 0032 14D0     		beq	.L274
 1680 0034 4FF4A042 		mov	r2, #20480
 1681 0038 4FF4A843 		mov	r3, #21504
 1682 003c C4F20102 		movt	r2, 16385
 1683 0040 C4F20103 		movt	r3, 16385
 1684 0044 9042     		cmp	r0, r2
 1685 0046 18BF     		it	ne
 1686 0048 9842     		cmpne	r0, r3
 1687 004a 08D0     		beq	.L274
 1688 004c 4FF45053 		mov	r3, #13312
 1689 0050 C4F20003 		movt	r3, 16384
 1690 0054 9842     		cmp	r0, r3
 1691 0056 18BF     		it	ne
 1692 0058 B0F1402F 		cmpne	r0, #1073758208
 1693 005c 02D1     		bne	.L287
 1694              	.LVL144:
 1695              	.L274:
 812:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
 813:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Return the data in the DR register */
 814:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   return SPIx->DR;
 1696              		.loc 1 814 0 is_stmt 1
 1697 005e A089     		ldrh	r0, [r4, #12]
 815:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** }
 1698              		.loc 1 815 0
 1699 0060 80B2     		uxth	r0, r0
 1700 0062 10BD     		pop	{r4, pc}
 1701              	.LVL145:
 1702              	.L287:
 811:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
 1703              		.loc 1 811 0 discriminator 1
 1704 0064 40F20000 		movw	r0, #:lower16:.LC0
 1705              	.LVL146:
 1706 0068 C0F20000 		movt	r0, #:upper16:.LC0
 1707 006c 40F22B31 		movw	r1, #811
 1708 0070 FFF7FEFF 		bl	assert_failed
 1709              	.LVL147:
 1710 0074 F3E7     		b	.L274
 1711              		.cfi_endproc
 1712              	.LFE136:
 1714 0076 00BF     		.section	.text.SPI_I2S_SendData,"ax",%progbits
 1715              		.align	2
 1716              		.global	SPI_I2S_SendData
 1717              		.thumb
 1718              		.thumb_func
 1720              	SPI_I2S_SendData:
 1721              	.LFB137:
 816:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 817:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
 818:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief  Transmits a Data through the SPIx/I2Sx peripheral.
 819:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPIx: To select the SPIx/I2Sx peripheral, where x can be: 1, 2, 3, 4, 5 or 6 
 820:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         in SPI mode or 2 or 3 in I2S mode or I2Sxext for I2S full duplex mode.     
 821:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  Data: Data to be transmitted.
 822:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @retval None
 823:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 824:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** void SPI_I2S_SendData(SPI_TypeDef* SPIx, uint16_t Data)
 825:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** {
 1722              		.loc 1 825 0
 1723              		.cfi_startproc
 1724              		@ args = 0, pretend = 0, frame = 0
 1725              		@ frame_needed = 0, uses_anonymous_args = 0
 1726              	.LVL148:
 1727 0000 38B5     		push	{r3, r4, r5, lr}
 1728              	.LCFI12:
 1729              		.cfi_def_cfa_offset 16
 1730              		.cfi_offset 3, -16
 1731              		.cfi_offset 4, -12
 1732              		.cfi_offset 5, -8
 1733              		.cfi_offset 14, -4
 826:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
 827:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH_EXT(SPIx));
 1734              		.loc 1 827 0
 1735 0002 4FF44052 		mov	r2, #12288
 1736 0006 4FF46053 		mov	r3, #14336
 1737 000a C4F20102 		movt	r2, 16385
 1738 000e C4F20003 		movt	r3, 16384
 1739 0012 9042     		cmp	r0, r2
 1740 0014 18BF     		it	ne
 1741 0016 9842     		cmpne	r0, r3
 825:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
 1742              		.loc 1 825 0
 1743 0018 0446     		mov	r4, r0
 1744 001a 0D46     		mov	r5, r1
 1745              		.loc 1 827 0
 1746 001c 20D0     		beq	.L289
 1747              		.loc 1 827 0 is_stmt 0 discriminator 1
 1748 001e 4FF47052 		mov	r2, #15360
 1749 0022 4FF45053 		mov	r3, #13312
 1750 0026 C4F20002 		movt	r2, 16384
 1751 002a C4F20103 		movt	r3, 16385
 1752 002e 9042     		cmp	r0, r2
 1753 0030 18BF     		it	ne
 1754 0032 9842     		cmpne	r0, r3
 1755 0034 14D0     		beq	.L289
 1756 0036 4FF4A042 		mov	r2, #20480
 1757 003a 4FF4A843 		mov	r3, #21504
 1758 003e C4F20102 		movt	r2, 16385
 1759 0042 C4F20103 		movt	r3, 16385
 1760 0046 9042     		cmp	r0, r2
 1761 0048 18BF     		it	ne
 1762 004a 9842     		cmpne	r0, r3
 1763 004c 08D0     		beq	.L289
 1764 004e 4FF45053 		mov	r3, #13312
 1765 0052 C4F20003 		movt	r3, 16384
 1766 0056 9842     		cmp	r0, r3
 1767 0058 18BF     		it	ne
 1768 005a B0F1402F 		cmpne	r0, #1073758208
 1769 005e 01D1     		bne	.L302
 1770              	.LVL149:
 1771              	.L289:
 828:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
 829:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Write in the DR register the data to be sent */
 830:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   SPIx->DR = Data;
 1772              		.loc 1 830 0 is_stmt 1
 1773 0060 A581     		strh	r5, [r4, #12]	@ movhi
 1774 0062 38BD     		pop	{r3, r4, r5, pc}
 1775              	.LVL150:
 1776              	.L302:
 827:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
 1777              		.loc 1 827 0 discriminator 1
 1778 0064 40F20000 		movw	r0, #:lower16:.LC0
 1779              	.LVL151:
 1780 0068 C0F20000 		movt	r0, #:upper16:.LC0
 1781 006c 40F23B31 		movw	r1, #827
 1782              	.LVL152:
 1783 0070 FFF7FEFF 		bl	assert_failed
 1784              	.LVL153:
 1785 0074 F4E7     		b	.L289
 1786              		.cfi_endproc
 1787              	.LFE137:
 1789 0076 00BF     		.section	.text.SPI_CalculateCRC,"ax",%progbits
 1790              		.align	2
 1791              		.global	SPI_CalculateCRC
 1792              		.thumb
 1793              		.thumb_func
 1795              	SPI_CalculateCRC:
 1796              	.LFB138:
 831:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** }
 832:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 833:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
 834:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @}
 835:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 836:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 837:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /** @defgroup SPI_Group3 Hardware CRC Calculation functions
 838:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  *  @brief   Hardware CRC Calculation functions
 839:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  *
 840:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** @verbatim   
 841:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  ===============================================================================
 842:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****                  ##### Hardware CRC Calculation functions #####
 843:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  ===============================================================================  
 844:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 845:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  [..] This section provides a set of functions allowing to manage the SPI CRC hardware 
 846:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       calculation
 847:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 848:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  [..] SPI communication using CRC is possible through the following procedure:
 849:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****    (#) Program the Data direction, Polarity, Phase, First Data, Baud Rate Prescaler, 
 850:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        Slave Management, Peripheral Mode and CRC Polynomial values using the SPI_Init()
 851:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        function.
 852:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****    (#) Enable the CRC calculation using the SPI_CalculateCRC() function.
 853:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****    (#) Enable the SPI using the SPI_Cmd() function
 854:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****    (#) Before writing the last data to the TX buffer, set the CRCNext bit using the 
 855:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        SPI_TransmitCRC() function to indicate that after transmission of the last 
 856:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        data, the CRC should be transmitted.
 857:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****    (#) After transmitting the last data, the SPI transmits the CRC. The SPI_CR1_CRCNEXT
 858:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****         bit is reset. The CRC is also received and compared against the SPI_RXCRCR 
 859:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****         value. 
 860:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****         If the value does not match, the SPI_FLAG_CRCERR flag is set and an interrupt
 861:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****         can be generated when the SPI_I2S_IT_ERR interrupt is enabled.
 862:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 863:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  [..]
 864:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****    (@) It is advised not to read the calculated CRC values during the communication.
 865:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 866:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****    (@) When the SPI is in slave mode, be careful to enable CRC calculation only 
 867:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        when the clock is stable, that is, when the clock is in the steady state. 
 868:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        If not, a wrong CRC calculation may be done. In fact, the CRC is sensitive 
 869:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        to the SCK slave input clock as soon as CRCEN is set, and this, whatever 
 870:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        the value of the SPE bit.
 871:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 872:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****    (@) With high bitrate frequencies, be careful when transmitting the CRC.
 873:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        As the number of used CPU cycles has to be as low as possible in the CRC 
 874:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        transfer phase, it is forbidden to call software functions in the CRC 
 875:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        transmission sequence to avoid errors in the last data and CRC reception. 
 876:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        In fact, CRCNEXT bit has to be written before the end of the transmission/reception 
 877:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        of the last data.
 878:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 879:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****    (@) For high bit rate frequencies, it is advised to use the DMA mode to avoid the
 880:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        degradation of the SPI speed performance due to CPU accesses impacting the 
 881:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        SPI bandwidth.
 882:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 883:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****    (@) When the STM32F4xx is configured as slave and the NSS hardware mode is 
 884:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        used, the NSS pin needs to be kept low between the data phase and the CRC 
 885:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        phase.
 886:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 887:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****    (@) When the SPI is configured in slave mode with the CRC feature enabled, CRC
 888:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        calculation takes place even if a high level is applied on the NSS pin. 
 889:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        This may happen for example in case of a multi-slave environment where the 
 890:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        communication master addresses slaves alternately.
 891:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 892:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****    (@) Between a slave de-selection (high level on NSS) and a new slave selection 
 893:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        (low level on NSS), the CRC value should be cleared on both master and slave
 894:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        sides in order to resynchronize the master and slave for their respective 
 895:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        CRC calculation.
 896:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 897:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****    (@) To clear the CRC, follow the procedure below:
 898:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        (#@) Disable SPI using the SPI_Cmd() function
 899:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        (#@) Disable the CRC calculation using the SPI_CalculateCRC() function.
 900:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        (#@) Enable the CRC calculation using the SPI_CalculateCRC() function.
 901:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        (#@) Enable SPI using the SPI_Cmd() function.
 902:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 903:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** @endverbatim
 904:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @{
 905:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 906:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 907:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
 908:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief  Enables or disables the CRC value calculation of the transferred bytes.
 909:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2, 3, 4, 5 or 6 to select the SPI peripheral.
 910:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  NewState: new state of the SPIx CRC value calculation.
 911:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          This parameter can be: ENABLE or DISABLE.
 912:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @retval None
 913:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 914:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** void SPI_CalculateCRC(SPI_TypeDef* SPIx, FunctionalState NewState)
 915:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** {
 1797              		.loc 1 915 0
 1798              		.cfi_startproc
 1799              		@ args = 0, pretend = 0, frame = 0
 1800              		@ frame_needed = 0, uses_anonymous_args = 0
 1801              	.LVL154:
 1802 0000 38B5     		push	{r3, r4, r5, lr}
 1803              	.LCFI13:
 1804              		.cfi_def_cfa_offset 16
 1805              		.cfi_offset 3, -16
 1806              		.cfi_offset 4, -12
 1807              		.cfi_offset 5, -8
 1808              		.cfi_offset 14, -4
 916:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
 917:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 1809              		.loc 1 917 0
 1810 0002 4FF44052 		mov	r2, #12288
 1811 0006 4FF46053 		mov	r3, #14336
 1812 000a C4F20102 		movt	r2, 16385
 1813 000e C4F20003 		movt	r3, 16384
 1814 0012 9042     		cmp	r0, r2
 1815 0014 18BF     		it	ne
 1816 0016 9842     		cmpne	r0, r3
 915:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
 1817              		.loc 1 915 0
 1818 0018 0446     		mov	r4, r0
 1819 001a 0D46     		mov	r5, r1
 1820              		.loc 1 917 0
 1821 001c 0BD0     		beq	.L304
 1822              		.loc 1 917 0 is_stmt 0 discriminator 1
 1823 001e 4FF47052 		mov	r2, #15360
 1824 0022 4FF45053 		mov	r3, #13312
 1825 0026 C4F20002 		movt	r2, 16384
 1826 002a C4F20103 		movt	r3, 16385
 1827 002e 9042     		cmp	r0, r2
 1828 0030 18BF     		it	ne
 1829 0032 9842     		cmpne	r0, r3
 1830 0034 0FD1     		bne	.L318
 1831              	.LVL155:
 1832              	.L304:
 918:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1833              		.loc 1 918 0 is_stmt 1
 1834 0036 012D     		cmp	r5, #1
 1835 0038 22D9     		bls	.L305
 1836              		.loc 1 918 0 is_stmt 0 discriminator 1
 1837 003a 40F20000 		movw	r0, #:lower16:.LC0
 1838 003e C0F20000 		movt	r0, #:upper16:.LC0
 1839 0042 40F29631 		movw	r1, #918
 1840 0046 FFF7FEFF 		bl	assert_failed
 1841              	.LVL156:
 1842              	.L306:
 919:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   if (NewState != DISABLE)
 920:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 921:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Enable the selected SPI CRC calculation */
 922:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     SPIx->CR1 |= SPI_CR1_CRCEN;
 1843              		.loc 1 922 0 is_stmt 1
 1844 004a 2388     		ldrh	r3, [r4]
 1845 004c 9BB2     		uxth	r3, r3
 1846 004e 43F40053 		orr	r3, r3, #8192
 1847 0052 2380     		strh	r3, [r4]	@ movhi
 1848 0054 38BD     		pop	{r3, r4, r5, pc}
 1849              	.LVL157:
 1850              	.L318:
 917:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1851              		.loc 1 917 0 discriminator 1
 1852 0056 4FF4A042 		mov	r2, #20480
 1853 005a 4FF4A843 		mov	r3, #21504
 1854 005e C4F20102 		movt	r2, 16385
 1855 0062 C4F20103 		movt	r3, 16385
 1856 0066 9042     		cmp	r0, r2
 1857 0068 18BF     		it	ne
 1858 006a 9842     		cmpne	r0, r3
 1859 006c E3D0     		beq	.L304
 1860 006e 40F20000 		movw	r0, #:lower16:.LC0
 1861              	.LVL158:
 1862 0072 C0F20000 		movt	r0, #:upper16:.LC0
 1863 0076 40F29531 		movw	r1, #917
 1864              	.LVL159:
 1865 007a FFF7FEFF 		bl	assert_failed
 1866              	.LVL160:
 1867 007e DAE7     		b	.L304
 1868              	.L305:
 919:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   if (NewState != DISABLE)
 1869              		.loc 1 919 0
 1870 0080 002D     		cmp	r5, #0
 1871 0082 E2D1     		bne	.L306
 923:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 924:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   else
 925:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 926:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Disable the selected SPI CRC calculation */
 927:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     SPIx->CR1 &= (uint16_t)~((uint16_t)SPI_CR1_CRCEN);
 1872              		.loc 1 927 0
 1873 0084 2388     		ldrh	r3, [r4]
 1874 0086 23F40053 		bic	r3, r3, #8192
 1875 008a 1B04     		lsls	r3, r3, #16
 1876 008c 1B0C     		lsrs	r3, r3, #16
 1877 008e 2380     		strh	r3, [r4]	@ movhi
 1878 0090 38BD     		pop	{r3, r4, r5, pc}
 1879              		.cfi_endproc
 1880              	.LFE138:
 1882 0092 00BF     		.section	.text.SPI_TransmitCRC,"ax",%progbits
 1883              		.align	2
 1884              		.global	SPI_TransmitCRC
 1885              		.thumb
 1886              		.thumb_func
 1888              	SPI_TransmitCRC:
 1889              	.LFB139:
 928:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 929:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** }
 930:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 931:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
 932:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief  Transmit the SPIx CRC value.
 933:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2, 3, 4, 5 or 6 to select the SPI peripheral.
 934:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @retval None
 935:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 936:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** void SPI_TransmitCRC(SPI_TypeDef* SPIx)
 937:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** {
 1890              		.loc 1 937 0
 1891              		.cfi_startproc
 1892              		@ args = 0, pretend = 0, frame = 0
 1893              		@ frame_needed = 0, uses_anonymous_args = 0
 1894              	.LVL161:
 938:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
 939:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 1895              		.loc 1 939 0
 1896 0000 4FF44052 		mov	r2, #12288
 1897 0004 4FF46053 		mov	r3, #14336
 1898 0008 C4F20102 		movt	r2, 16385
 1899 000c C4F20003 		movt	r3, 16384
 1900 0010 9042     		cmp	r0, r2
 1901 0012 18BF     		it	ne
 1902 0014 9842     		cmpne	r0, r3
 937:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
 1903              		.loc 1 937 0
 1904 0016 10B5     		push	{r4, lr}
 1905              	.LCFI14:
 1906              		.cfi_def_cfa_offset 8
 1907              		.cfi_offset 4, -8
 1908              		.cfi_offset 14, -4
 937:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
 1909              		.loc 1 937 0
 1910 0018 0446     		mov	r4, r0
 1911              		.loc 1 939 0
 1912 001a 17D0     		beq	.L320
 1913              		.loc 1 939 0 is_stmt 0 discriminator 1
 1914 001c 4FF47052 		mov	r2, #15360
 1915 0020 4FF45053 		mov	r3, #13312
 1916 0024 C4F20002 		movt	r2, 16384
 1917 0028 C4F20103 		movt	r3, 16385
 1918 002c 9042     		cmp	r0, r2
 1919 002e 18BF     		it	ne
 1920 0030 9842     		cmpne	r0, r3
 1921 0032 0BD0     		beq	.L320
 1922 0034 4FF4A042 		mov	r2, #20480
 1923 0038 4FF4A843 		mov	r3, #21504
 1924 003c C4F20102 		movt	r2, 16385
 1925 0040 C4F20103 		movt	r3, 16385
 1926 0044 9042     		cmp	r0, r2
 1927 0046 18BF     		it	ne
 1928 0048 9842     		cmpne	r0, r3
 1929 004a 05D1     		bne	.L330
 1930              	.LVL162:
 1931              	.L320:
 940:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
 941:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Enable the selected SPI CRC transmission */
 942:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   SPIx->CR1 |= SPI_CR1_CRCNEXT;
 1932              		.loc 1 942 0 is_stmt 1
 1933 004c 2388     		ldrh	r3, [r4]
 1934 004e 9BB2     		uxth	r3, r3
 1935 0050 43F48053 		orr	r3, r3, #4096
 1936 0054 2380     		strh	r3, [r4]	@ movhi
 1937 0056 10BD     		pop	{r4, pc}
 1938              	.LVL163:
 1939              	.L330:
 939:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
 1940              		.loc 1 939 0 discriminator 1
 1941 0058 40F20000 		movw	r0, #:lower16:.LC0
 1942              	.LVL164:
 1943 005c C0F20000 		movt	r0, #:upper16:.LC0
 1944 0060 40F2AB31 		movw	r1, #939
 1945 0064 FFF7FEFF 		bl	assert_failed
 1946              	.LVL165:
 1947 0068 F0E7     		b	.L320
 1948              		.cfi_endproc
 1949              	.LFE139:
 1951 006a 00BF     		.section	.text.SPI_GetCRC,"ax",%progbits
 1952              		.align	2
 1953              		.global	SPI_GetCRC
 1954              		.thumb
 1955              		.thumb_func
 1957              	SPI_GetCRC:
 1958              	.LFB140:
 943:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** }
 944:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 945:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
 946:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief  Returns the transmit or the receive CRC register value for the specified SPI.
 947:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2, 3, 4, 5 or 6 to select the SPI peripheral.
 948:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPI_CRC: specifies the CRC register to be read.
 949:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          This parameter can be one of the following values:
 950:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_CRC_Tx: Selects Tx CRC register
 951:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_CRC_Rx: Selects Rx CRC register
 952:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @retval The selected CRC register value..
 953:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 954:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** uint16_t SPI_GetCRC(SPI_TypeDef* SPIx, uint8_t SPI_CRC)
 955:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** {
 1959              		.loc 1 955 0
 1960              		.cfi_startproc
 1961              		@ args = 0, pretend = 0, frame = 0
 1962              		@ frame_needed = 0, uses_anonymous_args = 0
 1963              	.LVL166:
 1964 0000 38B5     		push	{r3, r4, r5, lr}
 1965              	.LCFI15:
 1966              		.cfi_def_cfa_offset 16
 1967              		.cfi_offset 3, -16
 1968              		.cfi_offset 4, -12
 1969              		.cfi_offset 5, -8
 1970              		.cfi_offset 14, -4
 956:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   uint16_t crcreg = 0;
 957:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
 958:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 1971              		.loc 1 958 0
 1972 0002 4FF44052 		mov	r2, #12288
 1973 0006 4FF46053 		mov	r3, #14336
 1974 000a C4F20102 		movt	r2, 16385
 1975 000e C4F20003 		movt	r3, 16384
 1976 0012 9042     		cmp	r0, r2
 1977 0014 18BF     		it	ne
 1978 0016 9842     		cmpne	r0, r3
 955:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   uint16_t crcreg = 0;
 1979              		.loc 1 955 0
 1980 0018 0446     		mov	r4, r0
 1981 001a 0D46     		mov	r5, r1
 1982              		.loc 1 958 0
 1983 001c 0BD0     		beq	.L332
 1984              		.loc 1 958 0 is_stmt 0 discriminator 1
 1985 001e 4FF47052 		mov	r2, #15360
 1986 0022 4FF45053 		mov	r3, #13312
 1987 0026 C4F20002 		movt	r2, 16384
 1988 002a C4F20103 		movt	r3, 16385
 1989 002e 9042     		cmp	r0, r2
 1990 0030 18BF     		it	ne
 1991 0032 9842     		cmpne	r0, r3
 1992 0034 0CD1     		bne	.L346
 1993              	.LVL167:
 1994              	.L332:
 959:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_CRC(SPI_CRC));
 1995              		.loc 1 959 0 is_stmt 1
 1996 0036 012D     		cmp	r5, #1
 1997 0038 1FD9     		bls	.L333
 1998              		.loc 1 959 0 is_stmt 0 discriminator 1
 1999 003a 40F20000 		movw	r0, #:lower16:.LC0
 2000 003e C0F20000 		movt	r0, #:upper16:.LC0
 2001 0042 40F2BF31 		movw	r1, #959
 2002 0046 FFF7FEFF 		bl	assert_failed
 2003              	.LVL168:
 2004              	.L334:
 960:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   if (SPI_CRC != SPI_CRC_Rx)
 961:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 962:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Get the Tx CRC register */
 963:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     crcreg = SPIx->TXCRCR;
 2005              		.loc 1 963 0 is_stmt 1
 2006 004a 208B     		ldrh	r0, [r4, #24]
 2007 004c 80B2     		uxth	r0, r0
 2008              	.LVL169:
 2009 004e 38BD     		pop	{r3, r4, r5, pc}
 2010              	.LVL170:
 2011              	.L346:
 958:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_CRC(SPI_CRC));
 2012              		.loc 1 958 0 discriminator 1
 2013 0050 4FF4A042 		mov	r2, #20480
 2014 0054 4FF4A843 		mov	r3, #21504
 2015 0058 C4F20102 		movt	r2, 16385
 2016 005c C4F20103 		movt	r3, 16385
 2017 0060 9042     		cmp	r0, r2
 2018 0062 18BF     		it	ne
 2019 0064 9842     		cmpne	r0, r3
 2020 0066 E6D0     		beq	.L332
 2021 0068 40F20000 		movw	r0, #:lower16:.LC0
 2022              	.LVL171:
 2023 006c C0F20000 		movt	r0, #:upper16:.LC0
 2024 0070 40F2BE31 		movw	r1, #958
 2025              	.LVL172:
 2026 0074 FFF7FEFF 		bl	assert_failed
 2027              	.LVL173:
 2028 0078 DDE7     		b	.L332
 2029              	.L333:
 960:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   if (SPI_CRC != SPI_CRC_Rx)
 2030              		.loc 1 960 0
 2031 007a E6D1     		bne	.L334
 964:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 965:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   else
 966:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 967:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Get the Rx CRC register */
 968:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     crcreg = SPIx->RXCRCR;
 2032              		.loc 1 968 0
 2033 007c A08A     		ldrh	r0, [r4, #20]
 2034 007e 80B2     		uxth	r0, r0
 2035              	.LVL174:
 969:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 970:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Return the selected CRC register */
 971:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   return crcreg;
 972:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** }
 2036              		.loc 1 972 0
 2037 0080 38BD     		pop	{r3, r4, r5, pc}
 2038              		.cfi_endproc
 2039              	.LFE140:
 2041 0082 00BF     		.section	.text.SPI_GetCRCPolynomial,"ax",%progbits
 2042              		.align	2
 2043              		.global	SPI_GetCRCPolynomial
 2044              		.thumb
 2045              		.thumb_func
 2047              	SPI_GetCRCPolynomial:
 2048              	.LFB141:
 973:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 974:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
 975:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief  Returns the CRC Polynomial register value for the specified SPI.
 976:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2, 3, 4, 5 or 6 to select the SPI peripheral.
 977:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @retval The CRC Polynomial register value.
 978:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 979:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** uint16_t SPI_GetCRCPolynomial(SPI_TypeDef* SPIx)
 980:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** {
 2049              		.loc 1 980 0
 2050              		.cfi_startproc
 2051              		@ args = 0, pretend = 0, frame = 0
 2052              		@ frame_needed = 0, uses_anonymous_args = 0
 2053              	.LVL175:
 981:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
 982:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 2054              		.loc 1 982 0
 2055 0000 4FF44052 		mov	r2, #12288
 2056 0004 4FF46053 		mov	r3, #14336
 2057 0008 C4F20102 		movt	r2, 16385
 2058 000c C4F20003 		movt	r3, 16384
 2059 0010 9042     		cmp	r0, r2
 2060 0012 18BF     		it	ne
 2061 0014 9842     		cmpne	r0, r3
 980:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
 2062              		.loc 1 980 0
 2063 0016 10B5     		push	{r4, lr}
 2064              	.LCFI16:
 2065              		.cfi_def_cfa_offset 8
 2066              		.cfi_offset 4, -8
 2067              		.cfi_offset 14, -4
 980:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
 2068              		.loc 1 980 0
 2069 0018 0446     		mov	r4, r0
 2070              		.loc 1 982 0
 2071 001a 17D0     		beq	.L348
 2072              		.loc 1 982 0 is_stmt 0 discriminator 1
 2073 001c 4FF47052 		mov	r2, #15360
 2074 0020 4FF45053 		mov	r3, #13312
 2075 0024 C4F20002 		movt	r2, 16384
 2076 0028 C4F20103 		movt	r3, 16385
 2077 002c 9042     		cmp	r0, r2
 2078 002e 18BF     		it	ne
 2079 0030 9842     		cmpne	r0, r3
 2080 0032 0BD0     		beq	.L348
 2081 0034 4FF4A042 		mov	r2, #20480
 2082 0038 4FF4A843 		mov	r3, #21504
 2083 003c C4F20102 		movt	r2, 16385
 2084 0040 C4F20103 		movt	r3, 16385
 2085 0044 9042     		cmp	r0, r2
 2086 0046 18BF     		it	ne
 2087 0048 9842     		cmpne	r0, r3
 2088 004a 02D1     		bne	.L358
 2089              	.L348:
 983:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
 984:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Return the CRC polynomial register */
 985:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   return SPIx->CRCPR;
 2090              		.loc 1 985 0 is_stmt 1
 2091 004c 208A     		ldrh	r0, [r4, #16]
 2092              	.LVL176:
 986:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** }
 2093              		.loc 1 986 0
 2094 004e 80B2     		uxth	r0, r0
 2095 0050 10BD     		pop	{r4, pc}
 2096              	.LVL177:
 2097              	.L358:
 982:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
 2098              		.loc 1 982 0 discriminator 1
 2099 0052 40F20000 		movw	r0, #:lower16:.LC0
 2100              	.LVL178:
 2101 0056 C0F20000 		movt	r0, #:upper16:.LC0
 2102 005a 40F2D631 		movw	r1, #982
 2103 005e FFF7FEFF 		bl	assert_failed
 2104              	.LVL179:
 985:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** }
 2105              		.loc 1 985 0 discriminator 1
 2106 0062 208A     		ldrh	r0, [r4, #16]
 2107              		.loc 1 986 0 discriminator 1
 2108 0064 80B2     		uxth	r0, r0
 2109 0066 10BD     		pop	{r4, pc}
 2110              		.cfi_endproc
 2111              	.LFE141:
 2113              		.section	.text.SPI_I2S_DMACmd,"ax",%progbits
 2114              		.align	2
 2115              		.global	SPI_I2S_DMACmd
 2116              		.thumb
 2117              		.thumb_func
 2119              	SPI_I2S_DMACmd:
 2120              	.LFB142:
 987:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 988:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
 989:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @}
 990:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
 991:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 992:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /** @defgroup SPI_Group4 DMA transfers management functions
 993:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  *  @brief   DMA transfers management functions
 994:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *
 995:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** @verbatim   
 996:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  ===============================================================================
 997:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****                    ##### DMA transfers management functions #####
 998:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  ===============================================================================  
 999:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1000:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** @endverbatim
1001:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @{
1002:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
1003:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1004:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
1005:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief  Enables or disables the SPIx/I2Sx DMA interface.
1006:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPIx: To select the SPIx/I2Sx peripheral, where x can be: 1, 2, 3, 4, 5 or 6 
1007:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         in SPI mode or 2 or 3 in I2S mode or I2Sxext for I2S full duplex mode. 
1008:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPI_I2S_DMAReq: specifies the SPI DMA transfer request to be enabled or disabled. 
1009:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          This parameter can be any combination of the following values:
1010:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_I2S_DMAReq_Tx: Tx buffer DMA transfer request
1011:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_I2S_DMAReq_Rx: Rx buffer DMA transfer request
1012:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  NewState: new state of the selected SPI DMA transfer request.
1013:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          This parameter can be: ENABLE or DISABLE.
1014:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @retval None
1015:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
1016:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** void SPI_I2S_DMACmd(SPI_TypeDef* SPIx, uint16_t SPI_I2S_DMAReq, FunctionalState NewState)
1017:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** {
 2121              		.loc 1 1017 0
 2122              		.cfi_startproc
 2123              		@ args = 0, pretend = 0, frame = 0
 2124              		@ frame_needed = 0, uses_anonymous_args = 0
 2125              	.LVL180:
 2126 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2127              	.LCFI17:
 2128              		.cfi_def_cfa_offset 24
 2129              		.cfi_offset 3, -24
 2130              		.cfi_offset 4, -20
 2131              		.cfi_offset 5, -16
 2132              		.cfi_offset 6, -12
 2133              		.cfi_offset 7, -8
 2134              		.cfi_offset 14, -4
1018:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
1019:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH_EXT(SPIx));
 2135              		.loc 1 1019 0
 2136 0002 4FF44056 		mov	r6, #12288
 2137 0006 4FF46053 		mov	r3, #14336
 2138 000a C4F20106 		movt	r6, 16385
 2139 000e C4F20003 		movt	r3, 16384
 2140 0012 B042     		cmp	r0, r6
 2141 0014 18BF     		it	ne
 2142 0016 9842     		cmpne	r0, r3
1017:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
 2143              		.loc 1 1017 0
 2144 0018 0446     		mov	r4, r0
 2145 001a 0D46     		mov	r5, r1
 2146 001c 1746     		mov	r7, r2
 2147              		.loc 1 1019 0
 2148 001e 0BD0     		beq	.L360
 2149              		.loc 1 1019 0 is_stmt 0 discriminator 1
 2150 0020 4FF47052 		mov	r2, #15360
 2151              	.LVL181:
 2152 0024 4FF45053 		mov	r3, #13312
 2153 0028 C4F20002 		movt	r2, 16384
 2154 002c C4F20103 		movt	r3, 16385
 2155 0030 9042     		cmp	r0, r2
 2156 0032 18BF     		it	ne
 2157 0034 9842     		cmpne	r0, r3
 2158 0036 24D1     		bne	.L378
 2159              	.LVL182:
 2160              	.L360:
1020:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2161              		.loc 1 1020 0 is_stmt 1
 2162 0038 012F     		cmp	r7, #1
 2163 003a 07D9     		bls	.L361
 2164              		.loc 1 1020 0 is_stmt 0 discriminator 1
 2165 003c 40F20000 		movw	r0, #:lower16:.LC0
 2166 0040 C0F20000 		movt	r0, #:upper16:.LC0
 2167 0044 4FF47F71 		mov	r1, #1020
 2168 0048 FFF7FEFF 		bl	assert_failed
 2169              	.LVL183:
 2170              	.L361:
1021:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_I2S_DMAREQ(SPI_I2S_DMAReq));
 2171              		.loc 1 1021 0 is_stmt 1
 2172 004c 4FF6FC73 		movw	r3, #65532
 2173 0050 2B40     		ands	r3, r3, r5
 2174 0052 3BB9     		cbnz	r3, .L362
 2175              		.loc 1 1021 0 is_stmt 0 discriminator 2
 2176 0054 35B1     		cbz	r5, .L362
1022:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1023:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   if (NewState != DISABLE)
1024:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
1025:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Enable the selected SPI DMA requests */
1026:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     SPIx->CR2 |= SPI_I2S_DMAReq;
 2177              		.loc 1 1026 0 is_stmt 1
 2178 0056 A388     		ldrh	r3, [r4, #4]
 2179 0058 9BB2     		uxth	r3, r3
1023:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 2180              		.loc 1 1023 0
 2181 005a 7FB9     		cbnz	r7, .L379
 2182              	.L364:
1027:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
1028:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   else
1029:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
1030:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Disable the selected SPI DMA requests */
1031:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     SPIx->CR2 &= (uint16_t)~SPI_I2S_DMAReq;
 2183              		.loc 1 1031 0
 2184 005c 23EA0505 		bic	r5, r3, r5
 2185 0060 A580     		strh	r5, [r4, #4]	@ movhi
 2186 0062 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2187              	.LVL184:
 2188              	.L362:
1021:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 2189              		.loc 1 1021 0 discriminator 1
 2190 0064 40F20000 		movw	r0, #:lower16:.LC0
 2191 0068 C0F20000 		movt	r0, #:upper16:.LC0
 2192 006c 40F2FD31 		movw	r1, #1021
 2193 0070 FFF7FEFF 		bl	assert_failed
 2194              	.LVL185:
1026:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 2195              		.loc 1 1026 0 discriminator 1
 2196 0074 A388     		ldrh	r3, [r4, #4]
 2197 0076 9BB2     		uxth	r3, r3
1023:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 2198              		.loc 1 1023 0 discriminator 1
 2199 0078 002F     		cmp	r7, #0
 2200 007a EFD0     		beq	.L364
 2201              	.L379:
1026:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 2202              		.loc 1 1026 0
 2203 007c 1D43     		orrs	r5, r5, r3
 2204 007e A580     		strh	r5, [r4, #4]	@ movhi
 2205 0080 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2206              	.LVL186:
 2207              	.L378:
1019:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2208              		.loc 1 1019 0 discriminator 1
 2209 0082 4FF4A042 		mov	r2, #20480
 2210 0086 4FF4A843 		mov	r3, #21504
 2211 008a C4F20102 		movt	r2, 16385
 2212 008e C4F20103 		movt	r3, 16385
 2213 0092 9042     		cmp	r0, r2
 2214 0094 18BF     		it	ne
 2215 0096 9842     		cmpne	r0, r3
 2216 0098 CED0     		beq	.L360
 2217 009a 4FF45053 		mov	r3, #13312
 2218 009e C4F20003 		movt	r3, 16384
 2219 00a2 9842     		cmp	r0, r3
 2220 00a4 18BF     		it	ne
 2221 00a6 B0F1402F 		cmpne	r0, #1073758208
 2222 00aa C5D0     		beq	.L360
 2223 00ac 40F20000 		movw	r0, #:lower16:.LC0
 2224              	.LVL187:
 2225 00b0 C0F20000 		movt	r0, #:upper16:.LC0
 2226 00b4 40F2FB31 		movw	r1, #1019
 2227              	.LVL188:
 2228 00b8 FFF7FEFF 		bl	assert_failed
 2229              	.LVL189:
 2230 00bc BCE7     		b	.L360
 2231              		.cfi_endproc
 2232              	.LFE142:
 2234 00be 00BF     		.section	.text.SPI_I2S_ITConfig,"ax",%progbits
 2235              		.align	2
 2236              		.global	SPI_I2S_ITConfig
 2237              		.thumb
 2238              		.thumb_func
 2240              	SPI_I2S_ITConfig:
 2241              	.LFB143:
1032:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
1033:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** }
1034:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1035:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
1036:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @}
1037:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
1038:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1039:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /** @defgroup SPI_Group5 Interrupts and flags management functions
1040:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  *  @brief   Interrupts and flags management functions
1041:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *
1042:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** @verbatim   
1043:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  ===============================================================================
1044:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****             ##### Interrupts and flags management functions #####
1045:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  ===============================================================================  
1046:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  
1047:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  [..] This section provides a set of functions allowing to configure the SPI Interrupts 
1048:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       sources and check or clear the flags or pending bits status.
1049:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       The user should identify which mode will be used in his application to manage 
1050:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       the communication: Polling mode, Interrupt mode or DMA mode. 
1051:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     
1052:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  *** Polling Mode ***
1053:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  ====================
1054:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** [..] In Polling Mode, the SPI/I2S communication can be managed by 9 flags:
1055:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   (#) SPI_I2S_FLAG_TXE : to indicate the status of the transmit buffer register
1056:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   (#) SPI_I2S_FLAG_RXNE : to indicate the status of the receive buffer register
1057:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   (#) SPI_I2S_FLAG_BSY : to indicate the state of the communication layer of the SPI.
1058:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   (#) SPI_FLAG_CRCERR : to indicate if a CRC Calculation error occur              
1059:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   (#) SPI_FLAG_MODF : to indicate if a Mode Fault error occur
1060:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   (#) SPI_I2S_FLAG_OVR : to indicate if an Overrun error occur
1061:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   (#) I2S_FLAG_TIFRFE: to indicate a Frame Format error occurs.
1062:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   (#) I2S_FLAG_UDR: to indicate an Underrun error occurs.
1063:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   (#) I2S_FLAG_CHSIDE: to indicate Channel Side.
1064:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1065:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   (@) Do not use the BSY flag to handle each data transmission or reception. It is
1066:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       better to use the TXE and RXNE flags instead.
1067:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1068:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  [..] In this Mode it is advised to use the following functions:
1069:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****    (+) FlagStatus SPI_I2S_GetFlagStatus(SPI_TypeDef* SPIx, uint16_t SPI_I2S_FLAG);
1070:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****    (+) void SPI_I2S_ClearFlag(SPI_TypeDef* SPIx, uint16_t SPI_I2S_FLAG);
1071:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1072:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  *** Interrupt Mode ***
1073:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  ======================
1074:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  [..] In Interrupt Mode, the SPI communication can be managed by 3 interrupt sources
1075:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****       and 7 pending bits: 
1076:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****    (+) Pending Bits:
1077:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        (##) SPI_I2S_IT_TXE : to indicate the status of the transmit buffer register
1078:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        (##) SPI_I2S_IT_RXNE : to indicate the status of the receive buffer register
1079:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        (##) SPI_IT_CRCERR : to indicate if a CRC Calculation error occur (available in SPI mode onl
1080:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        (##) SPI_IT_MODF : to indicate if a Mode Fault error occur (available in SPI mode only)
1081:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        (##) SPI_I2S_IT_OVR : to indicate if an Overrun error occur
1082:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        (##) I2S_IT_UDR : to indicate an Underrun Error occurs (available in I2S mode only).
1083:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        (##) I2S_FLAG_TIFRFE : to indicate a Frame Format error occurs (available in TI mode only).
1084:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1085:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****    (+) Interrupt Source:
1086:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        (##) SPI_I2S_IT_TXE: specifies the interrupt source for the Tx buffer empty 
1087:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****             interrupt.  
1088:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        (##) SPI_I2S_IT_RXNE : specifies the interrupt source for the Rx buffer not 
1089:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****             empty interrupt.
1090:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        (##) SPI_I2S_IT_ERR : specifies the interrupt source for the errors interrupt.
1091:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1092:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  [..] In this Mode it is advised to use the following functions:
1093:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****    (+) void SPI_I2S_ITConfig(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT, FunctionalState NewState);
1094:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****    (+) ITStatus SPI_I2S_GetITStatus(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT);
1095:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****    (+) void SPI_I2S_ClearITPendingBit(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT);
1096:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1097:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  *** DMA Mode ***
1098:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  ================
1099:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  [..] In DMA Mode, the SPI communication can be managed by 2 DMA Channel requests:
1100:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****    (#) SPI_I2S_DMAReq_Tx: specifies the Tx buffer DMA transfer request
1101:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****    (#) SPI_I2S_DMAReq_Rx: specifies the Rx buffer DMA transfer request
1102:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1103:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****  [..] In this Mode it is advised to use the following function:
1104:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****    (+) void SPI_I2S_DMACmd(SPI_TypeDef* SPIx, uint16_t SPI_I2S_DMAReq, FunctionalState 
1105:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****        NewState);
1106:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1107:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** @endverbatim
1108:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @{
1109:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
1110:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1111:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
1112:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief  Enables or disables the specified SPI/I2S interrupts.
1113:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPIx: To select the SPIx/I2Sx peripheral, where x can be: 1, 2, 3, 4, 5 or 6 
1114:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         in SPI mode or 2 or 3 in I2S mode or I2Sxext for I2S full duplex mode. 
1115:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPI_I2S_IT: specifies the SPI interrupt source to be enabled or disabled. 
1116:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          This parameter can be one of the following values:
1117:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_I2S_IT_TXE: Tx buffer empty interrupt mask
1118:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_I2S_IT_RXNE: Rx buffer not empty interrupt mask
1119:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_I2S_IT_ERR: Error interrupt mask
1120:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  NewState: new state of the specified SPI interrupt.
1121:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          This parameter can be: ENABLE or DISABLE.
1122:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @retval None
1123:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
1124:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** void SPI_I2S_ITConfig(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT, FunctionalState NewState)
1125:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** {
 2242              		.loc 1 1125 0
 2243              		.cfi_startproc
 2244              		@ args = 0, pretend = 0, frame = 0
 2245              		@ frame_needed = 0, uses_anonymous_args = 0
 2246              	.LVL190:
 2247 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2248              	.LCFI18:
 2249              		.cfi_def_cfa_offset 24
 2250              		.cfi_offset 3, -24
 2251              		.cfi_offset 4, -20
 2252              		.cfi_offset 5, -16
 2253              		.cfi_offset 6, -12
 2254              		.cfi_offset 7, -8
 2255              		.cfi_offset 14, -4
1126:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   uint16_t itpos = 0, itmask = 0 ;
1127:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
1128:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
1129:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH_EXT(SPIx));
 2256              		.loc 1 1129 0
 2257 0002 4FF44056 		mov	r6, #12288
 2258 0006 4FF46053 		mov	r3, #14336
 2259 000a C4F20106 		movt	r6, 16385
 2260 000e C4F20003 		movt	r3, 16384
 2261 0012 B042     		cmp	r0, r6
 2262 0014 18BF     		it	ne
 2263 0016 9842     		cmpne	r0, r3
1125:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   uint16_t itpos = 0, itmask = 0 ;
 2264              		.loc 1 1125 0
 2265 0018 0446     		mov	r4, r0
 2266 001a 0D46     		mov	r5, r1
 2267 001c 1746     		mov	r7, r2
 2268              		.loc 1 1129 0
 2269 001e 0BD0     		beq	.L381
 2270              		.loc 1 1129 0 is_stmt 0 discriminator 1
 2271 0020 4FF47052 		mov	r2, #15360
 2272              	.LVL191:
 2273 0024 4FF45053 		mov	r3, #13312
 2274 0028 C4F20002 		movt	r2, 16384
 2275 002c C4F20103 		movt	r3, 16385
 2276 0030 9042     		cmp	r0, r2
 2277 0032 18BF     		it	ne
 2278 0034 9842     		cmpne	r0, r3
 2279 0036 23D1     		bne	.L404
 2280              	.LVL192:
 2281              	.L381:
1130:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2282              		.loc 1 1130 0 is_stmt 1
 2283 0038 012F     		cmp	r7, #1
 2284 003a 07D9     		bls	.L382
 2285              		.loc 1 1130 0 is_stmt 0 discriminator 1
 2286 003c 40F20000 		movw	r0, #:lower16:.LC0
 2287 0040 C0F20000 		movt	r0, #:upper16:.LC0
 2288 0044 40F26A41 		movw	r1, #1130
 2289 0048 FFF7FEFF 		bl	assert_failed
 2290              	.LVL193:
 2291              	.L382:
1131:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_I2S_CONFIG_IT(SPI_I2S_IT));
 2292              		.loc 1 1131 0 is_stmt 1
 2293 004c 712D     		cmp	r5, #113
 2294 004e 18BF     		it	ne
 2295 0050 602D     		cmpne	r5, #96
 2296 0052 09D0     		beq	.L383
 2297              		.loc 1 1131 0 is_stmt 0 discriminator 1
 2298 0054 502D     		cmp	r5, #80
 2299 0056 07D0     		beq	.L383
 2300 0058 40F20000 		movw	r0, #:lower16:.LC0
 2301 005c C0F20000 		movt	r0, #:upper16:.LC0
 2302 0060 40F26B41 		movw	r1, #1131
 2303 0064 FFF7FEFF 		bl	assert_failed
 2304              	.LVL194:
 2305              	.L383:
1132:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1133:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Get the SPI IT index */
1134:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   itpos = SPI_I2S_IT >> 4;
1135:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1136:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Set the IT mask */
1137:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   itmask = (uint16_t)1 << (uint16_t)itpos;
 2306              		.loc 1 1137 0 is_stmt 1
 2307 0068 0123     		movs	r3, #1
 2308 006a 2D09     		lsrs	r5, r5, #4
 2309              	.LVL195:
 2310 006c 03FA05F5 		lsl	r5, r3, r5
1138:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1139:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   if (NewState != DISABLE)
1140:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
1141:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Enable the selected SPI interrupt */
1142:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     SPIx->CR2 |= itmask;
 2311              		.loc 1 1142 0
 2312 0070 A388     		ldrh	r3, [r4, #4]
1137:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 2313              		.loc 1 1137 0
 2314 0072 ADB2     		uxth	r5, r5
 2315              	.LVL196:
 2316              		.loc 1 1142 0
 2317 0074 9BB2     		uxth	r3, r3
1139:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
 2318              		.loc 1 1139 0
 2319 0076 0FBB     		cbnz	r7, .L405
1143:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
1144:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   else
1145:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
1146:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* Disable the selected SPI interrupt */
1147:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     SPIx->CR2 &= (uint16_t)~itmask;
 2320              		.loc 1 1147 0
 2321 0078 23EA0505 		bic	r5, r3, r5
 2322              	.LVL197:
 2323 007c A580     		strh	r5, [r4, #4]	@ movhi
 2324 007e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2325              	.LVL198:
 2326              	.L404:
1129:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2327              		.loc 1 1129 0 discriminator 1
 2328 0080 4FF4A042 		mov	r2, #20480
 2329 0084 4FF4A843 		mov	r3, #21504
 2330 0088 C4F20102 		movt	r2, 16385
 2331 008c C4F20103 		movt	r3, 16385
 2332 0090 9042     		cmp	r0, r2
 2333 0092 18BF     		it	ne
 2334 0094 9842     		cmpne	r0, r3
 2335 0096 CFD0     		beq	.L381
 2336 0098 4FF45053 		mov	r3, #13312
 2337 009c C4F20003 		movt	r3, 16384
 2338 00a0 9842     		cmp	r0, r3
 2339 00a2 18BF     		it	ne
 2340 00a4 B0F1402F 		cmpne	r0, #1073758208
 2341 00a8 C6D0     		beq	.L381
 2342 00aa 40F20000 		movw	r0, #:lower16:.LC0
 2343              	.LVL199:
 2344 00ae C0F20000 		movt	r0, #:upper16:.LC0
 2345 00b2 40F26941 		movw	r1, #1129
 2346              	.LVL200:
 2347 00b6 FFF7FEFF 		bl	assert_failed
 2348              	.LVL201:
 2349 00ba BDE7     		b	.L381
 2350              	.LVL202:
 2351              	.L405:
1142:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
 2352              		.loc 1 1142 0
 2353 00bc 1D43     		orrs	r5, r5, r3
 2354              	.LVL203:
 2355 00be A580     		strh	r5, [r4, #4]	@ movhi
 2356 00c0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2357              		.cfi_endproc
 2358              	.LFE143:
 2360 00c2 00BF     		.section	.text.SPI_I2S_GetFlagStatus,"ax",%progbits
 2361              		.align	2
 2362              		.global	SPI_I2S_GetFlagStatus
 2363              		.thumb
 2364              		.thumb_func
 2366              	SPI_I2S_GetFlagStatus:
 2367              	.LFB144:
1148:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
1149:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** }
1150:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1151:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
1152:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief  Checks whether the specified SPIx/I2Sx flag is set or not.
1153:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPIx: To select the SPIx/I2Sx peripheral, where x can be: 1, 2, 3, 4, 5 or 6 
1154:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         in SPI mode or 2 or 3 in I2S mode or I2Sxext for I2S full duplex mode. 
1155:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPI_I2S_FLAG: specifies the SPI flag to check. 
1156:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          This parameter can be one of the following values:
1157:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_I2S_FLAG_TXE: Transmit buffer empty flag.
1158:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_I2S_FLAG_RXNE: Receive buffer not empty flag.
1159:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_I2S_FLAG_BSY: Busy flag.
1160:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_I2S_FLAG_OVR: Overrun flag.
1161:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_FLAG_MODF: Mode Fault flag.
1162:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_FLAG_CRCERR: CRC Error flag.
1163:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_I2S_FLAG_TIFRFE: Format Error.
1164:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg I2S_FLAG_UDR: Underrun Error flag.
1165:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg I2S_FLAG_CHSIDE: Channel Side flag.  
1166:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @retval The new state of SPI_I2S_FLAG (SET or RESET).
1167:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
1168:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** FlagStatus SPI_I2S_GetFlagStatus(SPI_TypeDef* SPIx, uint16_t SPI_I2S_FLAG)
1169:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** {
 2368              		.loc 1 1169 0
 2369              		.cfi_startproc
 2370              		@ args = 0, pretend = 0, frame = 0
 2371              		@ frame_needed = 0, uses_anonymous_args = 0
 2372              	.LVL204:
 2373 0000 38B5     		push	{r3, r4, r5, lr}
 2374              	.LCFI19:
 2375              		.cfi_def_cfa_offset 16
 2376              		.cfi_offset 3, -16
 2377              		.cfi_offset 4, -12
 2378              		.cfi_offset 5, -8
 2379              		.cfi_offset 14, -4
1170:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   FlagStatus bitstatus = RESET;
1171:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
1172:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH_EXT(SPIx));
 2380              		.loc 1 1172 0
 2381 0002 4FF44052 		mov	r2, #12288
 2382 0006 4FF46053 		mov	r3, #14336
 2383 000a C4F20102 		movt	r2, 16385
 2384 000e C4F20003 		movt	r3, 16384
 2385 0012 9042     		cmp	r0, r2
 2386 0014 18BF     		it	ne
 2387 0016 9842     		cmpne	r0, r3
1169:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   FlagStatus bitstatus = RESET;
 2388              		.loc 1 1169 0
 2389 0018 0446     		mov	r4, r0
 2390 001a 0D46     		mov	r5, r1
 2391              		.loc 1 1172 0
 2392 001c 0BD0     		beq	.L407
 2393              		.loc 1 1172 0 is_stmt 0 discriminator 1
 2394 001e 4FF47052 		mov	r2, #15360
 2395 0022 4FF45053 		mov	r3, #13312
 2396 0026 C4F20002 		movt	r2, 16384
 2397 002a C4F20103 		movt	r3, 16385
 2398 002e 9042     		cmp	r0, r2
 2399 0030 18BF     		it	ne
 2400 0032 9842     		cmpne	r0, r3
 2401 0034 1FD1     		bne	.L433
 2402              	.LVL205:
 2403              	.L407:
1173:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_I2S_GET_FLAG(SPI_I2S_FLAG));
 2404              		.loc 1 1173 0 is_stmt 1
 2405 0036 802D     		cmp	r5, #128
 2406 0038 18BF     		it	ne
 2407 003a 402D     		cmpne	r5, #64
 2408 003c 15D0     		beq	.L408
 2409              		.loc 1 1173 0 is_stmt 0 discriminator 1
 2410 003e 202D     		cmp	r5, #32
 2411 0040 18BF     		it	ne
 2412 0042 102D     		cmpne	r5, #16
 2413 0044 11D0     		beq	.L408
 2414 0046 082D     		cmp	r5, #8
 2415 0048 18BF     		it	ne
 2416 004a 042D     		cmpne	r5, #4
 2417 004c 0DD0     		beq	.L408
 2418 004e 6B1E     		subs	r3, r5, #1
 2419 0050 012B     		cmp	r3, #1
 2420 0052 0AD9     		bls	.L408
 2421 0054 B5F5807F 		cmp	r5, #256
 2422 0058 07D0     		beq	.L408
 2423 005a 40F20000 		movw	r0, #:lower16:.LC0
 2424 005e C0F20000 		movt	r0, #:upper16:.LC0
 2425 0062 40F29541 		movw	r1, #1173
 2426 0066 FFF7FEFF 		bl	assert_failed
 2427              	.LVL206:
 2428              	.L408:
1174:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   
1175:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the status of the specified SPI flag */
1176:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   if ((SPIx->SR & SPI_I2S_FLAG) != (uint16_t)RESET)
 2429              		.loc 1 1176 0 is_stmt 1
 2430 006a 2389     		ldrh	r3, [r4, #8]
 2431              	.LVL207:
 2432 006c 1D42     		tst	r5, r3
1177:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
1178:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* SPI_I2S_FLAG is set */
1179:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     bitstatus = SET;
1180:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
1181:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   else
1182:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
1183:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* SPI_I2S_FLAG is reset */
1184:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     bitstatus = RESET;
1185:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
1186:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Return the SPI_I2S_FLAG status */
1187:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   return  bitstatus;
1188:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** }
 2433              		.loc 1 1188 0
 2434 006e 0CBF     		ite	eq
 2435 0070 0020     		moveq	r0, #0
 2436 0072 0120     		movne	r0, #1
 2437 0074 38BD     		pop	{r3, r4, r5, pc}
 2438              	.LVL208:
 2439              	.L433:
1172:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_I2S_GET_FLAG(SPI_I2S_FLAG));
 2440              		.loc 1 1172 0 discriminator 1
 2441 0076 4FF4A042 		mov	r2, #20480
 2442 007a 4FF4A843 		mov	r3, #21504
 2443 007e C4F20102 		movt	r2, 16385
 2444 0082 C4F20103 		movt	r3, 16385
 2445 0086 9042     		cmp	r0, r2
 2446 0088 18BF     		it	ne
 2447 008a 9842     		cmpne	r0, r3
 2448 008c D3D0     		beq	.L407
 2449 008e 4FF45053 		mov	r3, #13312
 2450 0092 C4F20003 		movt	r3, 16384
 2451 0096 9842     		cmp	r0, r3
 2452 0098 18BF     		it	ne
 2453 009a B0F1402F 		cmpne	r0, #1073758208
 2454 009e CAD0     		beq	.L407
 2455 00a0 40F20000 		movw	r0, #:lower16:.LC0
 2456              	.LVL209:
 2457 00a4 C0F20000 		movt	r0, #:upper16:.LC0
 2458 00a8 40F29441 		movw	r1, #1172
 2459              	.LVL210:
 2460 00ac FFF7FEFF 		bl	assert_failed
 2461              	.LVL211:
 2462 00b0 C1E7     		b	.L407
 2463              		.cfi_endproc
 2464              	.LFE144:
 2466 00b2 00BF     		.section	.text.SPI_I2S_ClearFlag,"ax",%progbits
 2467              		.align	2
 2468              		.global	SPI_I2S_ClearFlag
 2469              		.thumb
 2470              		.thumb_func
 2472              	SPI_I2S_ClearFlag:
 2473              	.LFB145:
1189:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1190:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
1191:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief  Clears the SPIx CRC Error (CRCERR) flag.
1192:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPIx: To select the SPIx/I2Sx peripheral, where x can be: 1, 2, 3, 4, 5 or 6 
1193:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         in SPI mode or 2 or 3 in I2S mode or I2Sxext for I2S full duplex mode. 
1194:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPI_I2S_FLAG: specifies the SPI flag to clear. 
1195:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          This function clears only CRCERR flag.
1196:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_FLAG_CRCERR: CRC Error flag.  
1197:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *  
1198:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @note   OVR (OverRun error) flag is cleared by software sequence: a read 
1199:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          operation to SPI_DR register (SPI_I2S_ReceiveData()) followed by a read 
1200:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          operation to SPI_SR register (SPI_I2S_GetFlagStatus()).
1201:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @note   UDR (UnderRun error) flag is cleared by a read operation to 
1202:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          SPI_SR register (SPI_I2S_GetFlagStatus()).   
1203:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @note   MODF (Mode Fault) flag is cleared by software sequence: a read/write 
1204:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          operation to SPI_SR register (SPI_I2S_GetFlagStatus()) followed by a 
1205:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          write operation to SPI_CR1 register (SPI_Cmd() to enable the SPI).
1206:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *  
1207:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @retval None
1208:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
1209:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** void SPI_I2S_ClearFlag(SPI_TypeDef* SPIx, uint16_t SPI_I2S_FLAG)
1210:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** {
 2474              		.loc 1 1210 0
 2475              		.cfi_startproc
 2476              		@ args = 0, pretend = 0, frame = 0
 2477              		@ frame_needed = 0, uses_anonymous_args = 0
 2478              	.LVL212:
 2479 0000 38B5     		push	{r3, r4, r5, lr}
 2480              	.LCFI20:
 2481              		.cfi_def_cfa_offset 16
 2482              		.cfi_offset 3, -16
 2483              		.cfi_offset 4, -12
 2484              		.cfi_offset 5, -8
 2485              		.cfi_offset 14, -4
1211:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
1212:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH_EXT(SPIx));
 2486              		.loc 1 1212 0
 2487 0002 4FF44052 		mov	r2, #12288
 2488 0006 4FF46053 		mov	r3, #14336
 2489 000a C4F20102 		movt	r2, 16385
 2490 000e C4F20003 		movt	r3, 16384
 2491 0012 9042     		cmp	r0, r2
 2492 0014 18BF     		it	ne
 2493 0016 9842     		cmpne	r0, r3
1210:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
 2494              		.loc 1 1210 0
 2495 0018 0446     		mov	r4, r0
 2496 001a 0D46     		mov	r5, r1
 2497              		.loc 1 1212 0
 2498 001c 0BD0     		beq	.L435
 2499              		.loc 1 1212 0 is_stmt 0 discriminator 1
 2500 001e 4FF47052 		mov	r2, #15360
 2501 0022 4FF45053 		mov	r3, #13312
 2502 0026 C4F20002 		movt	r2, 16384
 2503 002a C4F20103 		movt	r3, 16385
 2504 002e 9042     		cmp	r0, r2
 2505 0030 18BF     		it	ne
 2506 0032 9842     		cmpne	r0, r3
 2507 0034 0DD1     		bne	.L452
 2508              	.LVL213:
 2509              	.L435:
1213:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_I2S_CLEAR_FLAG(SPI_I2S_FLAG));
 2510              		.loc 1 1213 0 is_stmt 1
 2511 0036 102D     		cmp	r5, #16
 2512 0038 07D0     		beq	.L436
 2513              		.loc 1 1213 0 is_stmt 0 discriminator 1
 2514 003a 40F20000 		movw	r0, #:lower16:.LC0
 2515 003e C0F20000 		movt	r0, #:upper16:.LC0
 2516 0042 40F2BD41 		movw	r1, #1213
 2517 0046 FFF7FEFF 		bl	assert_failed
 2518              	.LVL214:
 2519              	.L436:
1214:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     
1215:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Clear the selected SPI CRC Error (CRCERR) flag */
1216:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   SPIx->SR = (uint16_t)~SPI_I2S_FLAG;
 2520              		.loc 1 1216 0 is_stmt 1
 2521 004a ED43     		mvns	r5, r5
 2522 004c ADB2     		uxth	r5, r5
 2523 004e 2581     		strh	r5, [r4, #8]	@ movhi
 2524 0050 38BD     		pop	{r3, r4, r5, pc}
 2525              	.LVL215:
 2526              	.L452:
1212:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_I2S_CLEAR_FLAG(SPI_I2S_FLAG));
 2527              		.loc 1 1212 0 discriminator 1
 2528 0052 4FF4A042 		mov	r2, #20480
 2529 0056 4FF4A843 		mov	r3, #21504
 2530 005a C4F20102 		movt	r2, 16385
 2531 005e C4F20103 		movt	r3, 16385
 2532 0062 9042     		cmp	r0, r2
 2533 0064 18BF     		it	ne
 2534 0066 9842     		cmpne	r0, r3
 2535 0068 E5D0     		beq	.L435
 2536 006a 4FF45053 		mov	r3, #13312
 2537 006e C4F20003 		movt	r3, 16384
 2538 0072 9842     		cmp	r0, r3
 2539 0074 18BF     		it	ne
 2540 0076 B0F1402F 		cmpne	r0, #1073758208
 2541 007a DCD0     		beq	.L435
 2542 007c 40F20000 		movw	r0, #:lower16:.LC0
 2543              	.LVL216:
 2544 0080 C0F20000 		movt	r0, #:upper16:.LC0
 2545 0084 40F2BC41 		movw	r1, #1212
 2546              	.LVL217:
 2547 0088 FFF7FEFF 		bl	assert_failed
 2548              	.LVL218:
 2549 008c D3E7     		b	.L435
 2550              		.cfi_endproc
 2551              	.LFE145:
 2553 008e 00BF     		.section	.text.SPI_I2S_GetITStatus,"ax",%progbits
 2554              		.align	2
 2555              		.global	SPI_I2S_GetITStatus
 2556              		.thumb
 2557              		.thumb_func
 2559              	SPI_I2S_GetITStatus:
 2560              	.LFB146:
1217:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** }
1218:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1219:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
1220:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief  Checks whether the specified SPIx/I2Sx interrupt has occurred or not.
1221:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPIx: To select the SPIx/I2Sx peripheral, where x can be: 1, 2, 3, 4, 5 or 6 
1222:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         in SPI mode or 2 or 3 in I2S mode or I2Sxext for I2S full duplex mode.  
1223:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPI_I2S_IT: specifies the SPI interrupt source to check. 
1224:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          This parameter can be one of the following values:
1225:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_I2S_IT_TXE: Transmit buffer empty interrupt.
1226:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_I2S_IT_RXNE: Receive buffer not empty interrupt.
1227:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_I2S_IT_OVR: Overrun interrupt.
1228:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_IT_MODF: Mode Fault interrupt.
1229:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_IT_CRCERR: CRC Error interrupt.
1230:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg I2S_IT_UDR: Underrun interrupt.  
1231:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_I2S_IT_TIFRFE: Format Error interrupt.  
1232:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @retval The new state of SPI_I2S_IT (SET or RESET).
1233:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
1234:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** ITStatus SPI_I2S_GetITStatus(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT)
1235:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** {
 2561              		.loc 1 1235 0
 2562              		.cfi_startproc
 2563              		@ args = 0, pretend = 0, frame = 0
 2564              		@ frame_needed = 0, uses_anonymous_args = 0
 2565              	.LVL219:
 2566 0000 38B5     		push	{r3, r4, r5, lr}
 2567              	.LCFI21:
 2568              		.cfi_def_cfa_offset 16
 2569              		.cfi_offset 3, -16
 2570              		.cfi_offset 4, -12
 2571              		.cfi_offset 5, -8
 2572              		.cfi_offset 14, -4
1236:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   ITStatus bitstatus = RESET;
1237:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   uint16_t itpos = 0, itmask = 0, enablestatus = 0;
1238:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1239:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
1240:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH_EXT(SPIx));
 2573              		.loc 1 1240 0
 2574 0002 4FF44052 		mov	r2, #12288
 2575 0006 4FF46053 		mov	r3, #14336
 2576 000a C4F20102 		movt	r2, 16385
 2577 000e C4F20003 		movt	r3, 16384
 2578 0012 9042     		cmp	r0, r2
 2579 0014 18BF     		it	ne
 2580 0016 9842     		cmpne	r0, r3
1235:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   ITStatus bitstatus = RESET;
 2581              		.loc 1 1235 0
 2582 0018 0446     		mov	r4, r0
 2583 001a 0D46     		mov	r5, r1
 2584              		.loc 1 1240 0
 2585 001c 0BD0     		beq	.L454
 2586              		.loc 1 1240 0 is_stmt 0 discriminator 1
 2587 001e 4FF47052 		mov	r2, #15360
 2588 0022 4FF45053 		mov	r3, #13312
 2589 0026 C4F20002 		movt	r2, 16384
 2590 002a C4F20103 		movt	r3, 16385
 2591 002e 9042     		cmp	r0, r2
 2592 0030 18BF     		it	ne
 2593 0032 9842     		cmpne	r0, r3
 2594 0034 19D1     		bne	.L476
 2595              	.LVL220:
 2596              	.L454:
1241:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_I2S_GET_IT(SPI_I2S_IT));
 2597              		.loc 1 1241 0 is_stmt 1
 2598 0036 602D     		cmp	r5, #96
 2599 0038 18BF     		it	ne
 2600 003a 712D     		cmpne	r5, #113
 2601 003c 03D0     		beq	.L455
 2602              		.loc 1 1241 0 is_stmt 0 discriminator 1
 2603 003e A5F15303 		sub	r3, r5, #83
 2604 0042 032B     		cmp	r3, #3
 2605 0044 2FD8     		bhi	.L477
 2606              	.L455:
 2607              	.LVL221:
1242:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1243:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Get the SPI_I2S_IT index */
1244:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   itpos = 0x01 << (SPI_I2S_IT & 0x0F);
1245:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1246:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Get the SPI_I2S_IT IT mask */
1247:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   itmask = SPI_I2S_IT >> 4;
1248:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1249:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Set the IT mask */
1250:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   itmask = 0x01 << itmask;
1251:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1252:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Get the SPI_I2S_IT enable bit status */
1253:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   enablestatus = (SPIx->CR2 & itmask) ;
 2608              		.loc 1 1253 0 is_stmt 1
 2609 0046 A188     		ldrh	r1, [r4, #4]
1254:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1255:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the status of the specified SPI interrupt */
1256:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   if (((SPIx->SR & itpos) != (uint16_t)RESET) && enablestatus)
 2610              		.loc 1 1256 0
 2611 0048 2089     		ldrh	r0, [r4, #8]
1244:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 2612              		.loc 1 1244 0
 2613 004a 05F00F03 		and	r3, r5, #15
 2614 004e 0122     		movs	r2, #1
 2615              		.loc 1 1256 0
 2616 0050 80B2     		uxth	r0, r0
1244:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 2617              		.loc 1 1244 0
 2618 0052 02FA03F3 		lsl	r3, r2, r3
 2619              		.loc 1 1256 0
 2620 0056 1840     		ands	r0, r0, r3
1253:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 2621              		.loc 1 1253 0
 2622 0058 89B2     		uxth	r1, r1
 2623              	.LVL222:
 2624              		.loc 1 1256 0
 2625 005a 05D0     		beq	.L456
1250:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 2626              		.loc 1 1250 0 discriminator 1
 2627 005c 2D09     		lsrs	r5, r5, #4
 2628              	.LVL223:
 2629 005e AA40     		lsls	r2, r2, r5
 2630              		.loc 1 1256 0 discriminator 1
 2631 0060 1142     		tst	r1, r2
1257:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
1258:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* SPI_I2S_IT is set */
1259:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     bitstatus = SET;
 2632              		.loc 1 1259 0 discriminator 1
 2633 0062 0CBF     		ite	eq
 2634 0064 0020     		moveq	r0, #0
 2635 0066 0120     		movne	r0, #1
 2636              	.L456:
 2637              	.LVL224:
1260:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
1261:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   else
1262:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   {
1263:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     /* SPI_I2S_IT is reset */
1264:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****     bitstatus = RESET;
1265:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   }
1266:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Return the SPI_I2S_IT status */
1267:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   return bitstatus;
1268:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** }
 2638              		.loc 1 1268 0
 2639 0068 38BD     		pop	{r3, r4, r5, pc}
 2640              	.LVL225:
 2641              	.L476:
1240:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_I2S_GET_IT(SPI_I2S_IT));
 2642              		.loc 1 1240 0 discriminator 1
 2643 006a 4FF4A042 		mov	r2, #20480
 2644 006e 4FF4A843 		mov	r3, #21504
 2645 0072 C4F20102 		movt	r2, 16385
 2646 0076 C4F20103 		movt	r3, 16385
 2647 007a 9042     		cmp	r0, r2
 2648 007c 18BF     		it	ne
 2649 007e 9842     		cmpne	r0, r3
 2650 0080 D9D0     		beq	.L454
 2651 0082 4FF45053 		mov	r3, #13312
 2652 0086 C4F20003 		movt	r3, 16384
 2653 008a 9842     		cmp	r0, r3
 2654 008c 18BF     		it	ne
 2655 008e B0F1402F 		cmpne	r0, #1073758208
 2656 0092 D0D0     		beq	.L454
 2657 0094 40F20000 		movw	r0, #:lower16:.LC0
 2658              	.LVL226:
 2659 0098 C0F20000 		movt	r0, #:upper16:.LC0
 2660 009c 4FF49B61 		mov	r1, #1240
 2661              	.LVL227:
 2662 00a0 FFF7FEFF 		bl	assert_failed
 2663              	.LVL228:
 2664 00a4 C7E7     		b	.L454
 2665              	.L477:
1241:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
 2666              		.loc 1 1241 0 discriminator 1
 2667 00a6 582D     		cmp	r5, #88
 2668 00a8 CDD0     		beq	.L455
 2669 00aa 40F20000 		movw	r0, #:lower16:.LC0
 2670 00ae C0F20000 		movt	r0, #:upper16:.LC0
 2671 00b2 40F2D941 		movw	r1, #1241
 2672 00b6 FFF7FEFF 		bl	assert_failed
 2673              	.LVL229:
 2674 00ba C4E7     		b	.L455
 2675              		.cfi_endproc
 2676              	.LFE146:
 2678              		.section	.text.SPI_I2S_ClearITPendingBit,"ax",%progbits
 2679              		.align	2
 2680              		.global	SPI_I2S_ClearITPendingBit
 2681              		.thumb
 2682              		.thumb_func
 2684              	SPI_I2S_ClearITPendingBit:
 2685              	.LFB147:
1269:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1270:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** /**
1271:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @brief  Clears the SPIx CRC Error (CRCERR) interrupt pending bit.
1272:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPIx: To select the SPIx/I2Sx peripheral, where x can be: 1, 2, 3, 4, 5 or 6 
1273:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         in SPI mode or 2 or 3 in I2S mode or I2Sxext for I2S full duplex mode.  
1274:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @param  SPI_I2S_IT: specifies the SPI interrupt pending bit to clear.
1275:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *         This function clears only CRCERR interrupt pending bit.   
1276:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *            @arg SPI_IT_CRCERR: CRC Error interrupt.
1277:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *   
1278:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @note   OVR (OverRun Error) interrupt pending bit is cleared by software 
1279:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          sequence: a read operation to SPI_DR register (SPI_I2S_ReceiveData()) 
1280:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          followed by a read operation to SPI_SR register (SPI_I2S_GetITStatus()).
1281:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @note   UDR (UnderRun Error) interrupt pending bit is cleared by a read 
1282:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          operation to SPI_SR register (SPI_I2S_GetITStatus()).   
1283:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @note   MODF (Mode Fault) interrupt pending bit is cleared by software sequence:
1284:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          a read/write operation to SPI_SR register (SPI_I2S_GetITStatus()) 
1285:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          followed by a write operation to SPI_CR1 register (SPI_Cmd() to enable 
1286:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   *          the SPI).
1287:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   * @retval None
1288:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   */
1289:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** void SPI_I2S_ClearITPendingBit(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT)
1290:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** {
 2686              		.loc 1 1290 0
 2687              		.cfi_startproc
 2688              		@ args = 0, pretend = 0, frame = 0
 2689              		@ frame_needed = 0, uses_anonymous_args = 0
 2690              	.LVL230:
 2691 0000 38B5     		push	{r3, r4, r5, lr}
 2692              	.LCFI22:
 2693              		.cfi_def_cfa_offset 16
 2694              		.cfi_offset 3, -16
 2695              		.cfi_offset 4, -12
 2696              		.cfi_offset 5, -8
 2697              		.cfi_offset 14, -4
1291:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   uint16_t itpos = 0;
1292:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Check the parameters */
1293:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH_EXT(SPIx));
 2698              		.loc 1 1293 0
 2699 0002 4FF44052 		mov	r2, #12288
 2700 0006 4FF46053 		mov	r3, #14336
 2701 000a C4F20102 		movt	r2, 16385
 2702 000e C4F20003 		movt	r3, 16384
 2703 0012 9042     		cmp	r0, r2
 2704 0014 18BF     		it	ne
 2705 0016 9842     		cmpne	r0, r3
1290:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   uint16_t itpos = 0;
 2706              		.loc 1 1290 0
 2707 0018 0446     		mov	r4, r0
 2708 001a 0D46     		mov	r5, r1
 2709              		.loc 1 1293 0
 2710 001c 0BD0     		beq	.L479
 2711              		.loc 1 1293 0 is_stmt 0 discriminator 1
 2712 001e 4FF47052 		mov	r2, #15360
 2713 0022 4FF45053 		mov	r3, #13312
 2714 0026 C4F20002 		movt	r2, 16384
 2715 002a C4F20103 		movt	r3, 16385
 2716 002e 9042     		cmp	r0, r2
 2717 0030 18BF     		it	ne
 2718 0032 9842     		cmpne	r0, r3
 2719 0034 12D1     		bne	.L496
 2720              	.LVL231:
 2721              	.L479:
1294:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_I2S_CLEAR_IT(SPI_I2S_IT));
 2722              		.loc 1 1294 0 is_stmt 1
 2723 0036 542D     		cmp	r5, #84
 2724 0038 07D0     		beq	.L480
 2725              		.loc 1 1294 0 is_stmt 0 discriminator 1
 2726 003a 40F20000 		movw	r0, #:lower16:.LC0
 2727 003e C0F20000 		movt	r0, #:upper16:.LC0
 2728 0042 40F20E51 		movw	r1, #1294
 2729 0046 FFF7FEFF 		bl	assert_failed
 2730              	.LVL232:
 2731              	.L480:
1295:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1296:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Get the SPI_I2S IT index */
1297:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   itpos = 0x01 << (SPI_I2S_IT & 0x0F);
 2732              		.loc 1 1297 0 is_stmt 1
 2733 004a 05F00F05 		and	r5, r5, #15
 2734              	.LVL233:
 2735 004e 0123     		movs	r3, #1
 2736 0050 03FA05F5 		lsl	r5, r3, r5
1298:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c **** 
1299:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   /* Clear the selected SPI CRC Error (CRCERR) interrupt pending bit */
1300:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   SPIx->SR = (uint16_t)~itpos;
 2737              		.loc 1 1300 0
 2738 0054 ED43     		mvns	r5, r5
 2739 0056 ADB2     		uxth	r5, r5
 2740 0058 2581     		strh	r5, [r4, #8]	@ movhi
 2741 005a 38BD     		pop	{r3, r4, r5, pc}
 2742              	.LVL234:
 2743              	.L496:
1293:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_spi.c ****   assert_param(IS_SPI_I2S_CLEAR_IT(SPI_I2S_IT));
 2744              		.loc 1 1293 0 discriminator 1
 2745 005c 4FF4A042 		mov	r2, #20480
 2746 0060 4FF4A843 		mov	r3, #21504
 2747 0064 C4F20102 		movt	r2, 16385
 2748 0068 C4F20103 		movt	r3, 16385
 2749 006c 9042     		cmp	r0, r2
 2750 006e 18BF     		it	ne
 2751 0070 9842     		cmpne	r0, r3
 2752 0072 E0D0     		beq	.L479
 2753 0074 4FF45053 		mov	r3, #13312
 2754 0078 C4F20003 		movt	r3, 16384
 2755 007c 9842     		cmp	r0, r3
 2756 007e 18BF     		it	ne
 2757 0080 B0F1402F 		cmpne	r0, #1073758208
 2758 0084 D7D0     		beq	.L479
 2759 0086 40F20000 		movw	r0, #:lower16:.LC0
 2760              	.LVL235:
 2761 008a C0F20000 		movt	r0, #:upper16:.LC0
 2762 008e 40F20D51 		movw	r1, #1293
 2763              	.LVL236:
 2764 0092 FFF7FEFF 		bl	assert_failed
 2765              	.LVL237:
 2766 0096 CEE7     		b	.L479
 2767              		.cfi_endproc
 2768              	.LFE147:
 2770              		.section	.rodata.str1.4,"aMS",%progbits,1
 2771              		.align	2
 2772              	.LC0:
 2773 0000 4C696272 		.ascii	"Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_"
 2773      61726965 
 2773      732F5354 
 2773      4D333246 
 2773      3478785F 
 2774 0033 7370692E 		.ascii	"spi.c\000"
 2774      6300
 2775 0039 000000   		.text
 2776              	.Letext0:
 2777              		.file 2 "/opt/toolchains/eabi/arm-2014.05/arm-none-eabi/include/stdint.h"
 2778              		.file 3 "inc/stm32f4xx.h"
 2779              		.file 4 "Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_spi.h"
 2780              		.file 5 "Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rcc.h"
 2781              		.file 6 "inc/stm32f4xx_conf.h"
 2782              		.file 7 "Libraries/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_spi.c
     /tmp/ccrJxz1t.s:21     .text.SPI_I2S_DeInit:00000000 $t
     /tmp/ccrJxz1t.s:26     .text.SPI_I2S_DeInit:00000000 SPI_I2S_DeInit
     /tmp/ccrJxz1t.s:2772   .rodata.str1.4:00000000 .LC0
     /tmp/ccrJxz1t.s:208    .text.SPI_Init:00000000 $t
     /tmp/ccrJxz1t.s:213    .text.SPI_Init:00000000 SPI_Init
     /tmp/ccrJxz1t.s:454    .text.I2S_Init:00000000 $t
     /tmp/ccrJxz1t.s:459    .text.I2S_Init:00000000 I2S_Init
     /tmp/ccrJxz1t.s:760    .text.SPI_StructInit:00000000 $t
     /tmp/ccrJxz1t.s:765    .text.SPI_StructInit:00000000 SPI_StructInit
     /tmp/ccrJxz1t.s:799    .text.I2S_StructInit:00000000 $t
     /tmp/ccrJxz1t.s:804    .text.I2S_StructInit:00000000 I2S_StructInit
     /tmp/ccrJxz1t.s:827    .text.SPI_Cmd:00000000 $t
     /tmp/ccrJxz1t.s:832    .text.SPI_Cmd:00000000 SPI_Cmd
     /tmp/ccrJxz1t.s:920    .text.I2S_Cmd:00000000 $t
     /tmp/ccrJxz1t.s:925    .text.I2S_Cmd:00000000 I2S_Cmd
     /tmp/ccrJxz1t.s:1004   .text.SPI_DataSizeConfig:00000000 $t
     /tmp/ccrJxz1t.s:1009   .text.SPI_DataSizeConfig:00000000 SPI_DataSizeConfig
     /tmp/ccrJxz1t.s:1093   .text.SPI_BiDirectionalLineConfig:00000000 $t
     /tmp/ccrJxz1t.s:1098   .text.SPI_BiDirectionalLineConfig:00000000 SPI_BiDirectionalLineConfig
     /tmp/ccrJxz1t.s:1191   .text.SPI_NSSInternalSoftwareConfig:00000000 $t
     /tmp/ccrJxz1t.s:1196   .text.SPI_NSSInternalSoftwareConfig:00000000 SPI_NSSInternalSoftwareConfig
     /tmp/ccrJxz1t.s:1290   .text.SPI_SSOutputCmd:00000000 $t
     /tmp/ccrJxz1t.s:1295   .text.SPI_SSOutputCmd:00000000 SPI_SSOutputCmd
     /tmp/ccrJxz1t.s:1383   .text.SPI_TIModeCmd:00000000 $t
     /tmp/ccrJxz1t.s:1388   .text.SPI_TIModeCmd:00000000 SPI_TIModeCmd
     /tmp/ccrJxz1t.s:1476   .text.I2S_FullDuplexConfig:00000000 $t
     /tmp/ccrJxz1t.s:1481   .text.I2S_FullDuplexConfig:00000000 I2S_FullDuplexConfig
     /tmp/ccrJxz1t.s:1641   .text.SPI_I2S_ReceiveData:00000000 $t
     /tmp/ccrJxz1t.s:1646   .text.SPI_I2S_ReceiveData:00000000 SPI_I2S_ReceiveData
     /tmp/ccrJxz1t.s:1715   .text.SPI_I2S_SendData:00000000 $t
     /tmp/ccrJxz1t.s:1720   .text.SPI_I2S_SendData:00000000 SPI_I2S_SendData
     /tmp/ccrJxz1t.s:1790   .text.SPI_CalculateCRC:00000000 $t
     /tmp/ccrJxz1t.s:1795   .text.SPI_CalculateCRC:00000000 SPI_CalculateCRC
     /tmp/ccrJxz1t.s:1883   .text.SPI_TransmitCRC:00000000 $t
     /tmp/ccrJxz1t.s:1888   .text.SPI_TransmitCRC:00000000 SPI_TransmitCRC
     /tmp/ccrJxz1t.s:1952   .text.SPI_GetCRC:00000000 $t
     /tmp/ccrJxz1t.s:1957   .text.SPI_GetCRC:00000000 SPI_GetCRC
     /tmp/ccrJxz1t.s:2042   .text.SPI_GetCRCPolynomial:00000000 $t
     /tmp/ccrJxz1t.s:2047   .text.SPI_GetCRCPolynomial:00000000 SPI_GetCRCPolynomial
     /tmp/ccrJxz1t.s:2114   .text.SPI_I2S_DMACmd:00000000 $t
     /tmp/ccrJxz1t.s:2119   .text.SPI_I2S_DMACmd:00000000 SPI_I2S_DMACmd
     /tmp/ccrJxz1t.s:2235   .text.SPI_I2S_ITConfig:00000000 $t
     /tmp/ccrJxz1t.s:2240   .text.SPI_I2S_ITConfig:00000000 SPI_I2S_ITConfig
     /tmp/ccrJxz1t.s:2361   .text.SPI_I2S_GetFlagStatus:00000000 $t
     /tmp/ccrJxz1t.s:2366   .text.SPI_I2S_GetFlagStatus:00000000 SPI_I2S_GetFlagStatus
     /tmp/ccrJxz1t.s:2467   .text.SPI_I2S_ClearFlag:00000000 $t
     /tmp/ccrJxz1t.s:2472   .text.SPI_I2S_ClearFlag:00000000 SPI_I2S_ClearFlag
     /tmp/ccrJxz1t.s:2554   .text.SPI_I2S_GetITStatus:00000000 $t
     /tmp/ccrJxz1t.s:2559   .text.SPI_I2S_GetITStatus:00000000 SPI_I2S_GetITStatus
     /tmp/ccrJxz1t.s:2679   .text.SPI_I2S_ClearITPendingBit:00000000 $t
     /tmp/ccrJxz1t.s:2684   .text.SPI_I2S_ClearITPendingBit:00000000 SPI_I2S_ClearITPendingBit
     /tmp/ccrJxz1t.s:2771   .rodata.str1.4:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd
assert_failed
RCC_APB2PeriphResetCmd
