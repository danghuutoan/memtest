   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 2
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"stm32f4xx_i2c.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.I2C_DeInit,"ax",%progbits
  21              		.align	2
  22              		.global	I2C_DeInit
  23              		.thumb
  24              		.thumb_func
  26              	I2C_DeInit:
  27              	.LFB123:
  28              		.file 1 "Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c"
   1:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
   2:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   ******************************************************************************
   3:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @file    stm32f4xx_i2c.c
   4:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @author  MCD Application Team
   5:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @version V1.5.0
   6:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @date    06-March-2015
   7:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief   This file provides firmware functions to manage the following 
   8:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          functionalities of the Inter-integrated circuit (I2C)
   9:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *           + Initialization and Configuration
  10:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *           + Data transfers
  11:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *           + PEC management
  12:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *           + DMA transfers management
  13:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *           + Interrupts, events and flags management 
  14:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *           
  15:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     @verbatim    
  16:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================
  17:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                     ##### How to use this driver #####
  18:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================
  19:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     [..]
  20:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       (#) Enable peripheral clock using RCC_APB1PeriphClockCmd(RCC_APB1Periph_I2Cx, ENABLE)
  21:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****           function for I2C1, I2C2 or I2C3.
  22:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
  23:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       (#) Enable SDA, SCL  and SMBA (when used) GPIO clocks using 
  24:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****           RCC_AHBPeriphClockCmd() function. 
  25:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
  26:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       (#) Peripherals alternate function: 
  27:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         (++) Connect the pin to the desired peripherals' Alternate 
  28:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              Function (AF) using GPIO_PinAFConfig() function
  29:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         (++) Configure the desired pin in alternate function by:
  30:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF
  31:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         (++) Select the type, pull-up/pull-down and output speed via 
  32:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              GPIO_PuPd, GPIO_OType and GPIO_Speed members
  33:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         (++) Call GPIO_Init() function
  34:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              Recommended configuration is Push-Pull, Pull-up, Open-Drain.
  35:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              Add an external pull up if necessary (typically 4.7 KOhm).      
  36:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****           
  37:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       (#) Program the Mode, duty cycle , Own address, Ack, Speed and Acknowledged
  38:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****           Address using the I2C_Init() function.
  39:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
  40:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       (#) Optionally you can enable/configure the following parameters without
  41:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****           re-initialization (i.e there is no need to call again I2C_Init() function):
  42:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         (++) Enable the acknowledge feature using I2C_AcknowledgeConfig() function
  43:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         (++) Enable the dual addressing mode using I2C_DualAddressCmd() function
  44:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         (++) Enable the general call using the I2C_GeneralCallCmd() function
  45:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         (++) Enable the clock stretching using I2C_StretchClockCmd() function
  46:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         (++) Enable the fast mode duty cycle using the I2C_FastModeDutyCycleConfig()
  47:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              function.
  48:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         (++) Configure the NACK position for Master Receiver mode in case of 
  49:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              2 bytes reception using the function I2C_NACKPositionConfig().  
  50:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         (++) Enable the PEC Calculation using I2C_CalculatePEC() function
  51:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         (++) For SMBus Mode: 
  52:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****           (+++) Enable the Address Resolution Protocol (ARP) using I2C_ARPCmd() function
  53:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****           (+++) Configure the SMBusAlert pin using I2C_SMBusAlertConfig() function
  54:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
  55:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       (#) Enable the NVIC and the corresponding interrupt using the function 
  56:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****           I2C_ITConfig() if you need to use interrupt mode. 
  57:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
  58:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       (#) When using the DMA mode 
  59:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         (++) Configure the DMA using DMA_Init() function
  60:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         (++) Active the needed channel Request using I2C_DMACmd() or
  61:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              I2C_DMALastTransferCmd() function.
  62:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         -@@- When using DMA mode, I2C interrupts may be used at the same time to
  63:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              control the communication flow (Start/Stop/Ack... events and errors).
  64:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****    
  65:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       (#) Enable the I2C using the I2C_Cmd() function.
  66:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****    
  67:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       (#) Enable the DMA using the DMA_Cmd() function when using DMA mode in the 
  68:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****           transfers. 
  69:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
  70:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     @endverbatim  
  71:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   ******************************************************************************
  72:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @attention
  73:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *
  74:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * <h2><center>&copy; COPYRIGHT 2015 STMicroelectronics</center></h2>
  75:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *
  76:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  77:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * You may not use this file except in compliance with the License.
  78:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * You may obtain a copy of the License at:
  79:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *
  80:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  81:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *
  82:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * Unless required by applicable law or agreed to in writing, software 
  83:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  84:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  85:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * See the License for the specific language governing permissions and
  86:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * limitations under the License.
  87:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *
  88:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   ******************************************************************************  
  89:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */ 
  90:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
  91:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /* Includes ------------------------------------------------------------------*/
  92:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** #include "stm32f4xx_i2c.h"
  93:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** #include "stm32f4xx_rcc.h"
  94:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
  95:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  96:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @{
  97:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
  98:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
  99:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /** @defgroup I2C 
 100:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief I2C driver modules
 101:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @{
 102:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */ 
 103:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 104:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /* Private typedef -----------------------------------------------------------*/
 105:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /* Private define ------------------------------------------------------------*/
 106:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 107:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** #define CR1_CLEAR_MASK    ((uint16_t)0xFBF5)      /*<! I2C registers Masks */
 108:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** #define FLAG_MASK         ((uint32_t)0x00FFFFFF)  /*<! I2C FLAG mask */
 109:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** #define ITEN_MASK         ((uint32_t)0x07000000)  /*<! I2C Interrupt Enable mask */
 110:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 111:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /* Private macro -------------------------------------------------------------*/
 112:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /* Private variables ---------------------------------------------------------*/
 113:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /* Private function prototypes -----------------------------------------------*/
 114:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /* Private functions ---------------------------------------------------------*/
 115:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 116:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /** @defgroup I2C_Private_Functions
 117:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @{
 118:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 119:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 120:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /** @defgroup I2C_Group1 Initialization and Configuration functions
 121:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  *  @brief   Initialization and Configuration functions 
 122:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  *
 123:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** @verbatim   
 124:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================
 125:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****             ##### Initialization and Configuration functions #####
 126:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================  
 127:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 128:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** @endverbatim
 129:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @{
 130:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 131:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 132:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 133:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Deinitialize the I2Cx peripheral registers to their default reset values.
 134:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 135:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 136:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 137:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_DeInit(I2C_TypeDef* I2Cx)
 138:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
  29              		.loc 1 138 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              	.LVL0:
  34 0000 38B5     		push	{r3, r4, r5, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 16
  37              		.cfi_offset 3, -16
  38              		.cfi_offset 4, -12
  39              		.cfi_offset 5, -8
  40              		.cfi_offset 14, -4
 139:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 140:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
  41              		.loc 1 140 0
  42 0002 4FF4B042 		mov	r2, #22528
  43 0006 4FF4A843 		mov	r3, #21504
  44 000a C4F20002 		movt	r2, 16384
  45 000e C4F20003 		movt	r3, 16384
  46 0012 9042     		cmp	r0, r2
  47 0014 18BF     		it	ne
  48 0016 9842     		cmpne	r0, r3
 138:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
  49              		.loc 1 138 0
  50 0018 0446     		mov	r4, r0
  51              		.loc 1 140 0
  52 001a 0CBF     		ite	eq
  53 001c 0025     		moveq	r5, #0
  54 001e 0125     		movne	r5, #1
  55 0020 13D0     		beq	.L2
  56              		.loc 1 140 0 is_stmt 0 discriminator 1
  57 0022 4FF4B843 		mov	r3, #23552
  58 0026 C4F20003 		movt	r3, 16384
  59 002a 9842     		cmp	r0, r3
  60 002c 06D0     		beq	.L5
  61 002e 40F20000 		movw	r0, #:lower16:.LC0
  62              	.LVL1:
  63 0032 C0F20000 		movt	r0, #:upper16:.LC0
  64 0036 8C21     		movs	r1, #140
  65 0038 FFF7FEFF 		bl	assert_failed
  66              	.LVL2:
  67              	.L5:
 141:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 142:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (I2Cx == I2C1)
 143:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 144:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable I2C1 reset state */
 145:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C1, ENABLE);
 146:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Release I2C1 from reset state */
 147:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C1, DISABLE);    
 148:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 149:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else if (I2Cx == I2C2)
 150:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 151:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable I2C2 reset state */
 152:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C2, ENABLE);
 153:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Release I2C2 from reset state */
 154:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C2, DISABLE);      
 155:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 156:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else 
 157:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 158:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     if (I2Cx == I2C3)
  68              		.loc 1 158 0 is_stmt 1
  69 003c 4FF4B843 		mov	r3, #23552
  70 0040 C4F20003 		movt	r3, 16384
  71 0044 9C42     		cmp	r4, r3
  72 0046 10D0     		beq	.L8
  73 0048 38BD     		pop	{r3, r4, r5, pc}
  74              	.LVL3:
  75              	.L2:
 142:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
  76              		.loc 1 142 0
  77 004a 9842     		cmp	r0, r3
  78 004c 19D0     		beq	.L9
 149:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
  79              		.loc 1 149 0
  80 004e 9042     		cmp	r0, r2
  81 0050 F4D1     		bne	.L5
 152:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Release I2C2 from reset state */
  82              		.loc 1 152 0
  83 0052 4FF48000 		mov	r0, #4194304
  84              	.LVL4:
  85 0056 0121     		movs	r1, #1
  86 0058 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  87              	.LVL5:
 154:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
  88              		.loc 1 154 0
  89 005c 2946     		mov	r1, r5
  90 005e 4FF48000 		mov	r0, #4194304
 159:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     {
 160:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       /* Enable I2C3 reset state */
 161:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C3, ENABLE);
 162:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       /* Release I2C3 from reset state */
 163:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C3, DISABLE);     
 164:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     }
 165:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 166:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
  91              		.loc 1 166 0
  92 0062 BDE83840 		pop	{r3, r4, r5, lr}
  93              	.LVL6:
 154:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
  94              		.loc 1 154 0
  95 0066 FFF7FEBF 		b	RCC_APB1PeriphResetCmd
  96              	.LVL7:
  97              	.L8:
 161:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       /* Release I2C3 from reset state */
  98              		.loc 1 161 0
  99 006a 4FF40000 		mov	r0, #8388608
 100 006e 0121     		movs	r1, #1
 101 0070 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 102              	.LVL8:
 163:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     }
 103              		.loc 1 163 0
 104 0074 4FF40000 		mov	r0, #8388608
 105 0078 0021     		movs	r1, #0
 106              		.loc 1 166 0
 107 007a BDE83840 		pop	{r3, r4, r5, lr}
 108              	.LVL9:
 163:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     }
 109              		.loc 1 163 0
 110 007e FFF7FEBF 		b	RCC_APB1PeriphResetCmd
 111              	.LVL10:
 112              	.L9:
 145:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Release I2C1 from reset state */
 113              		.loc 1 145 0
 114 0082 4FF40010 		mov	r0, #2097152
 115              	.LVL11:
 116 0086 0121     		movs	r1, #1
 117 0088 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 118              	.LVL12:
 147:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 119              		.loc 1 147 0
 120 008c 2946     		mov	r1, r5
 121 008e 4FF40010 		mov	r0, #2097152
 122              		.loc 1 166 0
 123 0092 BDE83840 		pop	{r3, r4, r5, lr}
 124              	.LVL13:
 147:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 125              		.loc 1 147 0
 126 0096 FFF7FEBF 		b	RCC_APB1PeriphResetCmd
 127              	.LVL14:
 128              		.cfi_endproc
 129              	.LFE123:
 131 009a 00BF     		.section	.text.I2C_Init,"ax",%progbits
 132              		.align	2
 133              		.global	I2C_Init
 134              		.thumb
 135              		.thumb_func
 137              	I2C_Init:
 138              	.LFB124:
 167:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 168:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 169:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Initializes the I2Cx peripheral according to the specified 
 170:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         parameters in the I2C_InitStruct.
 171:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *           
 172:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   To use the I2C at 400 KHz (in fast mode), the PCLK1 frequency 
 173:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         (I2C peripheral input clock) must be a multiple of 10 MHz.  
 174:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *           
 175:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 176:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_InitStruct: pointer to a I2C_InitTypeDef structure that contains 
 177:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         the configuration information for the specified I2C peripheral.
 178:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 179:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 180:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_Init(I2C_TypeDef* I2Cx, I2C_InitTypeDef* I2C_InitStruct)
 181:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 139              		.loc 1 181 0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 16
 142              		@ frame_needed = 0, uses_anonymous_args = 0
 143              	.LVL15:
 144 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 145              	.LCFI1:
 146              		.cfi_def_cfa_offset 20
 147              		.cfi_offset 4, -20
 148              		.cfi_offset 5, -16
 149              		.cfi_offset 6, -12
 150              		.cfi_offset 7, -8
 151              		.cfi_offset 14, -4
 182:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint16_t tmpreg = 0, freqrange = 0;
 183:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint16_t result = 0x04;
 184:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint32_t pclk1 = 8000000;
 185:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   RCC_ClocksTypeDef  rcc_clocks;
 186:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 187:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 152              		.loc 1 187 0
 153 0002 4FF4A842 		mov	r2, #21504
 154 0006 4FF4B043 		mov	r3, #22528
 155 000a C4F20002 		movt	r2, 16384
 156 000e C4F20003 		movt	r3, 16384
 157 0012 9042     		cmp	r0, r2
 158 0014 18BF     		it	ne
 159 0016 9842     		cmpne	r0, r3
 181:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint16_t tmpreg = 0, freqrange = 0;
 160              		.loc 1 181 0
 161 0018 85B0     		sub	sp, sp, #20
 162              	.LCFI2:
 163              		.cfi_def_cfa_offset 40
 181:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint16_t tmpreg = 0, freqrange = 0;
 164              		.loc 1 181 0
 165 001a 0446     		mov	r4, r0
 166 001c 0D46     		mov	r5, r1
 167              		.loc 1 187 0
 168 001e 0CD0     		beq	.L11
 169              		.loc 1 187 0 is_stmt 0 discriminator 1
 170 0020 4FF4B843 		mov	r3, #23552
 171 0024 C4F20003 		movt	r3, 16384
 172 0028 9842     		cmp	r0, r3
 173 002a 06D0     		beq	.L11
 174 002c 40F20000 		movw	r0, #:lower16:.LC0
 175              	.LVL16:
 176 0030 C0F20000 		movt	r0, #:upper16:.LC0
 177 0034 BB21     		movs	r1, #187
 178              	.LVL17:
 179 0036 FFF7FEFF 		bl	assert_failed
 180              	.LVL18:
 181              	.L11:
 188:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_CLOCK_SPEED(I2C_InitStruct->I2C_ClockSpeed));
 182              		.loc 1 188 0 is_stmt 1
 183 003a 2A68     		ldr	r2, [r5]
 184 003c 41F67F23 		movw	r3, #6783
 185 0040 013A     		subs	r2, r2, #1
 186 0042 C0F20603 		movt	r3, 6
 187 0046 9A42     		cmp	r2, r3
 188 0048 00F29A80 		bhi	.L43
 189              	.L12:
 189:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_MODE(I2C_InitStruct->I2C_Mode));
 190              		.loc 1 189 0
 191 004c AA88     		ldrh	r2, [r5, #4]
 192 004e 4FF6FD73 		movw	r3, #65533
 193 0052 1340     		ands	r3, r3, r2
 194 0054 43B1     		cbz	r3, .L13
 195              		.loc 1 189 0 is_stmt 0 discriminator 1
 196 0056 0A2A     		cmp	r2, #10
 197 0058 06D0     		beq	.L13
 198 005a 40F20000 		movw	r0, #:lower16:.LC0
 199 005e C0F20000 		movt	r0, #:upper16:.LC0
 200 0062 BD21     		movs	r1, #189
 201 0064 FFF7FEFF 		bl	assert_failed
 202              	.LVL19:
 203              	.L13:
 190:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_DUTY_CYCLE(I2C_InitStruct->I2C_DutyCycle));
 204              		.loc 1 190 0 is_stmt 1
 205 0068 EB88     		ldrh	r3, [r5, #6]
 206 006a 4BF6FF72 		movw	r2, #49151
 207 006e 9342     		cmp	r3, r2
 208 0070 18BF     		it	ne
 209 0072 B3F5804F 		cmpne	r3, #16384
 210 0076 40F0A380 		bne	.L44
 211              	.L14:
 191:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_OWN_ADDRESS1(I2C_InitStruct->I2C_OwnAddress1));
 212              		.loc 1 191 0
 213 007a 2B89     		ldrh	r3, [r5, #8]
 214 007c B3F5806F 		cmp	r3, #1024
 215 0080 80F09680 		bcs	.L45
 216              	.L15:
 192:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ACK_STATE(I2C_InitStruct->I2C_Ack));
 217              		.loc 1 192 0
 218 0084 6B89     		ldrh	r3, [r5, #10]
 219 0086 23F48063 		bic	r3, r3, #1024
 220 008a 1B04     		lsls	r3, r3, #16
 221 008c 1B0C     		lsrs	r3, r3, #16
 222 008e 002B     		cmp	r3, #0
 223 0090 40F08680 		bne	.L46
 224              	.L16:
 193:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ACKNOWLEDGE_ADDRESS(I2C_InitStruct->I2C_AcknowledgedAddress));
 225              		.loc 1 193 0
 226 0094 AB89     		ldrh	r3, [r5, #12]
 227 0096 C3F30E03 		ubfx	r3, r3, #0, #15
 228 009a B3F5804F 		cmp	r3, #16384
 229 009e 77D1     		bne	.L47
 230              	.L17:
 194:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 195:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /*---------------------------- I2Cx CR2 Configuration ------------------------*/
 196:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get the I2Cx CR2 value */
 197:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg = I2Cx->CR2;
 198:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Clear frequency FREQ[5:0] bits */
 199:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg &= (uint16_t)~((uint16_t)I2C_CR2_FREQ);
 200:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get pclk1 frequency value */
 201:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   RCC_GetClocksFreq(&rcc_clocks);
 231              		.loc 1 201 0
 232 00a0 6846     		mov	r0, sp
 197:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Clear frequency FREQ[5:0] bits */
 233              		.loc 1 197 0
 234 00a2 A688     		ldrh	r6, [r4, #4]
 235              	.LVL20:
 236              		.loc 1 201 0
 237 00a4 FFF7FEFF 		bl	RCC_GetClocksFreq
 238              	.LVL21:
 202:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   pclk1 = rcc_clocks.PCLK1_Frequency;
 203:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Set frequency bits depending on pclk1 value */
 204:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   freqrange = (uint16_t)(pclk1 / 1000000);
 239              		.loc 1 204 0
 240 00a8 4DF68363 		movw	r3, #56963
 202:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   pclk1 = rcc_clocks.PCLK1_Frequency;
 241              		.loc 1 202 0
 242 00ac 0299     		ldr	r1, [sp, #8]
 205:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg |= freqrange;
 206:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Write to I2Cx CR2 */
 207:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->CR2 = tmpreg;
 208:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 209:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /*---------------------------- I2Cx CCR Configuration ------------------------*/
 210:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Disable the selected I2C peripheral to configure TRISE */
 211:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_PE);
 212:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Reset tmpreg value */
 213:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Clear F/S, DUTY and CCR[11:0] bits */
 214:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg = 0;
 215:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 216:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Configure speed in standard mode */
 217:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (I2C_InitStruct->I2C_ClockSpeed <= 100000)
 243              		.loc 1 217 0
 244 00ae 2A68     		ldr	r2, [r5]
 204:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg |= freqrange;
 245              		.loc 1 204 0
 246 00b0 C4F21B33 		movt	r3, 17179
 247 00b4 A3FB0103 		umull	r0, r3, r3, r1
 199:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get pclk1 frequency value */
 248              		.loc 1 199 0
 249 00b8 26F03F06 		bic	r6, r6, #63
 250              	.LVL22:
 204:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg |= freqrange;
 251              		.loc 1 204 0
 252 00bc 9F0C     		lsrs	r7, r3, #18
 199:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get pclk1 frequency value */
 253              		.loc 1 199 0
 254 00be 3604     		lsls	r6, r6, #16
 255 00c0 360C     		lsrs	r6, r6, #16
 256              	.LVL23:
 204:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg |= freqrange;
 257              		.loc 1 204 0
 258 00c2 1FFA87FC 		uxth	ip, r7
 259              	.LVL24:
 205:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg |= freqrange;
 260              		.loc 1 205 0
 261 00c6 4CEA0606 		orr	r6, ip, r6
 262              	.LVL25:
 207:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 263              		.loc 1 207 0
 264 00ca A680     		strh	r6, [r4, #4]	@ movhi
 211:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Reset tmpreg value */
 265              		.loc 1 211 0
 266 00cc 2388     		ldrh	r3, [r4]
 267              		.loc 1 217 0
 268 00ce 48F2A060 		movw	r0, #34464
 211:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Reset tmpreg value */
 269              		.loc 1 211 0
 270 00d2 23F00103 		bic	r3, r3, #1
 271 00d6 1B04     		lsls	r3, r3, #16
 272              		.loc 1 217 0
 273 00d8 C0F20100 		movt	r0, 1
 211:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Reset tmpreg value */
 274              		.loc 1 211 0
 275 00dc 1B0C     		lsrs	r3, r3, #16
 276              		.loc 1 217 0
 277 00de 8242     		cmp	r2, r0
 211:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Reset tmpreg value */
 278              		.loc 1 211 0
 279 00e0 2380     		strh	r3, [r4]	@ movhi
 280              	.LVL26:
 281              		.loc 1 217 0
 282 00e2 24D8     		bhi	.L18
 218:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 219:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Standard mode speed calculate */
 220:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     result = (uint16_t)(pclk1 / (I2C_InitStruct->I2C_ClockSpeed << 1));
 283              		.loc 1 220 0
 284 00e4 5300     		lsls	r3, r2, #1
 285 00e6 B1FBF3F3 		udiv	r3, r1, r3
 286 00ea 9BB2     		uxth	r3, r3
 287              	.LVL27:
 221:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Test if CCR value is under 0x4*/
 222:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     if (result < 0x04)
 223:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     {
 224:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       /* Set minimum allowed value */
 225:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       result = 0x04;  
 226:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     }
 227:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Set speed value for standard mode */
 228:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     tmpreg |= result;	  
 229:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Set Maximum Rise Time for standard mode */
 230:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->TRISE = freqrange + 1; 
 288              		.loc 1 230 0
 289 00ec 0CF1010C 		add	ip, ip, #1
 225:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     }
 290              		.loc 1 225 0
 291 00f0 032B     		cmp	r3, #3
 292 00f2 98BF     		it	ls
 293 00f4 0423     		movls	r3, #4
 294              	.LVL28:
 295              		.loc 1 230 0
 296 00f6 A4F820C0 		strh	ip, [r4, #32]	@ movhi
 297              	.LVL29:
 298              	.L20:
 231:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 232:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Configure speed in fast mode */
 233:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* To use the I2C at 400 KHz (in fast mode), the PCLK1 frequency (I2C peripheral
 234:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****      input clock) must be a multiple of 10 MHz */
 235:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else /*(I2C_InitStruct->I2C_ClockSpeed <= 400000)*/
 236:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 237:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     if (I2C_InitStruct->I2C_DutyCycle == I2C_DutyCycle_2)
 238:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     {
 239:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       /* Fast mode speed calculate: Tlow/Thigh = 2 */
 240:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       result = (uint16_t)(pclk1 / (I2C_InitStruct->I2C_ClockSpeed * 3));
 241:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     }
 242:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     else /*I2C_InitStruct->I2C_DutyCycle == I2C_DutyCycle_16_9*/
 243:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     {
 244:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       /* Fast mode speed calculate: Tlow/Thigh = 16/9 */
 245:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       result = (uint16_t)(pclk1 / (I2C_InitStruct->I2C_ClockSpeed * 25));
 246:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       /* Set DUTY bit */
 247:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       result |= I2C_DutyCycle_16_9;
 248:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     }
 249:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 250:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Test if CCR value is under 0x1*/
 251:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     if ((result & I2C_CCR_CCR) == 0)
 252:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     {
 253:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       /* Set minimum allowed value */
 254:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       result |= (uint16_t)0x0001;  
 255:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     }
 256:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Set speed value and set F/S bit for fast mode */
 257:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     tmpreg |= (uint16_t)(result | I2C_CCR_FS);
 258:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Set Maximum Rise Time for fast mode */
 259:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->TRISE = (uint16_t)(((freqrange * (uint16_t)300) / (uint16_t)1000) + (uint16_t)1);  
 260:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 261:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 262:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Write to I2Cx CCR */
 263:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->CCR = tmpreg;
 299              		.loc 1 263 0
 300 00fa A383     		strh	r3, [r4, #28]	@ movhi
 264:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Enable the selected I2C peripheral */
 265:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->CR1 |= I2C_CR1_PE;
 301              		.loc 1 265 0
 302 00fc 2388     		ldrh	r3, [r4]
 303              	.LVL30:
 266:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 267:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /*---------------------------- I2Cx CR1 Configuration ------------------------*/
 268:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get the I2Cx CR1 value */
 269:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg = I2Cx->CR1;
 270:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Clear ACK, SMBTYPE and  SMBUS bits */
 271:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg &= CR1_CLEAR_MASK;
 272:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Configure I2Cx: mode and acknowledgement */
 273:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Set SMBTYPE and SMBUS bits according to I2C_Mode value */
 274:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Set ACK bit according to I2C_Ack value */
 275:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg |= (uint16_t)((uint32_t)I2C_InitStruct->I2C_Mode | I2C_InitStruct->I2C_Ack);
 304              		.loc 1 275 0
 305 00fe 6E89     		ldrh	r6, [r5, #10]
 306 0100 A888     		ldrh	r0, [r5, #4]
 276:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Write to I2Cx CR1 */
 277:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->CR1 = tmpreg;
 278:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 279:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /*---------------------------- I2Cx OAR1 Configuration -----------------------*/
 280:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Set I2Cx Own Address1 and acknowledged address */
 281:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->OAR1 = (I2C_InitStruct->I2C_AcknowledgedAddress | I2C_InitStruct->I2C_OwnAddress1);
 307              		.loc 1 281 0
 308 0102 2989     		ldrh	r1, [r5, #8]
 309 0104 AA89     		ldrh	r2, [r5, #12]
 265:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 310              		.loc 1 265 0
 311 0106 9BB2     		uxth	r3, r3
 312 0108 43F00103 		orr	r3, r3, #1
 313 010c 2380     		strh	r3, [r4]	@ movhi
 269:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Clear ACK, SMBTYPE and  SMBUS bits */
 314              		.loc 1 269 0
 315 010e 2388     		ldrh	r3, [r4]
 316              	.LVL31:
 271:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Configure I2Cx: mode and acknowledgement */
 317              		.loc 1 271 0
 318 0110 23F48163 		bic	r3, r3, #1032
 319              	.LVL32:
 320 0114 23F00203 		bic	r3, r3, #2
 321 0118 1B04     		lsls	r3, r3, #16
 275:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Write to I2Cx CR1 */
 322              		.loc 1 275 0
 323 011a 3043     		orrs	r0, r0, r6
 271:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Configure I2Cx: mode and acknowledgement */
 324              		.loc 1 271 0
 325 011c 1B0C     		lsrs	r3, r3, #16
 326              	.LVL33:
 275:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Write to I2Cx CR1 */
 327              		.loc 1 275 0
 328 011e 0343     		orrs	r3, r3, r0
 329              	.LVL34:
 330              		.loc 1 281 0
 331 0120 0A43     		orrs	r2, r2, r1
 275:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Write to I2Cx CR1 */
 332              		.loc 1 275 0
 333 0122 9BB2     		uxth	r3, r3
 334              	.LVL35:
 335              		.loc 1 281 0
 336 0124 92B2     		uxth	r2, r2
 277:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 337              		.loc 1 277 0
 338 0126 2380     		strh	r3, [r4]	@ movhi
 339              		.loc 1 281 0
 340 0128 2281     		strh	r2, [r4, #8]	@ movhi
 282:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 341              		.loc 1 282 0
 342 012a 05B0     		add	sp, sp, #20
 343              		@ sp needed
 344 012c F0BD     		pop	{r4, r5, r6, r7, pc}
 345              	.LVL36:
 346              	.L18:
 237:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     {
 347              		.loc 1 237 0
 348 012e E888     		ldrh	r0, [r5, #6]
 349 0130 4BF6FF73 		movw	r3, #49151
 350 0134 9842     		cmp	r0, r3
 245:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       /* Set DUTY bit */
 351              		.loc 1 245 0
 352 0136 1DBF     		ittte	ne
 353 0138 02EB8202 		addne	r2, r2, r2, lsl #2
 354 013c 02EB8202 		addne	r2, r2, r2, lsl #2
 355 0140 B1FBF2F3 		udivne	r3, r1, r2
 240:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     }
 356              		.loc 1 240 0
 357 0144 02EB4202 		addeq	r2, r2, r2, lsl #1
 358 0148 0BBF     		itete	eq
 359 014a B1FBF2F3 		udiveq	r3, r1, r2
 245:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       /* Set DUTY bit */
 360              		.loc 1 245 0
 361 014e 9BB2     		uxthne	r3, r3
 240:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     }
 362              		.loc 1 240 0
 363 0150 9BB2     		uxtheq	r3, r3
 364              	.LVL37:
 247:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     }
 365              		.loc 1 247 0
 366 0152 43F48043 		orrne	r3, r3, #16384
 367              	.LVL38:
 251:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     {
 368              		.loc 1 251 0
 369 0156 C3F30B02 		ubfx	r2, r3, #0, #12
 370 015a 0AB9     		cbnz	r2, .L23
 254:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     }
 371              		.loc 1 254 0
 372 015c 43F00103 		orr	r3, r3, #1
 373              	.LVL39:
 374              	.L23:
 259:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 375              		.loc 1 259 0
 376 0160 4FF49671 		mov	r1, #300
 377              	.LVL40:
 378 0164 44F6D352 		movw	r2, #19923
 379 0168 01FB07F7 		mul	r7, r1, r7
 380              	.LVL41:
 381 016c C1F26202 		movt	r2, 4194
 382 0170 82FB0712 		smull	r1, r2, r2, r7
 383 0174 9209     		lsrs	r2, r2, #6
 384 0176 0132     		adds	r2, r2, #1
 257:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Set Maximum Rise Time for fast mode */
 385              		.loc 1 257 0
 386 0178 43F40043 		orr	r3, r3, #32768
 387              	.LVL42:
 259:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 388              		.loc 1 259 0
 389 017c 2284     		strh	r2, [r4, #32]	@ movhi
 390 017e BCE7     		b	.L20
 391              	.LVL43:
 392              	.L43:
 188:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_MODE(I2C_InitStruct->I2C_Mode));
 393              		.loc 1 188 0 discriminator 1
 394 0180 40F20000 		movw	r0, #:lower16:.LC0
 395 0184 C0F20000 		movt	r0, #:upper16:.LC0
 396 0188 BC21     		movs	r1, #188
 397 018a FFF7FEFF 		bl	assert_failed
 398              	.LVL44:
 399 018e 5DE7     		b	.L12
 400              	.L47:
 193:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 401              		.loc 1 193 0 discriminator 1
 402 0190 40F20000 		movw	r0, #:lower16:.LC0
 403 0194 C0F20000 		movt	r0, #:upper16:.LC0
 404 0198 C121     		movs	r1, #193
 405 019a FFF7FEFF 		bl	assert_failed
 406              	.LVL45:
 407 019e 7FE7     		b	.L17
 408              	.L46:
 192:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ACKNOWLEDGE_ADDRESS(I2C_InitStruct->I2C_AcknowledgedAddress));
 409              		.loc 1 192 0 discriminator 1
 410 01a0 40F20000 		movw	r0, #:lower16:.LC0
 411 01a4 C0F20000 		movt	r0, #:upper16:.LC0
 412 01a8 C021     		movs	r1, #192
 413 01aa FFF7FEFF 		bl	assert_failed
 414              	.LVL46:
 415 01ae 71E7     		b	.L16
 416              	.L45:
 191:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ACK_STATE(I2C_InitStruct->I2C_Ack));
 417              		.loc 1 191 0 discriminator 1
 418 01b0 40F20000 		movw	r0, #:lower16:.LC0
 419 01b4 C0F20000 		movt	r0, #:upper16:.LC0
 420 01b8 BF21     		movs	r1, #191
 421 01ba FFF7FEFF 		bl	assert_failed
 422              	.LVL47:
 423 01be 61E7     		b	.L15
 424              	.L44:
 190:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_OWN_ADDRESS1(I2C_InitStruct->I2C_OwnAddress1));
 425              		.loc 1 190 0 discriminator 1
 426 01c0 40F20000 		movw	r0, #:lower16:.LC0
 427 01c4 C0F20000 		movt	r0, #:upper16:.LC0
 428 01c8 BE21     		movs	r1, #190
 429 01ca FFF7FEFF 		bl	assert_failed
 430              	.LVL48:
 431 01ce 54E7     		b	.L14
 432              		.cfi_endproc
 433              	.LFE124:
 435              		.section	.text.I2C_StructInit,"ax",%progbits
 436              		.align	2
 437              		.global	I2C_StructInit
 438              		.thumb
 439              		.thumb_func
 441              	I2C_StructInit:
 442              	.LFB125:
 283:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 284:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 285:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Fills each I2C_InitStruct member with its default value.
 286:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_InitStruct: pointer to an I2C_InitTypeDef structure which will be initialized.
 287:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 288:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 289:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_StructInit(I2C_InitTypeDef* I2C_InitStruct)
 290:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 443              		.loc 1 290 0
 444              		.cfi_startproc
 445              		@ args = 0, pretend = 0, frame = 0
 446              		@ frame_needed = 0, uses_anonymous_args = 0
 447              		@ link register save eliminated.
 448              	.LVL49:
 291:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /*---------------- Reset I2C init structure parameters values ----------------*/
 292:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* initialize the I2C_ClockSpeed member */
 293:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2C_InitStruct->I2C_ClockSpeed = 5000;
 294:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Initialize the I2C_Mode member */
 295:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2C_InitStruct->I2C_Mode = I2C_Mode_I2C;
 449              		.loc 1 295 0
 450 0000 0023     		movs	r3, #0
 290:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /*---------------- Reset I2C init structure parameters values ----------------*/
 451              		.loc 1 290 0
 452 0002 10B4     		push	{r4}
 453              	.LCFI3:
 454              		.cfi_def_cfa_offset 4
 455              		.cfi_offset 4, -4
 296:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Initialize the I2C_DutyCycle member */
 297:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2C_InitStruct->I2C_DutyCycle = I2C_DutyCycle_2;
 456              		.loc 1 297 0
 457 0004 4BF6FF71 		movw	r1, #49151
 293:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Initialize the I2C_Mode member */
 458              		.loc 1 293 0
 459 0008 41F28834 		movw	r4, #5000
 298:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Initialize the I2C_OwnAddress1 member */
 299:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2C_InitStruct->I2C_OwnAddress1 = 0;
 300:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Initialize the I2C_Ack member */
 301:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2C_InitStruct->I2C_Ack = I2C_Ack_Disable;
 302:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Initialize the I2C_AcknowledgedAddress member */
 303:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2C_InitStruct->I2C_AcknowledgedAddress = I2C_AcknowledgedAddress_7bit;
 460              		.loc 1 303 0
 461 000c 4FF48042 		mov	r2, #16384
 293:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Initialize the I2C_Mode member */
 462              		.loc 1 293 0
 463 0010 0460     		str	r4, [r0]
 297:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Initialize the I2C_OwnAddress1 member */
 464              		.loc 1 297 0
 465 0012 C180     		strh	r1, [r0, #6]	@ movhi
 466              		.loc 1 303 0
 467 0014 8281     		strh	r2, [r0, #12]	@ movhi
 295:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Initialize the I2C_DutyCycle member */
 468              		.loc 1 295 0
 469 0016 8380     		strh	r3, [r0, #4]	@ movhi
 299:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Initialize the I2C_Ack member */
 470              		.loc 1 299 0
 471 0018 0381     		strh	r3, [r0, #8]	@ movhi
 301:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Initialize the I2C_AcknowledgedAddress member */
 472              		.loc 1 301 0
 473 001a 4381     		strh	r3, [r0, #10]	@ movhi
 304:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 474              		.loc 1 304 0
 475 001c 5DF8044B 		ldr	r4, [sp], #4
 476 0020 7047     		bx	lr
 477              		.cfi_endproc
 478              	.LFE125:
 480 0022 00BF     		.section	.text.I2C_Cmd,"ax",%progbits
 481              		.align	2
 482              		.global	I2C_Cmd
 483              		.thumb
 484              		.thumb_func
 486              	I2C_Cmd:
 487              	.LFB126:
 305:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 306:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 307:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C peripheral.
 308:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 309:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2Cx peripheral. 
 310:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 311:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 312:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 313:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_Cmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 314:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 488              		.loc 1 314 0
 489              		.cfi_startproc
 490              		@ args = 0, pretend = 0, frame = 0
 491              		@ frame_needed = 0, uses_anonymous_args = 0
 492              	.LVL50:
 493 0000 38B5     		push	{r3, r4, r5, lr}
 494              	.LCFI4:
 495              		.cfi_def_cfa_offset 16
 496              		.cfi_offset 3, -16
 497              		.cfi_offset 4, -12
 498              		.cfi_offset 5, -8
 499              		.cfi_offset 14, -4
 315:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 316:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 500              		.loc 1 316 0
 501 0002 4FF4A842 		mov	r2, #21504
 502 0006 4FF4B043 		mov	r3, #22528
 503 000a C4F20002 		movt	r2, 16384
 504 000e C4F20003 		movt	r3, 16384
 505 0012 9042     		cmp	r0, r2
 506 0014 18BF     		it	ne
 507 0016 9842     		cmpne	r0, r3
 314:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 508              		.loc 1 314 0
 509 0018 0446     		mov	r4, r0
 510 001a 0D46     		mov	r5, r1
 511              		.loc 1 316 0
 512 001c 0DD0     		beq	.L50
 513              		.loc 1 316 0 is_stmt 0 discriminator 1
 514 001e 4FF4B843 		mov	r3, #23552
 515 0022 C4F20003 		movt	r3, 16384
 516 0026 9842     		cmp	r0, r3
 517 0028 07D0     		beq	.L50
 518 002a 40F20000 		movw	r0, #:lower16:.LC0
 519              	.LVL51:
 520 002e C0F20000 		movt	r0, #:upper16:.LC0
 521 0032 4FF49E71 		mov	r1, #316
 522              	.LVL52:
 523 0036 FFF7FEFF 		bl	assert_failed
 524              	.LVL53:
 525              	.L50:
 317:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 526              		.loc 1 317 0 is_stmt 1
 527 003a 012D     		cmp	r5, #1
 528 003c 0DD9     		bls	.L51
 529              		.loc 1 317 0 is_stmt 0 discriminator 1
 530 003e 40F20000 		movw	r0, #:lower16:.LC0
 531 0042 C0F20000 		movt	r0, #:upper16:.LC0
 532 0046 40F23D11 		movw	r1, #317
 533 004a FFF7FEFF 		bl	assert_failed
 534              	.LVL54:
 535              	.L52:
 318:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 319:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 320:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable the selected I2C peripheral */
 321:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_PE;
 536              		.loc 1 321 0 is_stmt 1
 537 004e 2388     		ldrh	r3, [r4]
 538 0050 9BB2     		uxth	r3, r3
 539 0052 43F00103 		orr	r3, r3, #1
 540 0056 2380     		strh	r3, [r4]	@ movhi
 541 0058 38BD     		pop	{r3, r4, r5, pc}
 542              	.LVL55:
 543              	.L51:
 318:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 544              		.loc 1 318 0
 545 005a 002D     		cmp	r5, #0
 546 005c F7D1     		bne	.L52
 322:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 323:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 324:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 325:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable the selected I2C peripheral */
 326:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_PE);
 547              		.loc 1 326 0
 548 005e 2388     		ldrh	r3, [r4]
 549 0060 23F00103 		bic	r3, r3, #1
 550 0064 1B04     		lsls	r3, r3, #16
 551 0066 1B0C     		lsrs	r3, r3, #16
 552 0068 2380     		strh	r3, [r4]	@ movhi
 553 006a 38BD     		pop	{r3, r4, r5, pc}
 554              		.cfi_endproc
 555              	.LFE126:
 557              		.section	.text.I2C_AnalogFilterCmd,"ax",%progbits
 558              		.align	2
 559              		.global	I2C_AnalogFilterCmd
 560              		.thumb
 561              		.thumb_func
 563              	I2C_AnalogFilterCmd:
 564              	.LFB127:
 327:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 328:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 329:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 330:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 331:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the Analog filter of I2C peripheral.
 332:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * 
 333:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   This function can be used only for STM32F42xxx/STM3243xxx, STM32F401xx and STM32F411xE 
 334:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *        
 335:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 336:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the Analog filter. 
 337:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 338:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   This function should be called before initializing and enabling
 339:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****             the I2C Peripheral.
 340:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 341:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 342:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_AnalogFilterCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 343:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 565              		.loc 1 343 0
 566              		.cfi_startproc
 567              		@ args = 0, pretend = 0, frame = 0
 568              		@ frame_needed = 0, uses_anonymous_args = 0
 569              	.LVL56:
 570 0000 38B5     		push	{r3, r4, r5, lr}
 571              	.LCFI5:
 572              		.cfi_def_cfa_offset 16
 573              		.cfi_offset 3, -16
 574              		.cfi_offset 4, -12
 575              		.cfi_offset 5, -8
 576              		.cfi_offset 14, -4
 344:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 345:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 577              		.loc 1 345 0
 578 0002 4FF4A842 		mov	r2, #21504
 579 0006 4FF4B043 		mov	r3, #22528
 580 000a C4F20002 		movt	r2, 16384
 581 000e C4F20003 		movt	r3, 16384
 582 0012 9042     		cmp	r0, r2
 583 0014 18BF     		it	ne
 584 0016 9842     		cmpne	r0, r3
 343:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 585              		.loc 1 343 0
 586 0018 0446     		mov	r4, r0
 587 001a 0D46     		mov	r5, r1
 588              		.loc 1 345 0
 589 001c 0DD0     		beq	.L59
 590              		.loc 1 345 0 is_stmt 0 discriminator 1
 591 001e 4FF4B843 		mov	r3, #23552
 592 0022 C4F20003 		movt	r3, 16384
 593 0026 9842     		cmp	r0, r3
 594 0028 07D0     		beq	.L59
 595 002a 40F20000 		movw	r0, #:lower16:.LC0
 596              	.LVL57:
 597 002e C0F20000 		movt	r0, #:upper16:.LC0
 598 0032 40F25911 		movw	r1, #345
 599              	.LVL58:
 600 0036 FFF7FEFF 		bl	assert_failed
 601              	.LVL59:
 602              	.L59:
 346:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 603              		.loc 1 346 0 is_stmt 1
 604 003a 012D     		cmp	r5, #1
 605 003c 0ED9     		bls	.L60
 606              		.loc 1 346 0 is_stmt 0 discriminator 1
 607 003e 40F20000 		movw	r0, #:lower16:.LC0
 608 0042 C0F20000 		movt	r0, #:upper16:.LC0
 609 0046 4FF4AD71 		mov	r1, #346
 610 004a FFF7FEFF 		bl	assert_failed
 611              	.LVL60:
 612              	.L61:
 347:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 348:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 349:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable the analog filter */
 350:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->FLTR &= (uint16_t)~((uint16_t)I2C_FLTR_ANOFF);    
 613              		.loc 1 350 0 is_stmt 1
 614 004e A38C     		ldrh	r3, [r4, #36]
 615 0050 23F01003 		bic	r3, r3, #16
 616 0054 1B04     		lsls	r3, r3, #16
 617 0056 1B0C     		lsrs	r3, r3, #16
 618 0058 A384     		strh	r3, [r4, #36]	@ movhi
 619 005a 38BD     		pop	{r3, r4, r5, pc}
 620              	.LVL61:
 621              	.L60:
 347:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 622              		.loc 1 347 0
 623 005c 002D     		cmp	r5, #0
 624 005e F6D1     		bne	.L61
 351:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 352:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 353:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 354:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable the analog filter */
 355:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->FLTR |= I2C_FLTR_ANOFF;
 625              		.loc 1 355 0
 626 0060 A38C     		ldrh	r3, [r4, #36]
 627 0062 9BB2     		uxth	r3, r3
 628 0064 43F01003 		orr	r3, r3, #16
 629 0068 A384     		strh	r3, [r4, #36]	@ movhi
 630 006a 38BD     		pop	{r3, r4, r5, pc}
 631              		.cfi_endproc
 632              	.LFE127:
 634              		.section	.text.I2C_DigitalFilterConfig,"ax",%progbits
 635              		.align	2
 636              		.global	I2C_DigitalFilterConfig
 637              		.thumb
 638              		.thumb_func
 640              	I2C_DigitalFilterConfig:
 641              	.LFB128:
 356:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 357:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 358:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 359:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 360:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Configures the Digital noise filter of I2C peripheral.
 361:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * 
 362:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   This function can be used only for STM32F42xxx/STM3243xxx, STM32F401xx and STM32F411xE 
 363:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *       
 364:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 365:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_DigitalFilter: Coefficient of digital noise filter. 
 366:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be a number between 0x00 and 0x0F.
 367:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   This function should be called before initializing and enabling
 368:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****             the I2C Peripheral.
 369:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 370:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 371:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_DigitalFilterConfig(I2C_TypeDef* I2Cx, uint16_t I2C_DigitalFilter)
 372:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 642              		.loc 1 372 0
 643              		.cfi_startproc
 644              		@ args = 0, pretend = 0, frame = 0
 645              		@ frame_needed = 0, uses_anonymous_args = 0
 646              	.LVL62:
 647 0000 38B5     		push	{r3, r4, r5, lr}
 648              	.LCFI6:
 649              		.cfi_def_cfa_offset 16
 650              		.cfi_offset 3, -16
 651              		.cfi_offset 4, -12
 652              		.cfi_offset 5, -8
 653              		.cfi_offset 14, -4
 373:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint16_t tmpreg = 0;
 374:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
 375:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 376:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 654              		.loc 1 376 0
 655 0002 4FF4A842 		mov	r2, #21504
 656 0006 4FF4B043 		mov	r3, #22528
 657 000a C4F20002 		movt	r2, 16384
 658 000e C4F20003 		movt	r3, 16384
 659 0012 9042     		cmp	r0, r2
 660 0014 18BF     		it	ne
 661 0016 9842     		cmpne	r0, r3
 372:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint16_t tmpreg = 0;
 662              		.loc 1 372 0
 663 0018 0446     		mov	r4, r0
 664 001a 0D46     		mov	r5, r1
 665              		.loc 1 376 0
 666 001c 0DD0     		beq	.L68
 667              		.loc 1 376 0 is_stmt 0 discriminator 1
 668 001e 4FF4B843 		mov	r3, #23552
 669 0022 C4F20003 		movt	r3, 16384
 670 0026 9842     		cmp	r0, r3
 671 0028 07D0     		beq	.L68
 672 002a 40F20000 		movw	r0, #:lower16:.LC0
 673              	.LVL63:
 674 002e C0F20000 		movt	r0, #:upper16:.LC0
 675 0032 4FF4BC71 		mov	r1, #376
 676              	.LVL64:
 677 0036 FFF7FEFF 		bl	assert_failed
 678              	.LVL65:
 679              	.L68:
 377:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_DIGITAL_FILTER(I2C_DigitalFilter));
 680              		.loc 1 377 0 is_stmt 1
 681 003a 0F2D     		cmp	r5, #15
 682 003c 07D9     		bls	.L69
 683              		.loc 1 377 0 is_stmt 0 discriminator 1
 684 003e 40F20000 		movw	r0, #:lower16:.LC0
 685 0042 C0F20000 		movt	r0, #:upper16:.LC0
 686 0046 40F27911 		movw	r1, #377
 687 004a FFF7FEFF 		bl	assert_failed
 688              	.LVL66:
 689              	.L69:
 378:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
 379:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get the old register value */
 380:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg = I2Cx->FLTR;
 690              		.loc 1 380 0 is_stmt 1
 691 004e A38C     		ldrh	r3, [r4, #36]
 692              	.LVL67:
 381:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
 382:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Reset I2Cx DNF bit [3:0] */
 383:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg &= (uint16_t)~((uint16_t)I2C_FLTR_DNF);
 693              		.loc 1 383 0
 694 0050 23F00F03 		bic	r3, r3, #15
 695              	.LVL68:
 696 0054 1B04     		lsls	r3, r3, #16
 384:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
 385:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Set I2Cx DNF coefficient */
 386:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg |= (uint16_t)((uint16_t)I2C_DigitalFilter & I2C_FLTR_DNF);
 697              		.loc 1 386 0
 698 0056 05F00F05 		and	r5, r5, #15
 383:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
 699              		.loc 1 383 0
 700 005a 1B0C     		lsrs	r3, r3, #16
 701              		.loc 1 386 0
 702 005c 2B43     		orrs	r3, r3, r5
 703              	.LVL69:
 387:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
 388:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Store the new register value */
 389:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->FLTR = tmpreg;
 704              		.loc 1 389 0
 705 005e A384     		strh	r3, [r4, #36]	@ movhi
 706 0060 38BD     		pop	{r3, r4, r5, pc}
 707              		.cfi_endproc
 708              	.LFE128:
 710 0062 00BF     		.section	.text.I2C_GenerateSTART,"ax",%progbits
 711              		.align	2
 712              		.global	I2C_GenerateSTART
 713              		.thumb
 714              		.thumb_func
 716              	I2C_GenerateSTART:
 717              	.LFB129:
 390:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 391:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 392:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 393:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Generates I2Cx communication START condition.
 394:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 395:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C START condition generation.
 396:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 397:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None.
 398:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 399:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_GenerateSTART(I2C_TypeDef* I2Cx, FunctionalState NewState)
 400:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 718              		.loc 1 400 0
 719              		.cfi_startproc
 720              		@ args = 0, pretend = 0, frame = 0
 721              		@ frame_needed = 0, uses_anonymous_args = 0
 722              	.LVL70:
 723 0000 38B5     		push	{r3, r4, r5, lr}
 724              	.LCFI7:
 725              		.cfi_def_cfa_offset 16
 726              		.cfi_offset 3, -16
 727              		.cfi_offset 4, -12
 728              		.cfi_offset 5, -8
 729              		.cfi_offset 14, -4
 401:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 402:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 730              		.loc 1 402 0
 731 0002 4FF4A842 		mov	r2, #21504
 732 0006 4FF4B043 		mov	r3, #22528
 733 000a C4F20002 		movt	r2, 16384
 734 000e C4F20003 		movt	r3, 16384
 735 0012 9042     		cmp	r0, r2
 736 0014 18BF     		it	ne
 737 0016 9842     		cmpne	r0, r3
 400:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 738              		.loc 1 400 0
 739 0018 0446     		mov	r4, r0
 740 001a 0D46     		mov	r5, r1
 741              		.loc 1 402 0
 742 001c 0DD0     		beq	.L74
 743              		.loc 1 402 0 is_stmt 0 discriminator 1
 744 001e 4FF4B843 		mov	r3, #23552
 745 0022 C4F20003 		movt	r3, 16384
 746 0026 9842     		cmp	r0, r3
 747 0028 07D0     		beq	.L74
 748 002a 40F20000 		movw	r0, #:lower16:.LC0
 749              	.LVL71:
 750 002e C0F20000 		movt	r0, #:upper16:.LC0
 751 0032 4FF4C971 		mov	r1, #402
 752              	.LVL72:
 753 0036 FFF7FEFF 		bl	assert_failed
 754              	.LVL73:
 755              	.L74:
 403:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 756              		.loc 1 403 0 is_stmt 1
 757 003a 012D     		cmp	r5, #1
 758 003c 0DD9     		bls	.L75
 759              		.loc 1 403 0 is_stmt 0 discriminator 1
 760 003e 40F20000 		movw	r0, #:lower16:.LC0
 761 0042 C0F20000 		movt	r0, #:upper16:.LC0
 762 0046 40F29311 		movw	r1, #403
 763 004a FFF7FEFF 		bl	assert_failed
 764              	.LVL74:
 765              	.L76:
 404:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 405:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 406:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Generate a START condition */
 407:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_START;
 766              		.loc 1 407 0 is_stmt 1
 767 004e 2388     		ldrh	r3, [r4]
 768 0050 9BB2     		uxth	r3, r3
 769 0052 43F48073 		orr	r3, r3, #256
 770 0056 2380     		strh	r3, [r4]	@ movhi
 771 0058 38BD     		pop	{r3, r4, r5, pc}
 772              	.LVL75:
 773              	.L75:
 404:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 774              		.loc 1 404 0
 775 005a 002D     		cmp	r5, #0
 776 005c F7D1     		bne	.L76
 408:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 409:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 410:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 411:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable the START condition generation */
 412:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_START);
 777              		.loc 1 412 0
 778 005e 2388     		ldrh	r3, [r4]
 779 0060 23F48073 		bic	r3, r3, #256
 780 0064 1B04     		lsls	r3, r3, #16
 781 0066 1B0C     		lsrs	r3, r3, #16
 782 0068 2380     		strh	r3, [r4]	@ movhi
 783 006a 38BD     		pop	{r3, r4, r5, pc}
 784              		.cfi_endproc
 785              	.LFE129:
 787              		.section	.text.I2C_GenerateSTOP,"ax",%progbits
 788              		.align	2
 789              		.global	I2C_GenerateSTOP
 790              		.thumb
 791              		.thumb_func
 793              	I2C_GenerateSTOP:
 794              	.LFB130:
 413:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 414:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 415:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 416:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 417:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Generates I2Cx communication STOP condition.
 418:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 419:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C STOP condition generation.
 420:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 421:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None.
 422:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 423:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_GenerateSTOP(I2C_TypeDef* I2Cx, FunctionalState NewState)
 424:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 795              		.loc 1 424 0
 796              		.cfi_startproc
 797              		@ args = 0, pretend = 0, frame = 0
 798              		@ frame_needed = 0, uses_anonymous_args = 0
 799              	.LVL76:
 800 0000 38B5     		push	{r3, r4, r5, lr}
 801              	.LCFI8:
 802              		.cfi_def_cfa_offset 16
 803              		.cfi_offset 3, -16
 804              		.cfi_offset 4, -12
 805              		.cfi_offset 5, -8
 806              		.cfi_offset 14, -4
 425:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 426:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 807              		.loc 1 426 0
 808 0002 4FF4A842 		mov	r2, #21504
 809 0006 4FF4B043 		mov	r3, #22528
 810 000a C4F20002 		movt	r2, 16384
 811 000e C4F20003 		movt	r3, 16384
 812 0012 9042     		cmp	r0, r2
 813 0014 18BF     		it	ne
 814 0016 9842     		cmpne	r0, r3
 424:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 815              		.loc 1 424 0
 816 0018 0446     		mov	r4, r0
 817 001a 0D46     		mov	r5, r1
 818              		.loc 1 426 0
 819 001c 0DD0     		beq	.L83
 820              		.loc 1 426 0 is_stmt 0 discriminator 1
 821 001e 4FF4B843 		mov	r3, #23552
 822 0022 C4F20003 		movt	r3, 16384
 823 0026 9842     		cmp	r0, r3
 824 0028 07D0     		beq	.L83
 825 002a 40F20000 		movw	r0, #:lower16:.LC0
 826              	.LVL77:
 827 002e C0F20000 		movt	r0, #:upper16:.LC0
 828 0032 4FF4D571 		mov	r1, #426
 829              	.LVL78:
 830 0036 FFF7FEFF 		bl	assert_failed
 831              	.LVL79:
 832              	.L83:
 427:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 833              		.loc 1 427 0 is_stmt 1
 834 003a 012D     		cmp	r5, #1
 835 003c 0DD9     		bls	.L84
 836              		.loc 1 427 0 is_stmt 0 discriminator 1
 837 003e 40F20000 		movw	r0, #:lower16:.LC0
 838 0042 C0F20000 		movt	r0, #:upper16:.LC0
 839 0046 40F2AB11 		movw	r1, #427
 840 004a FFF7FEFF 		bl	assert_failed
 841              	.LVL80:
 842              	.L85:
 428:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 429:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 430:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Generate a STOP condition */
 431:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_STOP;
 843              		.loc 1 431 0 is_stmt 1
 844 004e 2388     		ldrh	r3, [r4]
 845 0050 9BB2     		uxth	r3, r3
 846 0052 43F40073 		orr	r3, r3, #512
 847 0056 2380     		strh	r3, [r4]	@ movhi
 848 0058 38BD     		pop	{r3, r4, r5, pc}
 849              	.LVL81:
 850              	.L84:
 428:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 851              		.loc 1 428 0
 852 005a 002D     		cmp	r5, #0
 853 005c F7D1     		bne	.L85
 432:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 433:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 434:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 435:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable the STOP condition generation */
 436:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_STOP);
 854              		.loc 1 436 0
 855 005e 2388     		ldrh	r3, [r4]
 856 0060 23F40073 		bic	r3, r3, #512
 857 0064 1B04     		lsls	r3, r3, #16
 858 0066 1B0C     		lsrs	r3, r3, #16
 859 0068 2380     		strh	r3, [r4]	@ movhi
 860 006a 38BD     		pop	{r3, r4, r5, pc}
 861              		.cfi_endproc
 862              	.LFE130:
 864              		.section	.text.I2C_Send7bitAddress,"ax",%progbits
 865              		.align	2
 866              		.global	I2C_Send7bitAddress
 867              		.thumb
 868              		.thumb_func
 870              	I2C_Send7bitAddress:
 871              	.LFB131:
 437:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 438:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 439:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 440:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 441:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Transmits the address byte to select the slave device.
 442:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 443:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  Address: specifies the slave address which will be transmitted
 444:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_Direction: specifies whether the I2C device will be a Transmitter
 445:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         or a Receiver. 
 446:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values
 447:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Direction_Transmitter: Transmitter mode
 448:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Direction_Receiver: Receiver mode
 449:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None.
 450:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 451:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_Send7bitAddress(I2C_TypeDef* I2Cx, uint8_t Address, uint8_t I2C_Direction)
 452:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 872              		.loc 1 452 0
 873              		.cfi_startproc
 874              		@ args = 0, pretend = 0, frame = 0
 875              		@ frame_needed = 0, uses_anonymous_args = 0
 876              	.LVL82:
 877 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 878              	.LCFI9:
 879              		.cfi_def_cfa_offset 24
 880              		.cfi_offset 3, -24
 881              		.cfi_offset 4, -20
 882              		.cfi_offset 5, -16
 883              		.cfi_offset 6, -12
 884              		.cfi_offset 7, -8
 885              		.cfi_offset 14, -4
 453:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 454:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 886              		.loc 1 454 0
 887 0002 4FF4A845 		mov	r5, #21504
 888 0006 4FF4B043 		mov	r3, #22528
 889 000a C4F20005 		movt	r5, 16384
 890 000e C4F20003 		movt	r3, 16384
 891 0012 A842     		cmp	r0, r5
 892 0014 18BF     		it	ne
 893 0016 9842     		cmpne	r0, r3
 452:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 894              		.loc 1 452 0
 895 0018 0446     		mov	r4, r0
 896 001a 0F46     		mov	r7, r1
 897 001c 1646     		mov	r6, r2
 898              		.loc 1 454 0
 899 001e 0DD0     		beq	.L92
 900              		.loc 1 454 0 is_stmt 0 discriminator 1
 901 0020 4FF4B843 		mov	r3, #23552
 902 0024 C4F20003 		movt	r3, 16384
 903 0028 9842     		cmp	r0, r3
 904 002a 07D0     		beq	.L92
 905 002c 40F20000 		movw	r0, #:lower16:.LC0
 906              	.LVL83:
 907 0030 C0F20000 		movt	r0, #:upper16:.LC0
 908 0034 4FF4E371 		mov	r1, #454
 909              	.LVL84:
 910 0038 FFF7FEFF 		bl	assert_failed
 911              	.LVL85:
 912              	.L92:
 455:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_DIRECTION(I2C_Direction));
 913              		.loc 1 455 0 is_stmt 1
 914 003c 012E     		cmp	r6, #1
 915 003e 0BD9     		bls	.L93
 916              		.loc 1 455 0 is_stmt 0 discriminator 1
 917 0040 40F20000 		movw	r0, #:lower16:.LC0
 918 0044 C0F20000 		movt	r0, #:upper16:.LC0
 919 0048 40F2C711 		movw	r1, #455
 920 004c FFF7FEFF 		bl	assert_failed
 921              	.LVL86:
 922              	.L94:
 456:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Test on the direction to set/reset the read/write bit */
 457:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (I2C_Direction != I2C_Direction_Transmitter)
 458:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 459:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Set the address bit0 for read */
 460:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     Address |= I2C_OAR1_ADD0;
 923              		.loc 1 460 0 is_stmt 1
 924 0050 47F00107 		orr	r7, r7, #1
 925              	.LVL87:
 461:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 462:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 463:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 464:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Reset the address bit0 for write */
 465:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     Address &= (uint8_t)~((uint8_t)I2C_OAR1_ADD0);
 466:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 467:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Send the address */
 468:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->DR = Address;
 926              		.loc 1 468 0
 927 0054 2782     		strh	r7, [r4, #16]	@ movhi
 928 0056 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 929              	.LVL88:
 930              	.L93:
 457:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 931              		.loc 1 457 0
 932 0058 002E     		cmp	r6, #0
 933 005a F9D1     		bne	.L94
 465:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 934              		.loc 1 465 0
 935 005c 07F0FE07 		and	r7, r7, #254
 936              	.LVL89:
 937              		.loc 1 468 0
 938 0060 2782     		strh	r7, [r4, #16]	@ movhi
 939 0062 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 940              		.cfi_endproc
 941              	.LFE131:
 943              		.section	.text.I2C_AcknowledgeConfig,"ax",%progbits
 944              		.align	2
 945              		.global	I2C_AcknowledgeConfig
 946              		.thumb
 947              		.thumb_func
 949              	I2C_AcknowledgeConfig:
 950              	.LFB132:
 469:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 470:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 471:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 472:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C acknowledge feature.
 473:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 474:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C Acknowledgement.
 475:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 476:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None.
 477:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 478:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_AcknowledgeConfig(I2C_TypeDef* I2Cx, FunctionalState NewState)
 479:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 951              		.loc 1 479 0
 952              		.cfi_startproc
 953              		@ args = 0, pretend = 0, frame = 0
 954              		@ frame_needed = 0, uses_anonymous_args = 0
 955              	.LVL90:
 956 0000 38B5     		push	{r3, r4, r5, lr}
 957              	.LCFI10:
 958              		.cfi_def_cfa_offset 16
 959              		.cfi_offset 3, -16
 960              		.cfi_offset 4, -12
 961              		.cfi_offset 5, -8
 962              		.cfi_offset 14, -4
 480:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 481:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 963              		.loc 1 481 0
 964 0002 4FF4A842 		mov	r2, #21504
 965 0006 4FF4B043 		mov	r3, #22528
 966 000a C4F20002 		movt	r2, 16384
 967 000e C4F20003 		movt	r3, 16384
 968 0012 9042     		cmp	r0, r2
 969 0014 18BF     		it	ne
 970 0016 9842     		cmpne	r0, r3
 479:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 971              		.loc 1 479 0
 972 0018 0446     		mov	r4, r0
 973 001a 0D46     		mov	r5, r1
 974              		.loc 1 481 0
 975 001c 0DD0     		beq	.L101
 976              		.loc 1 481 0 is_stmt 0 discriminator 1
 977 001e 4FF4B843 		mov	r3, #23552
 978 0022 C4F20003 		movt	r3, 16384
 979 0026 9842     		cmp	r0, r3
 980 0028 07D0     		beq	.L101
 981 002a 40F20000 		movw	r0, #:lower16:.LC0
 982              	.LVL91:
 983 002e C0F20000 		movt	r0, #:upper16:.LC0
 984 0032 40F2E111 		movw	r1, #481
 985              	.LVL92:
 986 0036 FFF7FEFF 		bl	assert_failed
 987              	.LVL93:
 988              	.L101:
 482:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 989              		.loc 1 482 0 is_stmt 1
 990 003a 012D     		cmp	r5, #1
 991 003c 0DD9     		bls	.L102
 992              		.loc 1 482 0 is_stmt 0 discriminator 1
 993 003e 40F20000 		movw	r0, #:lower16:.LC0
 994 0042 C0F20000 		movt	r0, #:upper16:.LC0
 995 0046 4FF4F171 		mov	r1, #482
 996 004a FFF7FEFF 		bl	assert_failed
 997              	.LVL94:
 998              	.L103:
 483:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 484:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 485:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable the acknowledgement */
 486:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_ACK;
 999              		.loc 1 486 0 is_stmt 1
 1000 004e 2388     		ldrh	r3, [r4]
 1001 0050 9BB2     		uxth	r3, r3
 1002 0052 43F48063 		orr	r3, r3, #1024
 1003 0056 2380     		strh	r3, [r4]	@ movhi
 1004 0058 38BD     		pop	{r3, r4, r5, pc}
 1005              	.LVL95:
 1006              	.L102:
 483:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 1007              		.loc 1 483 0
 1008 005a 002D     		cmp	r5, #0
 1009 005c F7D1     		bne	.L103
 487:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 488:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 489:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 490:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable the acknowledgement */
 491:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_ACK);
 1010              		.loc 1 491 0
 1011 005e 2388     		ldrh	r3, [r4]
 1012 0060 23F48063 		bic	r3, r3, #1024
 1013 0064 1B04     		lsls	r3, r3, #16
 1014 0066 1B0C     		lsrs	r3, r3, #16
 1015 0068 2380     		strh	r3, [r4]	@ movhi
 1016 006a 38BD     		pop	{r3, r4, r5, pc}
 1017              		.cfi_endproc
 1018              	.LFE132:
 1020              		.section	.text.I2C_OwnAddress2Config,"ax",%progbits
 1021              		.align	2
 1022              		.global	I2C_OwnAddress2Config
 1023              		.thumb
 1024              		.thumb_func
 1026              	I2C_OwnAddress2Config:
 1027              	.LFB133:
 492:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 493:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 494:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 495:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 496:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Configures the specified I2C own address2.
 497:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 498:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  Address: specifies the 7bit I2C own address2.
 499:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None.
 500:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 501:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_OwnAddress2Config(I2C_TypeDef* I2Cx, uint8_t Address)
 502:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1028              		.loc 1 502 0
 1029              		.cfi_startproc
 1030              		@ args = 0, pretend = 0, frame = 0
 1031              		@ frame_needed = 0, uses_anonymous_args = 0
 1032              	.LVL96:
 1033 0000 70B5     		push	{r4, r5, r6, lr}
 1034              	.LCFI11:
 1035              		.cfi_def_cfa_offset 16
 1036              		.cfi_offset 4, -16
 1037              		.cfi_offset 5, -12
 1038              		.cfi_offset 6, -8
 1039              		.cfi_offset 14, -4
 503:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint16_t tmpreg = 0;
 504:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 505:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 506:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 1040              		.loc 1 506 0
 1041 0002 4FF4B042 		mov	r2, #22528
 1042 0006 4FF4A845 		mov	r5, #21504
 1043 000a C4F20005 		movt	r5, 16384
 1044 000e C4F20002 		movt	r2, 16384
 1045 0012 A842     		cmp	r0, r5
 1046 0014 18BF     		it	ne
 1047 0016 9042     		cmpne	r0, r2
 502:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint16_t tmpreg = 0;
 1048              		.loc 1 502 0
 1049 0018 0446     		mov	r4, r0
 1050 001a 0E46     		mov	r6, r1
 1051              		.loc 1 506 0
 1052 001c 0DD0     		beq	.L110
 1053              		.loc 1 506 0 is_stmt 0 discriminator 1
 1054 001e 4FF4B843 		mov	r3, #23552
 1055 0022 C4F20003 		movt	r3, 16384
 1056 0026 9842     		cmp	r0, r3
 1057 0028 07D0     		beq	.L110
 1058 002a 40F20000 		movw	r0, #:lower16:.LC0
 1059              	.LVL97:
 1060 002e C0F20000 		movt	r0, #:upper16:.LC0
 1061 0032 4FF4FD71 		mov	r1, #506
 1062              	.LVL98:
 1063 0036 FFF7FEFF 		bl	assert_failed
 1064              	.LVL99:
 1065              	.L110:
 507:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 508:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get the old register value */
 509:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg = I2Cx->OAR2;
 1066              		.loc 1 509 0 is_stmt 1
 1067 003a A389     		ldrh	r3, [r4, #12]
 1068              	.LVL100:
 510:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 511:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Reset I2Cx Own address2 bit [7:1] */
 512:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg &= (uint16_t)~((uint16_t)I2C_OAR2_ADD2);
 1069              		.loc 1 512 0
 1070 003c 23F0FE03 		bic	r3, r3, #254
 1071              	.LVL101:
 1072 0040 1B04     		lsls	r3, r3, #16
 513:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 514:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Set I2Cx Own address2 */
 515:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg |= (uint16_t)((uint16_t)Address & (uint16_t)0x00FE);
 1073              		.loc 1 515 0
 1074 0042 06F0FE06 		and	r6, r6, #254
 512:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 1075              		.loc 1 512 0
 1076 0046 1B0C     		lsrs	r3, r3, #16
 1077              		.loc 1 515 0
 1078 0048 3343     		orrs	r3, r3, r6
 1079              	.LVL102:
 516:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 517:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Store the new register value */
 518:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->OAR2 = tmpreg;
 1080              		.loc 1 518 0
 1081 004a A381     		strh	r3, [r4, #12]	@ movhi
 1082 004c 70BD     		pop	{r4, r5, r6, pc}
 1083              		.cfi_endproc
 1084              	.LFE133:
 1086 004e 00BF     		.section	.text.I2C_DualAddressCmd,"ax",%progbits
 1087              		.align	2
 1088              		.global	I2C_DualAddressCmd
 1089              		.thumb
 1090              		.thumb_func
 1092              	I2C_DualAddressCmd:
 1093              	.LFB134:
 519:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 520:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 521:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 522:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C dual addressing mode.
 523:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 524:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C dual addressing mode.
 525:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 526:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 527:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 528:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_DualAddressCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 529:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1094              		.loc 1 529 0
 1095              		.cfi_startproc
 1096              		@ args = 0, pretend = 0, frame = 0
 1097              		@ frame_needed = 0, uses_anonymous_args = 0
 1098              	.LVL103:
 1099 0000 38B5     		push	{r3, r4, r5, lr}
 1100              	.LCFI12:
 1101              		.cfi_def_cfa_offset 16
 1102              		.cfi_offset 3, -16
 1103              		.cfi_offset 4, -12
 1104              		.cfi_offset 5, -8
 1105              		.cfi_offset 14, -4
 530:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 531:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 1106              		.loc 1 531 0
 1107 0002 4FF4A842 		mov	r2, #21504
 1108 0006 4FF4B043 		mov	r3, #22528
 1109 000a C4F20002 		movt	r2, 16384
 1110 000e C4F20003 		movt	r3, 16384
 1111 0012 9042     		cmp	r0, r2
 1112 0014 18BF     		it	ne
 1113 0016 9842     		cmpne	r0, r3
 529:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 1114              		.loc 1 529 0
 1115 0018 0446     		mov	r4, r0
 1116 001a 0D46     		mov	r5, r1
 1117              		.loc 1 531 0
 1118 001c 0DD0     		beq	.L115
 1119              		.loc 1 531 0 is_stmt 0 discriminator 1
 1120 001e 4FF4B843 		mov	r3, #23552
 1121 0022 C4F20003 		movt	r3, 16384
 1122 0026 9842     		cmp	r0, r3
 1123 0028 07D0     		beq	.L115
 1124 002a 40F20000 		movw	r0, #:lower16:.LC0
 1125              	.LVL104:
 1126 002e C0F20000 		movt	r0, #:upper16:.LC0
 1127 0032 40F21321 		movw	r1, #531
 1128              	.LVL105:
 1129 0036 FFF7FEFF 		bl	assert_failed
 1130              	.LVL106:
 1131              	.L115:
 532:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1132              		.loc 1 532 0 is_stmt 1
 1133 003a 012D     		cmp	r5, #1
 1134 003c 0DD9     		bls	.L116
 1135              		.loc 1 532 0 is_stmt 0 discriminator 1
 1136 003e 40F20000 		movw	r0, #:lower16:.LC0
 1137 0042 C0F20000 		movt	r0, #:upper16:.LC0
 1138 0046 4FF40571 		mov	r1, #532
 1139 004a FFF7FEFF 		bl	assert_failed
 1140              	.LVL107:
 1141              	.L117:
 533:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 534:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 535:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable dual addressing mode */
 536:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->OAR2 |= I2C_OAR2_ENDUAL;
 1142              		.loc 1 536 0 is_stmt 1
 1143 004e A389     		ldrh	r3, [r4, #12]
 1144 0050 9BB2     		uxth	r3, r3
 1145 0052 43F00103 		orr	r3, r3, #1
 1146 0056 A381     		strh	r3, [r4, #12]	@ movhi
 1147 0058 38BD     		pop	{r3, r4, r5, pc}
 1148              	.LVL108:
 1149              	.L116:
 533:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 1150              		.loc 1 533 0
 1151 005a 002D     		cmp	r5, #0
 1152 005c F7D1     		bne	.L117
 537:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 538:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 539:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 540:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable dual addressing mode */
 541:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->OAR2 &= (uint16_t)~((uint16_t)I2C_OAR2_ENDUAL);
 1153              		.loc 1 541 0
 1154 005e A389     		ldrh	r3, [r4, #12]
 1155 0060 23F00103 		bic	r3, r3, #1
 1156 0064 1B04     		lsls	r3, r3, #16
 1157 0066 1B0C     		lsrs	r3, r3, #16
 1158 0068 A381     		strh	r3, [r4, #12]	@ movhi
 1159 006a 38BD     		pop	{r3, r4, r5, pc}
 1160              		.cfi_endproc
 1161              	.LFE134:
 1163              		.section	.text.I2C_GeneralCallCmd,"ax",%progbits
 1164              		.align	2
 1165              		.global	I2C_GeneralCallCmd
 1166              		.thumb
 1167              		.thumb_func
 1169              	I2C_GeneralCallCmd:
 1170              	.LFB135:
 542:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 543:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 544:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 545:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 546:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C general call feature.
 547:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 548:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C General call.
 549:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 550:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 551:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 552:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_GeneralCallCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 553:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1171              		.loc 1 553 0
 1172              		.cfi_startproc
 1173              		@ args = 0, pretend = 0, frame = 0
 1174              		@ frame_needed = 0, uses_anonymous_args = 0
 1175              	.LVL109:
 1176 0000 38B5     		push	{r3, r4, r5, lr}
 1177              	.LCFI13:
 1178              		.cfi_def_cfa_offset 16
 1179              		.cfi_offset 3, -16
 1180              		.cfi_offset 4, -12
 1181              		.cfi_offset 5, -8
 1182              		.cfi_offset 14, -4
 554:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 555:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 1183              		.loc 1 555 0
 1184 0002 4FF4A842 		mov	r2, #21504
 1185 0006 4FF4B043 		mov	r3, #22528
 1186 000a C4F20002 		movt	r2, 16384
 1187 000e C4F20003 		movt	r3, 16384
 1188 0012 9042     		cmp	r0, r2
 1189 0014 18BF     		it	ne
 1190 0016 9842     		cmpne	r0, r3
 553:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 1191              		.loc 1 553 0
 1192 0018 0446     		mov	r4, r0
 1193 001a 0D46     		mov	r5, r1
 1194              		.loc 1 555 0
 1195 001c 0DD0     		beq	.L124
 1196              		.loc 1 555 0 is_stmt 0 discriminator 1
 1197 001e 4FF4B843 		mov	r3, #23552
 1198 0022 C4F20003 		movt	r3, 16384
 1199 0026 9842     		cmp	r0, r3
 1200 0028 07D0     		beq	.L124
 1201 002a 40F20000 		movw	r0, #:lower16:.LC0
 1202              	.LVL110:
 1203 002e C0F20000 		movt	r0, #:upper16:.LC0
 1204 0032 40F22B21 		movw	r1, #555
 1205              	.LVL111:
 1206 0036 FFF7FEFF 		bl	assert_failed
 1207              	.LVL112:
 1208              	.L124:
 556:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1209              		.loc 1 556 0 is_stmt 1
 1210 003a 012D     		cmp	r5, #1
 1211 003c 0DD9     		bls	.L125
 1212              		.loc 1 556 0 is_stmt 0 discriminator 1
 1213 003e 40F20000 		movw	r0, #:lower16:.LC0
 1214 0042 C0F20000 		movt	r0, #:upper16:.LC0
 1215 0046 4FF40B71 		mov	r1, #556
 1216 004a FFF7FEFF 		bl	assert_failed
 1217              	.LVL113:
 1218              	.L126:
 557:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 558:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 559:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable general call */
 560:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_ENGC;
 1219              		.loc 1 560 0 is_stmt 1
 1220 004e 2388     		ldrh	r3, [r4]
 1221 0050 9BB2     		uxth	r3, r3
 1222 0052 43F04003 		orr	r3, r3, #64
 1223 0056 2380     		strh	r3, [r4]	@ movhi
 1224 0058 38BD     		pop	{r3, r4, r5, pc}
 1225              	.LVL114:
 1226              	.L125:
 557:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 1227              		.loc 1 557 0
 1228 005a 002D     		cmp	r5, #0
 1229 005c F7D1     		bne	.L126
 561:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 562:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 563:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 564:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable general call */
 565:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_ENGC);
 1230              		.loc 1 565 0
 1231 005e 2388     		ldrh	r3, [r4]
 1232 0060 23F04003 		bic	r3, r3, #64
 1233 0064 1B04     		lsls	r3, r3, #16
 1234 0066 1B0C     		lsrs	r3, r3, #16
 1235 0068 2380     		strh	r3, [r4]	@ movhi
 1236 006a 38BD     		pop	{r3, r4, r5, pc}
 1237              		.cfi_endproc
 1238              	.LFE135:
 1240              		.section	.text.I2C_SoftwareResetCmd,"ax",%progbits
 1241              		.align	2
 1242              		.global	I2C_SoftwareResetCmd
 1243              		.thumb
 1244              		.thumb_func
 1246              	I2C_SoftwareResetCmd:
 1247              	.LFB136:
 566:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 567:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 568:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 569:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 570:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C software reset.
 571:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   When software reset is enabled, the I2C IOs are released (this can
 572:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         be useful to recover from bus errors).  
 573:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 574:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C software reset.
 575:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 576:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 577:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 578:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_SoftwareResetCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 579:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1248              		.loc 1 579 0
 1249              		.cfi_startproc
 1250              		@ args = 0, pretend = 0, frame = 0
 1251              		@ frame_needed = 0, uses_anonymous_args = 0
 1252              	.LVL115:
 1253 0000 38B5     		push	{r3, r4, r5, lr}
 1254              	.LCFI14:
 1255              		.cfi_def_cfa_offset 16
 1256              		.cfi_offset 3, -16
 1257              		.cfi_offset 4, -12
 1258              		.cfi_offset 5, -8
 1259              		.cfi_offset 14, -4
 580:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 581:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 1260              		.loc 1 581 0
 1261 0002 4FF4A842 		mov	r2, #21504
 1262 0006 4FF4B043 		mov	r3, #22528
 1263 000a C4F20002 		movt	r2, 16384
 1264 000e C4F20003 		movt	r3, 16384
 1265 0012 9042     		cmp	r0, r2
 1266 0014 18BF     		it	ne
 1267 0016 9842     		cmpne	r0, r3
 579:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 1268              		.loc 1 579 0
 1269 0018 0446     		mov	r4, r0
 1270 001a 0D46     		mov	r5, r1
 1271              		.loc 1 581 0
 1272 001c 0DD0     		beq	.L133
 1273              		.loc 1 581 0 is_stmt 0 discriminator 1
 1274 001e 4FF4B843 		mov	r3, #23552
 1275 0022 C4F20003 		movt	r3, 16384
 1276 0026 9842     		cmp	r0, r3
 1277 0028 07D0     		beq	.L133
 1278 002a 40F20000 		movw	r0, #:lower16:.LC0
 1279              	.LVL116:
 1280 002e C0F20000 		movt	r0, #:upper16:.LC0
 1281 0032 40F24521 		movw	r1, #581
 1282              	.LVL117:
 1283 0036 FFF7FEFF 		bl	assert_failed
 1284              	.LVL118:
 1285              	.L133:
 582:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1286              		.loc 1 582 0 is_stmt 1
 1287 003a 012D     		cmp	r5, #1
 1288 003c 0FD9     		bls	.L134
 1289              		.loc 1 582 0 is_stmt 0 discriminator 1
 1290 003e 40F20000 		movw	r0, #:lower16:.LC0
 1291 0042 C0F20000 		movt	r0, #:upper16:.LC0
 1292 0046 40F24621 		movw	r1, #582
 1293 004a FFF7FEFF 		bl	assert_failed
 1294              	.LVL119:
 1295              	.L135:
 583:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 584:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 585:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Peripheral under reset */
 586:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_SWRST;
 1296              		.loc 1 586 0 is_stmt 1
 1297 004e 2388     		ldrh	r3, [r4]
 1298 0050 6FEA4343 		mvn	r3, r3, lsl #17
 1299 0054 6FEA5343 		mvn	r3, r3, lsr #17
 1300 0058 9BB2     		uxth	r3, r3
 1301 005a 2380     		strh	r3, [r4]	@ movhi
 1302 005c 38BD     		pop	{r3, r4, r5, pc}
 1303              	.LVL120:
 1304              	.L134:
 583:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 1305              		.loc 1 583 0
 1306 005e 002D     		cmp	r5, #0
 1307 0060 F5D1     		bne	.L135
 587:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 588:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 589:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 590:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Peripheral not under reset */
 591:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_SWRST);
 1308              		.loc 1 591 0
 1309 0062 2388     		ldrh	r3, [r4]
 1310 0064 C3F30E03 		ubfx	r3, r3, #0, #15
 1311 0068 2380     		strh	r3, [r4]	@ movhi
 1312 006a 38BD     		pop	{r3, r4, r5, pc}
 1313              		.cfi_endproc
 1314              	.LFE136:
 1316              		.section	.text.I2C_StretchClockCmd,"ax",%progbits
 1317              		.align	2
 1318              		.global	I2C_StretchClockCmd
 1319              		.thumb
 1320              		.thumb_func
 1322              	I2C_StretchClockCmd:
 1323              	.LFB137:
 592:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 593:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 594:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 595:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 596:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C Clock stretching.
 597:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 598:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2Cx Clock stretching.
 599:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 600:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 601:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 602:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_StretchClockCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 603:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1324              		.loc 1 603 0
 1325              		.cfi_startproc
 1326              		@ args = 0, pretend = 0, frame = 0
 1327              		@ frame_needed = 0, uses_anonymous_args = 0
 1328              	.LVL121:
 1329 0000 38B5     		push	{r3, r4, r5, lr}
 1330              	.LCFI15:
 1331              		.cfi_def_cfa_offset 16
 1332              		.cfi_offset 3, -16
 1333              		.cfi_offset 4, -12
 1334              		.cfi_offset 5, -8
 1335              		.cfi_offset 14, -4
 604:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 605:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 1336              		.loc 1 605 0
 1337 0002 4FF4A842 		mov	r2, #21504
 1338 0006 4FF4B043 		mov	r3, #22528
 1339 000a C4F20002 		movt	r2, 16384
 1340 000e C4F20003 		movt	r3, 16384
 1341 0012 9042     		cmp	r0, r2
 1342 0014 18BF     		it	ne
 1343 0016 9842     		cmpne	r0, r3
 603:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 1344              		.loc 1 603 0
 1345 0018 0446     		mov	r4, r0
 1346 001a 0D46     		mov	r5, r1
 1347              		.loc 1 605 0
 1348 001c 0DD0     		beq	.L142
 1349              		.loc 1 605 0 is_stmt 0 discriminator 1
 1350 001e 4FF4B843 		mov	r3, #23552
 1351 0022 C4F20003 		movt	r3, 16384
 1352 0026 9842     		cmp	r0, r3
 1353 0028 07D0     		beq	.L142
 1354 002a 40F20000 		movw	r0, #:lower16:.LC0
 1355              	.LVL122:
 1356 002e C0F20000 		movt	r0, #:upper16:.LC0
 1357 0032 40F25D21 		movw	r1, #605
 1358              	.LVL123:
 1359 0036 FFF7FEFF 		bl	assert_failed
 1360              	.LVL124:
 1361              	.L142:
 606:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1362              		.loc 1 606 0 is_stmt 1
 1363 003a 012D     		cmp	r5, #1
 1364 003c 0ED9     		bls	.L143
 1365              		.loc 1 606 0 is_stmt 0 discriminator 1
 1366 003e 40F20000 		movw	r0, #:lower16:.LC0
 1367 0042 C0F20000 		movt	r0, #:upper16:.LC0
 1368 0046 40F25E21 		movw	r1, #606
 1369 004a FFF7FEFF 		bl	assert_failed
 1370              	.LVL125:
 1371              	.L144:
 607:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState == DISABLE)
 608:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 609:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable the selected I2C Clock stretching */
 610:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_NOSTRETCH;
 611:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 612:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 613:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 614:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable the selected I2C Clock stretching */
 615:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_NOSTRETCH);
 1372              		.loc 1 615 0 is_stmt 1
 1373 004e 2388     		ldrh	r3, [r4]
 1374 0050 23F08003 		bic	r3, r3, #128
 1375 0054 1B04     		lsls	r3, r3, #16
 1376 0056 1B0C     		lsrs	r3, r3, #16
 1377 0058 2380     		strh	r3, [r4]	@ movhi
 1378 005a 38BD     		pop	{r3, r4, r5, pc}
 1379              	.LVL126:
 1380              	.L143:
 607:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState == DISABLE)
 1381              		.loc 1 607 0
 1382 005c 002D     		cmp	r5, #0
 1383 005e F6D1     		bne	.L144
 610:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 1384              		.loc 1 610 0
 1385 0060 2388     		ldrh	r3, [r4]
 1386 0062 9BB2     		uxth	r3, r3
 1387 0064 43F08003 		orr	r3, r3, #128
 1388 0068 2380     		strh	r3, [r4]	@ movhi
 1389 006a 38BD     		pop	{r3, r4, r5, pc}
 1390              		.cfi_endproc
 1391              	.LFE137:
 1393              		.section	.text.I2C_FastModeDutyCycleConfig,"ax",%progbits
 1394              		.align	2
 1395              		.global	I2C_FastModeDutyCycleConfig
 1396              		.thumb
 1397              		.thumb_func
 1399              	I2C_FastModeDutyCycleConfig:
 1400              	.LFB138:
 616:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 617:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 618:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 619:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 620:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Selects the specified I2C fast mode duty cycle.
 621:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 622:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_DutyCycle: specifies the fast mode duty cycle.
 623:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
 624:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_DutyCycle_2: I2C fast mode Tlow/Thigh = 2
 625:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_DutyCycle_16_9: I2C fast mode Tlow/Thigh = 16/9
 626:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 627:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 628:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_FastModeDutyCycleConfig(I2C_TypeDef* I2Cx, uint16_t I2C_DutyCycle)
 629:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1401              		.loc 1 629 0
 1402              		.cfi_startproc
 1403              		@ args = 0, pretend = 0, frame = 0
 1404              		@ frame_needed = 0, uses_anonymous_args = 0
 1405              	.LVL127:
 1406 0000 38B5     		push	{r3, r4, r5, lr}
 1407              	.LCFI16:
 1408              		.cfi_def_cfa_offset 16
 1409              		.cfi_offset 3, -16
 1410              		.cfi_offset 4, -12
 1411              		.cfi_offset 5, -8
 1412              		.cfi_offset 14, -4
 630:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 631:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 1413              		.loc 1 631 0
 1414 0002 4FF4A842 		mov	r2, #21504
 1415 0006 4FF4B043 		mov	r3, #22528
 1416 000a C4F20002 		movt	r2, 16384
 1417 000e C4F20003 		movt	r3, 16384
 1418 0012 9042     		cmp	r0, r2
 1419 0014 18BF     		it	ne
 1420 0016 9842     		cmpne	r0, r3
 629:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 1421              		.loc 1 629 0
 1422 0018 0446     		mov	r4, r0
 1423 001a 0D46     		mov	r5, r1
 1424              		.loc 1 631 0
 1425 001c 0DD0     		beq	.L150
 1426              		.loc 1 631 0 is_stmt 0 discriminator 1
 1427 001e 4FF4B843 		mov	r3, #23552
 1428 0022 C4F20003 		movt	r3, 16384
 1429 0026 9842     		cmp	r0, r3
 1430 0028 07D0     		beq	.L150
 1431 002a 40F20000 		movw	r0, #:lower16:.LC0
 1432              	.LVL128:
 1433 002e C0F20000 		movt	r0, #:upper16:.LC0
 1434 0032 40F27721 		movw	r1, #631
 1435              	.LVL129:
 1436 0036 FFF7FEFF 		bl	assert_failed
 1437              	.LVL130:
 1438              	.L150:
 632:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_DUTY_CYCLE(I2C_DutyCycle));
 1439              		.loc 1 632 0 is_stmt 1
 1440 003a B5F58042 		subs	r2, r5, #16384
 1441 003e 4BF6FF73 		movw	r3, #49151
 1442 0042 18BF     		it	ne
 1443 0044 0122     		movne	r2, #1
 1444 0046 9D42     		cmp	r5, r3
 1445 0048 18BF     		it	ne
 1446 004a B5F5804F 		cmpne	r5, #16384
 1447 004e 06D1     		bne	.L158
 633:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (I2C_DutyCycle != I2C_DutyCycle_16_9)
 1448              		.loc 1 633 0
 1449 0050 6AB9     		cbnz	r2, .L152
 634:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 635:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* I2C fast mode Tlow/Thigh=2 */
 636:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CCR &= I2C_DutyCycle_2;
 637:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 638:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 639:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 640:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* I2C fast mode Tlow/Thigh=16/9 */
 641:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CCR |= I2C_DutyCycle_16_9;
 1450              		.loc 1 641 0
 1451 0052 A38B     		ldrh	r3, [r4, #28]
 1452 0054 9BB2     		uxth	r3, r3
 1453 0056 43F48043 		orr	r3, r3, #16384
 1454 005a A383     		strh	r3, [r4, #28]	@ movhi
 1455 005c 38BD     		pop	{r3, r4, r5, pc}
 1456              	.LVL131:
 1457              	.L158:
 632:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (I2C_DutyCycle != I2C_DutyCycle_16_9)
 1458              		.loc 1 632 0 discriminator 1
 1459 005e 40F20000 		movw	r0, #:lower16:.LC0
 1460 0062 C0F20000 		movt	r0, #:upper16:.LC0
 1461 0066 4FF41E71 		mov	r1, #632
 1462 006a FFF7FEFF 		bl	assert_failed
 1463              	.LVL132:
 1464              	.L152:
 636:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 1465              		.loc 1 636 0
 1466 006e A38B     		ldrh	r3, [r4, #28]
 1467 0070 23F48043 		bic	r3, r3, #16384
 1468 0074 1B04     		lsls	r3, r3, #16
 1469 0076 1B0C     		lsrs	r3, r3, #16
 1470 0078 A383     		strh	r3, [r4, #28]	@ movhi
 1471 007a 38BD     		pop	{r3, r4, r5, pc}
 1472              		.cfi_endproc
 1473              	.LFE138:
 1475              		.section	.text.I2C_NACKPositionConfig,"ax",%progbits
 1476              		.align	2
 1477              		.global	I2C_NACKPositionConfig
 1478              		.thumb
 1479              		.thumb_func
 1481              	I2C_NACKPositionConfig:
 1482              	.LFB139:
 642:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 643:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 644:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 645:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 646:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Selects the specified I2C NACK position in master receiver mode.
 647:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   This function is useful in I2C Master Receiver mode when the number
 648:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         of data to be received is equal to 2. In this case, this function 
 649:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         should be called (with parameter I2C_NACKPosition_Next) before data 
 650:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         reception starts,as described in the 2-byte reception procedure 
 651:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         recommended in Reference Manual in Section: Master receiver.                
 652:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 653:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_NACKPosition: specifies the NACK position. 
 654:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
 655:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_NACKPosition_Next: indicates that the next byte will be the last
 656:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                                        received byte.  
 657:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_NACKPosition_Current: indicates that current byte is the last 
 658:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                                           received byte.
 659:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            
 660:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note    This function configures the same bit (POS) as I2C_PECPositionConfig() 
 661:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          but is intended to be used in I2C mode while I2C_PECPositionConfig() 
 662:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          is intended to used in SMBUS mode. 
 663:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            
 664:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 665:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 666:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_NACKPositionConfig(I2C_TypeDef* I2Cx, uint16_t I2C_NACKPosition)
 667:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1483              		.loc 1 667 0
 1484              		.cfi_startproc
 1485              		@ args = 0, pretend = 0, frame = 0
 1486              		@ frame_needed = 0, uses_anonymous_args = 0
 1487              	.LVL133:
 1488 0000 38B5     		push	{r3, r4, r5, lr}
 1489              	.LCFI17:
 1490              		.cfi_def_cfa_offset 16
 1491              		.cfi_offset 3, -16
 1492              		.cfi_offset 4, -12
 1493              		.cfi_offset 5, -8
 1494              		.cfi_offset 14, -4
 668:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 669:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 1495              		.loc 1 669 0
 1496 0002 4FF4A842 		mov	r2, #21504
 1497 0006 4FF4B043 		mov	r3, #22528
 1498 000a C4F20002 		movt	r2, 16384
 1499 000e C4F20003 		movt	r3, 16384
 1500 0012 9042     		cmp	r0, r2
 1501 0014 18BF     		it	ne
 1502 0016 9842     		cmpne	r0, r3
 667:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 1503              		.loc 1 667 0
 1504 0018 0446     		mov	r4, r0
 1505 001a 0D46     		mov	r5, r1
 1506              		.loc 1 669 0
 1507 001c 0DD0     		beq	.L160
 1508              		.loc 1 669 0 is_stmt 0 discriminator 1
 1509 001e 4FF4B843 		mov	r3, #23552
 1510 0022 C4F20003 		movt	r3, 16384
 1511 0026 9842     		cmp	r0, r3
 1512 0028 07D0     		beq	.L160
 1513 002a 40F20000 		movw	r0, #:lower16:.LC0
 1514              	.LVL134:
 1515 002e C0F20000 		movt	r0, #:upper16:.LC0
 1516 0032 40F29D21 		movw	r1, #669
 1517              	.LVL135:
 1518 0036 FFF7FEFF 		bl	assert_failed
 1519              	.LVL136:
 1520              	.L160:
 670:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_NACK_POSITION(I2C_NACKPosition));
 1521              		.loc 1 670 0 is_stmt 1
 1522 003a 4FF2FF73 		movw	r3, #63487
 1523 003e 9D42     		cmp	r5, r3
 1524 0040 18BF     		it	ne
 1525 0042 B5F5006F 		cmpne	r5, #2048
 1526 0046 09D1     		bne	.L167
 671:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
 672:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the input parameter */
 673:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (I2C_NACKPosition == I2C_NACKPosition_Next)
 1527              		.loc 1 673 0
 1528 0048 B5F5006F 		cmp	r5, #2048
 1529 004c 0FD0     		beq	.L168
 1530              	.L162:
 674:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 675:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Next byte in shift register is the last received byte */
 676:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_NACKPosition_Next;
 677:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 678:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 679:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 680:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Current byte in shift register is the last received byte */
 681:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= I2C_NACKPosition_Current;
 1531              		.loc 1 681 0
 1532 004e 2388     		ldrh	r3, [r4]
 1533 0050 23F40063 		bic	r3, r3, #2048
 1534 0054 1B04     		lsls	r3, r3, #16
 1535 0056 1B0C     		lsrs	r3, r3, #16
 1536 0058 2380     		strh	r3, [r4]	@ movhi
 1537 005a 38BD     		pop	{r3, r4, r5, pc}
 1538              	.LVL137:
 1539              	.L167:
 670:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
 1540              		.loc 1 670 0 discriminator 1
 1541 005c 40F20000 		movw	r0, #:lower16:.LC0
 1542 0060 C0F20000 		movt	r0, #:upper16:.LC0
 1543 0064 40F29E21 		movw	r1, #670
 1544 0068 FFF7FEFF 		bl	assert_failed
 1545              	.LVL138:
 1546 006c EFE7     		b	.L162
 1547              	.L168:
 676:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 1548              		.loc 1 676 0
 1549 006e 2388     		ldrh	r3, [r4]
 1550 0070 9BB2     		uxth	r3, r3
 1551 0072 43F40063 		orr	r3, r3, #2048
 1552 0076 2380     		strh	r3, [r4]	@ movhi
 1553 0078 38BD     		pop	{r3, r4, r5, pc}
 1554              		.cfi_endproc
 1555              	.LFE139:
 1557 007a 00BF     		.section	.text.I2C_SMBusAlertConfig,"ax",%progbits
 1558              		.align	2
 1559              		.global	I2C_SMBusAlertConfig
 1560              		.thumb
 1561              		.thumb_func
 1563              	I2C_SMBusAlertConfig:
 1564              	.LFB140:
 682:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 683:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 684:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 685:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 686:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Drives the SMBusAlert pin high or low for the specified I2C.
 687:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 688:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_SMBusAlert: specifies SMBAlert pin level. 
 689:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
 690:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_SMBusAlert_Low: SMBAlert pin driven low
 691:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_SMBusAlert_High: SMBAlert pin driven high
 692:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 693:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 694:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_SMBusAlertConfig(I2C_TypeDef* I2Cx, uint16_t I2C_SMBusAlert)
 695:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1565              		.loc 1 695 0
 1566              		.cfi_startproc
 1567              		@ args = 0, pretend = 0, frame = 0
 1568              		@ frame_needed = 0, uses_anonymous_args = 0
 1569              	.LVL139:
 1570 0000 38B5     		push	{r3, r4, r5, lr}
 1571              	.LCFI18:
 1572              		.cfi_def_cfa_offset 16
 1573              		.cfi_offset 3, -16
 1574              		.cfi_offset 4, -12
 1575              		.cfi_offset 5, -8
 1576              		.cfi_offset 14, -4
 696:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 697:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 1577              		.loc 1 697 0
 1578 0002 4FF4A842 		mov	r2, #21504
 1579 0006 4FF4B043 		mov	r3, #22528
 1580 000a C4F20002 		movt	r2, 16384
 1581 000e C4F20003 		movt	r3, 16384
 1582 0012 9042     		cmp	r0, r2
 1583 0014 18BF     		it	ne
 1584 0016 9842     		cmpne	r0, r3
 695:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 1585              		.loc 1 695 0
 1586 0018 0446     		mov	r4, r0
 1587 001a 0D46     		mov	r5, r1
 1588              		.loc 1 697 0
 1589 001c 0DD0     		beq	.L170
 1590              		.loc 1 697 0 is_stmt 0 discriminator 1
 1591 001e 4FF4B843 		mov	r3, #23552
 1592 0022 C4F20003 		movt	r3, 16384
 1593 0026 9842     		cmp	r0, r3
 1594 0028 07D0     		beq	.L170
 1595 002a 40F20000 		movw	r0, #:lower16:.LC0
 1596              	.LVL140:
 1597 002e C0F20000 		movt	r0, #:upper16:.LC0
 1598 0032 40F2B921 		movw	r1, #697
 1599              	.LVL141:
 1600 0036 FFF7FEFF 		bl	assert_failed
 1601              	.LVL142:
 1602              	.L170:
 698:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_SMBUS_ALERT(I2C_SMBusAlert));
 1603              		.loc 1 698 0 is_stmt 1
 1604 003a 4DF6FF73 		movw	r3, #57343
 1605 003e 9D42     		cmp	r5, r3
 1606 0040 18BF     		it	ne
 1607 0042 B5F5005F 		cmpne	r5, #8192
 1608 0046 09D1     		bne	.L177
 699:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (I2C_SMBusAlert == I2C_SMBusAlert_Low)
 1609              		.loc 1 699 0
 1610 0048 B5F5005F 		cmp	r5, #8192
 1611 004c 0FD0     		beq	.L178
 1612              	.L172:
 700:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 701:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Drive the SMBusAlert pin Low */
 702:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_SMBusAlert_Low;
 703:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 704:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 705:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 706:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Drive the SMBusAlert pin High  */
 707:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= I2C_SMBusAlert_High;
 1613              		.loc 1 707 0
 1614 004e 2388     		ldrh	r3, [r4]
 1615 0050 23F40053 		bic	r3, r3, #8192
 1616 0054 1B04     		lsls	r3, r3, #16
 1617 0056 1B0C     		lsrs	r3, r3, #16
 1618 0058 2380     		strh	r3, [r4]	@ movhi
 1619 005a 38BD     		pop	{r3, r4, r5, pc}
 1620              	.LVL143:
 1621              	.L177:
 698:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (I2C_SMBusAlert == I2C_SMBusAlert_Low)
 1622              		.loc 1 698 0 discriminator 1
 1623 005c 40F20000 		movw	r0, #:lower16:.LC0
 1624 0060 C0F20000 		movt	r0, #:upper16:.LC0
 1625 0064 40F2BA21 		movw	r1, #698
 1626 0068 FFF7FEFF 		bl	assert_failed
 1627              	.LVL144:
 1628 006c EFE7     		b	.L172
 1629              	.L178:
 702:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 1630              		.loc 1 702 0
 1631 006e 2388     		ldrh	r3, [r4]
 1632 0070 9BB2     		uxth	r3, r3
 1633 0072 43F40053 		orr	r3, r3, #8192
 1634 0076 2380     		strh	r3, [r4]	@ movhi
 1635 0078 38BD     		pop	{r3, r4, r5, pc}
 1636              		.cfi_endproc
 1637              	.LFE140:
 1639 007a 00BF     		.section	.text.I2C_ARPCmd,"ax",%progbits
 1640              		.align	2
 1641              		.global	I2C_ARPCmd
 1642              		.thumb
 1643              		.thumb_func
 1645              	I2C_ARPCmd:
 1646              	.LFB141:
 708:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 709:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 710:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 711:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 712:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C ARP.
 713:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 714:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2Cx ARP. 
 715:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 716:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 717:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 718:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_ARPCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 719:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1647              		.loc 1 719 0
 1648              		.cfi_startproc
 1649              		@ args = 0, pretend = 0, frame = 0
 1650              		@ frame_needed = 0, uses_anonymous_args = 0
 1651              	.LVL145:
 1652 0000 38B5     		push	{r3, r4, r5, lr}
 1653              	.LCFI19:
 1654              		.cfi_def_cfa_offset 16
 1655              		.cfi_offset 3, -16
 1656              		.cfi_offset 4, -12
 1657              		.cfi_offset 5, -8
 1658              		.cfi_offset 14, -4
 720:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 721:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 1659              		.loc 1 721 0
 1660 0002 4FF4A842 		mov	r2, #21504
 1661 0006 4FF4B043 		mov	r3, #22528
 1662 000a C4F20002 		movt	r2, 16384
 1663 000e C4F20003 		movt	r3, 16384
 1664 0012 9042     		cmp	r0, r2
 1665 0014 18BF     		it	ne
 1666 0016 9842     		cmpne	r0, r3
 719:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 1667              		.loc 1 719 0
 1668 0018 0446     		mov	r4, r0
 1669 001a 0D46     		mov	r5, r1
 1670              		.loc 1 721 0
 1671 001c 0DD0     		beq	.L180
 1672              		.loc 1 721 0 is_stmt 0 discriminator 1
 1673 001e 4FF4B843 		mov	r3, #23552
 1674 0022 C4F20003 		movt	r3, 16384
 1675 0026 9842     		cmp	r0, r3
 1676 0028 07D0     		beq	.L180
 1677 002a 40F20000 		movw	r0, #:lower16:.LC0
 1678              	.LVL146:
 1679 002e C0F20000 		movt	r0, #:upper16:.LC0
 1680 0032 40F2D121 		movw	r1, #721
 1681              	.LVL147:
 1682 0036 FFF7FEFF 		bl	assert_failed
 1683              	.LVL148:
 1684              	.L180:
 722:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1685              		.loc 1 722 0 is_stmt 1
 1686 003a 012D     		cmp	r5, #1
 1687 003c 0DD9     		bls	.L181
 1688              		.loc 1 722 0 is_stmt 0 discriminator 1
 1689 003e 40F20000 		movw	r0, #:lower16:.LC0
 1690 0042 C0F20000 		movt	r0, #:upper16:.LC0
 1691 0046 40F2D221 		movw	r1, #722
 1692 004a FFF7FEFF 		bl	assert_failed
 1693              	.LVL149:
 1694              	.L182:
 723:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 724:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 725:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable the selected I2C ARP */
 726:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_ENARP;
 1695              		.loc 1 726 0 is_stmt 1
 1696 004e 2388     		ldrh	r3, [r4]
 1697 0050 9BB2     		uxth	r3, r3
 1698 0052 43F01003 		orr	r3, r3, #16
 1699 0056 2380     		strh	r3, [r4]	@ movhi
 1700 0058 38BD     		pop	{r3, r4, r5, pc}
 1701              	.LVL150:
 1702              	.L181:
 723:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 1703              		.loc 1 723 0
 1704 005a 002D     		cmp	r5, #0
 1705 005c F7D1     		bne	.L182
 727:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 728:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 729:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 730:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable the selected I2C ARP */
 731:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_ENARP);
 1706              		.loc 1 731 0
 1707 005e 2388     		ldrh	r3, [r4]
 1708 0060 23F01003 		bic	r3, r3, #16
 1709 0064 1B04     		lsls	r3, r3, #16
 1710 0066 1B0C     		lsrs	r3, r3, #16
 1711 0068 2380     		strh	r3, [r4]	@ movhi
 1712 006a 38BD     		pop	{r3, r4, r5, pc}
 1713              		.cfi_endproc
 1714              	.LFE141:
 1716              		.section	.text.I2C_SendData,"ax",%progbits
 1717              		.align	2
 1718              		.global	I2C_SendData
 1719              		.thumb
 1720              		.thumb_func
 1722              	I2C_SendData:
 1723              	.LFB142:
 732:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 733:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 734:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 735:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @}
 736:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 737:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 738:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /** @defgroup I2C_Group2 Data transfers functions
 739:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  *  @brief   Data transfers functions 
 740:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  *
 741:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** @verbatim   
 742:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================
 743:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                   ##### Data transfers functions #####
 744:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================  
 745:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 746:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** @endverbatim
 747:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @{
 748:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 749:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 750:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 751:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Sends a data byte through the I2Cx peripheral.
 752:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 753:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  Data: Byte to be transmitted..
 754:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 755:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 756:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_SendData(I2C_TypeDef* I2Cx, uint8_t Data)
 757:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1724              		.loc 1 757 0
 1725              		.cfi_startproc
 1726              		@ args = 0, pretend = 0, frame = 0
 1727              		@ frame_needed = 0, uses_anonymous_args = 0
 1728              	.LVL151:
 1729 0000 38B5     		push	{r3, r4, r5, lr}
 1730              	.LCFI20:
 1731              		.cfi_def_cfa_offset 16
 1732              		.cfi_offset 3, -16
 1733              		.cfi_offset 4, -12
 1734              		.cfi_offset 5, -8
 1735              		.cfi_offset 14, -4
 758:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 759:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 1736              		.loc 1 759 0
 1737 0002 4FF4A842 		mov	r2, #21504
 1738 0006 4FF4B043 		mov	r3, #22528
 1739 000a C4F20002 		movt	r2, 16384
 1740 000e C4F20003 		movt	r3, 16384
 1741 0012 9042     		cmp	r0, r2
 1742 0014 18BF     		it	ne
 1743 0016 9842     		cmpne	r0, r3
 757:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 1744              		.loc 1 757 0
 1745 0018 0446     		mov	r4, r0
 1746 001a 0D46     		mov	r5, r1
 1747              		.loc 1 759 0
 1748 001c 0DD0     		beq	.L189
 1749              		.loc 1 759 0 is_stmt 0 discriminator 1
 1750 001e 4FF4B843 		mov	r3, #23552
 1751 0022 C4F20003 		movt	r3, 16384
 1752 0026 9842     		cmp	r0, r3
 1753 0028 07D0     		beq	.L189
 1754 002a 40F20000 		movw	r0, #:lower16:.LC0
 1755              	.LVL152:
 1756 002e C0F20000 		movt	r0, #:upper16:.LC0
 1757 0032 40F2F721 		movw	r1, #759
 1758              	.LVL153:
 1759 0036 FFF7FEFF 		bl	assert_failed
 1760              	.LVL154:
 1761              	.L189:
 760:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Write in the DR register the data to be sent */
 761:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->DR = Data;
 1762              		.loc 1 761 0 is_stmt 1
 1763 003a 2582     		strh	r5, [r4, #16]	@ movhi
 1764 003c 38BD     		pop	{r3, r4, r5, pc}
 1765              		.cfi_endproc
 1766              	.LFE142:
 1768 003e 00BF     		.section	.text.I2C_ReceiveData,"ax",%progbits
 1769              		.align	2
 1770              		.global	I2C_ReceiveData
 1771              		.thumb
 1772              		.thumb_func
 1774              	I2C_ReceiveData:
 1775              	.LFB143:
 762:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 763:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 764:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 765:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Returns the most recent received data by the I2Cx peripheral.
 766:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 767:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval The value of the received data.
 768:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 769:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** uint8_t I2C_ReceiveData(I2C_TypeDef* I2Cx)
 770:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1776              		.loc 1 770 0
 1777              		.cfi_startproc
 1778              		@ args = 0, pretend = 0, frame = 0
 1779              		@ frame_needed = 0, uses_anonymous_args = 0
 1780              	.LVL155:
 771:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 772:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 1781              		.loc 1 772 0
 1782 0000 4FF4A842 		mov	r2, #21504
 1783 0004 4FF4B043 		mov	r3, #22528
 1784 0008 C4F20002 		movt	r2, 16384
 1785 000c C4F20003 		movt	r3, 16384
 1786 0010 9042     		cmp	r0, r2
 1787 0012 18BF     		it	ne
 1788 0014 9842     		cmpne	r0, r3
 770:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 1789              		.loc 1 770 0
 1790 0016 10B5     		push	{r4, lr}
 1791              	.LCFI21:
 1792              		.cfi_def_cfa_offset 8
 1793              		.cfi_offset 4, -8
 1794              		.cfi_offset 14, -4
 770:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 1795              		.loc 1 770 0
 1796 0018 0446     		mov	r4, r0
 1797              		.loc 1 772 0
 1798 001a 0DD0     		beq	.L194
 1799              		.loc 1 772 0 is_stmt 0 discriminator 1
 1800 001c 4FF4B843 		mov	r3, #23552
 1801 0020 C4F20003 		movt	r3, 16384
 1802 0024 9842     		cmp	r0, r3
 1803 0026 07D0     		beq	.L194
 1804 0028 40F20000 		movw	r0, #:lower16:.LC0
 1805              	.LVL156:
 1806 002c C0F20000 		movt	r0, #:upper16:.LC0
 1807 0030 4FF44171 		mov	r1, #772
 1808 0034 FFF7FEFF 		bl	assert_failed
 1809              	.LVL157:
 1810              	.L194:
 773:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Return the data in the DR register */
 774:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   return (uint8_t)I2Cx->DR;
 1811              		.loc 1 774 0 is_stmt 1
 1812 0038 208A     		ldrh	r0, [r4, #16]
 775:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1813              		.loc 1 775 0
 1814 003a C0B2     		uxtb	r0, r0
 1815 003c 10BD     		pop	{r4, pc}
 1816              		.cfi_endproc
 1817              	.LFE143:
 1819 003e 00BF     		.section	.text.I2C_TransmitPEC,"ax",%progbits
 1820              		.align	2
 1821              		.global	I2C_TransmitPEC
 1822              		.thumb
 1823              		.thumb_func
 1825              	I2C_TransmitPEC:
 1826              	.LFB144:
 776:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 777:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 778:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @}
 779:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 780:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 781:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /** @defgroup I2C_Group3 PEC management functions
 782:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  *  @brief   PEC management functions 
 783:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  *
 784:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** @verbatim   
 785:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================
 786:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                   ##### PEC management functions #####
 787:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================  
 788:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 789:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** @endverbatim
 790:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @{
 791:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 792:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 793:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 794:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C PEC transfer.
 795:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 796:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C PEC transmission.
 797:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 798:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 799:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 800:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_TransmitPEC(I2C_TypeDef* I2Cx, FunctionalState NewState)
 801:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1827              		.loc 1 801 0
 1828              		.cfi_startproc
 1829              		@ args = 0, pretend = 0, frame = 0
 1830              		@ frame_needed = 0, uses_anonymous_args = 0
 1831              	.LVL158:
 1832 0000 38B5     		push	{r3, r4, r5, lr}
 1833              	.LCFI22:
 1834              		.cfi_def_cfa_offset 16
 1835              		.cfi_offset 3, -16
 1836              		.cfi_offset 4, -12
 1837              		.cfi_offset 5, -8
 1838              		.cfi_offset 14, -4
 802:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 803:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 1839              		.loc 1 803 0
 1840 0002 4FF4A842 		mov	r2, #21504
 1841 0006 4FF4B043 		mov	r3, #22528
 1842 000a C4F20002 		movt	r2, 16384
 1843 000e C4F20003 		movt	r3, 16384
 1844 0012 9042     		cmp	r0, r2
 1845 0014 18BF     		it	ne
 1846 0016 9842     		cmpne	r0, r3
 801:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 1847              		.loc 1 801 0
 1848 0018 0446     		mov	r4, r0
 1849 001a 0D46     		mov	r5, r1
 1850              		.loc 1 803 0
 1851 001c 0DD0     		beq	.L199
 1852              		.loc 1 803 0 is_stmt 0 discriminator 1
 1853 001e 4FF4B843 		mov	r3, #23552
 1854 0022 C4F20003 		movt	r3, 16384
 1855 0026 9842     		cmp	r0, r3
 1856 0028 07D0     		beq	.L199
 1857 002a 40F20000 		movw	r0, #:lower16:.LC0
 1858              	.LVL159:
 1859 002e C0F20000 		movt	r0, #:upper16:.LC0
 1860 0032 40F22331 		movw	r1, #803
 1861              	.LVL160:
 1862 0036 FFF7FEFF 		bl	assert_failed
 1863              	.LVL161:
 1864              	.L199:
 804:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1865              		.loc 1 804 0 is_stmt 1
 1866 003a 012D     		cmp	r5, #1
 1867 003c 0DD9     		bls	.L200
 1868              		.loc 1 804 0 is_stmt 0 discriminator 1
 1869 003e 40F20000 		movw	r0, #:lower16:.LC0
 1870 0042 C0F20000 		movt	r0, #:upper16:.LC0
 1871 0046 4FF44971 		mov	r1, #804
 1872 004a FFF7FEFF 		bl	assert_failed
 1873              	.LVL162:
 1874              	.L201:
 805:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 806:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 807:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable the selected I2C PEC transmission */
 808:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_PEC;
 1875              		.loc 1 808 0 is_stmt 1
 1876 004e 2388     		ldrh	r3, [r4]
 1877 0050 9BB2     		uxth	r3, r3
 1878 0052 43F48053 		orr	r3, r3, #4096
 1879 0056 2380     		strh	r3, [r4]	@ movhi
 1880 0058 38BD     		pop	{r3, r4, r5, pc}
 1881              	.LVL163:
 1882              	.L200:
 805:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 1883              		.loc 1 805 0
 1884 005a 002D     		cmp	r5, #0
 1885 005c F7D1     		bne	.L201
 809:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 810:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 811:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 812:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable the selected I2C PEC transmission */
 813:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_PEC);
 1886              		.loc 1 813 0
 1887 005e 2388     		ldrh	r3, [r4]
 1888 0060 23F48053 		bic	r3, r3, #4096
 1889 0064 1B04     		lsls	r3, r3, #16
 1890 0066 1B0C     		lsrs	r3, r3, #16
 1891 0068 2380     		strh	r3, [r4]	@ movhi
 1892 006a 38BD     		pop	{r3, r4, r5, pc}
 1893              		.cfi_endproc
 1894              	.LFE144:
 1896              		.section	.text.I2C_PECPositionConfig,"ax",%progbits
 1897              		.align	2
 1898              		.global	I2C_PECPositionConfig
 1899              		.thumb
 1900              		.thumb_func
 1902              	I2C_PECPositionConfig:
 1903              	.LFB145:
 814:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 815:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 816:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 817:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 818:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Selects the specified I2C PEC position.
 819:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 820:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_PECPosition: specifies the PEC position. 
 821:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
 822:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_PECPosition_Next: indicates that the next byte is PEC
 823:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_PECPosition_Current: indicates that current byte is PEC
 824:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *       
 825:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note    This function configures the same bit (POS) as I2C_NACKPositionConfig()
 826:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          but is intended to be used in SMBUS mode while I2C_NACKPositionConfig() 
 827:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          is intended to used in I2C mode.
 828:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                
 829:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 830:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 831:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_PECPositionConfig(I2C_TypeDef* I2Cx, uint16_t I2C_PECPosition)
 832:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1904              		.loc 1 832 0
 1905              		.cfi_startproc
 1906              		@ args = 0, pretend = 0, frame = 0
 1907              		@ frame_needed = 0, uses_anonymous_args = 0
 1908              	.LVL164:
 1909 0000 38B5     		push	{r3, r4, r5, lr}
 1910              	.LCFI23:
 1911              		.cfi_def_cfa_offset 16
 1912              		.cfi_offset 3, -16
 1913              		.cfi_offset 4, -12
 1914              		.cfi_offset 5, -8
 1915              		.cfi_offset 14, -4
 833:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 834:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 1916              		.loc 1 834 0
 1917 0002 4FF4A842 		mov	r2, #21504
 1918 0006 4FF4B043 		mov	r3, #22528
 1919 000a C4F20002 		movt	r2, 16384
 1920 000e C4F20003 		movt	r3, 16384
 1921 0012 9042     		cmp	r0, r2
 1922 0014 18BF     		it	ne
 1923 0016 9842     		cmpne	r0, r3
 832:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 1924              		.loc 1 832 0
 1925 0018 0446     		mov	r4, r0
 1926 001a 0D46     		mov	r5, r1
 1927              		.loc 1 834 0
 1928 001c 0DD0     		beq	.L208
 1929              		.loc 1 834 0 is_stmt 0 discriminator 1
 1930 001e 4FF4B843 		mov	r3, #23552
 1931 0022 C4F20003 		movt	r3, 16384
 1932 0026 9842     		cmp	r0, r3
 1933 0028 07D0     		beq	.L208
 1934 002a 40F20000 		movw	r0, #:lower16:.LC0
 1935              	.LVL165:
 1936 002e C0F20000 		movt	r0, #:upper16:.LC0
 1937 0032 40F24231 		movw	r1, #834
 1938              	.LVL166:
 1939 0036 FFF7FEFF 		bl	assert_failed
 1940              	.LVL167:
 1941              	.L208:
 835:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_PEC_POSITION(I2C_PECPosition));
 1942              		.loc 1 835 0 is_stmt 1
 1943 003a 4FF2FF73 		movw	r3, #63487
 1944 003e 9D42     		cmp	r5, r3
 1945 0040 18BF     		it	ne
 1946 0042 B5F5006F 		cmpne	r5, #2048
 1947 0046 09D1     		bne	.L215
 836:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (I2C_PECPosition == I2C_PECPosition_Next)
 1948              		.loc 1 836 0
 1949 0048 B5F5006F 		cmp	r5, #2048
 1950 004c 0FD0     		beq	.L216
 1951              	.L210:
 837:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 838:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Next byte in shift register is PEC */
 839:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_PECPosition_Next;
 840:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 841:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 842:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 843:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Current byte in shift register is PEC */
 844:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= I2C_PECPosition_Current;
 1952              		.loc 1 844 0
 1953 004e 2388     		ldrh	r3, [r4]
 1954 0050 23F40063 		bic	r3, r3, #2048
 1955 0054 1B04     		lsls	r3, r3, #16
 1956 0056 1B0C     		lsrs	r3, r3, #16
 1957 0058 2380     		strh	r3, [r4]	@ movhi
 1958 005a 38BD     		pop	{r3, r4, r5, pc}
 1959              	.LVL168:
 1960              	.L215:
 835:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (I2C_PECPosition == I2C_PECPosition_Next)
 1961              		.loc 1 835 0 discriminator 1
 1962 005c 40F20000 		movw	r0, #:lower16:.LC0
 1963 0060 C0F20000 		movt	r0, #:upper16:.LC0
 1964 0064 40F24331 		movw	r1, #835
 1965 0068 FFF7FEFF 		bl	assert_failed
 1966              	.LVL169:
 1967 006c EFE7     		b	.L210
 1968              	.L216:
 839:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 1969              		.loc 1 839 0
 1970 006e 2388     		ldrh	r3, [r4]
 1971 0070 9BB2     		uxth	r3, r3
 1972 0072 43F40063 		orr	r3, r3, #2048
 1973 0076 2380     		strh	r3, [r4]	@ movhi
 1974 0078 38BD     		pop	{r3, r4, r5, pc}
 1975              		.cfi_endproc
 1976              	.LFE145:
 1978 007a 00BF     		.section	.text.I2C_CalculatePEC,"ax",%progbits
 1979              		.align	2
 1980              		.global	I2C_CalculatePEC
 1981              		.thumb
 1982              		.thumb_func
 1984              	I2C_CalculatePEC:
 1985              	.LFB146:
 845:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 846:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 847:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 848:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 849:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the PEC value calculation of the transferred bytes.
 850:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 851:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2Cx PEC value calculation.
 852:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 853:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 854:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 855:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_CalculatePEC(I2C_TypeDef* I2Cx, FunctionalState NewState)
 856:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1986              		.loc 1 856 0
 1987              		.cfi_startproc
 1988              		@ args = 0, pretend = 0, frame = 0
 1989              		@ frame_needed = 0, uses_anonymous_args = 0
 1990              	.LVL170:
 1991 0000 38B5     		push	{r3, r4, r5, lr}
 1992              	.LCFI24:
 1993              		.cfi_def_cfa_offset 16
 1994              		.cfi_offset 3, -16
 1995              		.cfi_offset 4, -12
 1996              		.cfi_offset 5, -8
 1997              		.cfi_offset 14, -4
 857:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 858:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 1998              		.loc 1 858 0
 1999 0002 4FF4A842 		mov	r2, #21504
 2000 0006 4FF4B043 		mov	r3, #22528
 2001 000a C4F20002 		movt	r2, 16384
 2002 000e C4F20003 		movt	r3, 16384
 2003 0012 9042     		cmp	r0, r2
 2004 0014 18BF     		it	ne
 2005 0016 9842     		cmpne	r0, r3
 856:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 2006              		.loc 1 856 0
 2007 0018 0446     		mov	r4, r0
 2008 001a 0D46     		mov	r5, r1
 2009              		.loc 1 858 0
 2010 001c 0DD0     		beq	.L218
 2011              		.loc 1 858 0 is_stmt 0 discriminator 1
 2012 001e 4FF4B843 		mov	r3, #23552
 2013 0022 C4F20003 		movt	r3, 16384
 2014 0026 9842     		cmp	r0, r3
 2015 0028 07D0     		beq	.L218
 2016 002a 40F20000 		movw	r0, #:lower16:.LC0
 2017              	.LVL171:
 2018 002e C0F20000 		movt	r0, #:upper16:.LC0
 2019 0032 40F25A31 		movw	r1, #858
 2020              	.LVL172:
 2021 0036 FFF7FEFF 		bl	assert_failed
 2022              	.LVL173:
 2023              	.L218:
 859:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2024              		.loc 1 859 0 is_stmt 1
 2025 003a 012D     		cmp	r5, #1
 2026 003c 0DD9     		bls	.L219
 2027              		.loc 1 859 0 is_stmt 0 discriminator 1
 2028 003e 40F20000 		movw	r0, #:lower16:.LC0
 2029 0042 C0F20000 		movt	r0, #:upper16:.LC0
 2030 0046 40F25B31 		movw	r1, #859
 2031 004a FFF7FEFF 		bl	assert_failed
 2032              	.LVL174:
 2033              	.L220:
 860:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 861:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 862:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable the selected I2C PEC calculation */
 863:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_ENPEC;
 2034              		.loc 1 863 0 is_stmt 1
 2035 004e 2388     		ldrh	r3, [r4]
 2036 0050 9BB2     		uxth	r3, r3
 2037 0052 43F02003 		orr	r3, r3, #32
 2038 0056 2380     		strh	r3, [r4]	@ movhi
 2039 0058 38BD     		pop	{r3, r4, r5, pc}
 2040              	.LVL175:
 2041              	.L219:
 860:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 2042              		.loc 1 860 0
 2043 005a 002D     		cmp	r5, #0
 2044 005c F7D1     		bne	.L220
 864:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 865:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 866:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 867:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable the selected I2C PEC calculation */
 868:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_ENPEC);
 2045              		.loc 1 868 0
 2046 005e 2388     		ldrh	r3, [r4]
 2047 0060 23F02003 		bic	r3, r3, #32
 2048 0064 1B04     		lsls	r3, r3, #16
 2049 0066 1B0C     		lsrs	r3, r3, #16
 2050 0068 2380     		strh	r3, [r4]	@ movhi
 2051 006a 38BD     		pop	{r3, r4, r5, pc}
 2052              		.cfi_endproc
 2053              	.LFE146:
 2055              		.section	.text.I2C_GetPEC,"ax",%progbits
 2056              		.align	2
 2057              		.global	I2C_GetPEC
 2058              		.thumb
 2059              		.thumb_func
 2061              	I2C_GetPEC:
 2062              	.LFB147:
 869:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 870:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 871:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 872:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 873:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Returns the PEC value for the specified I2C.
 874:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 875:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval The PEC value.
 876:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 877:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** uint8_t I2C_GetPEC(I2C_TypeDef* I2Cx)
 878:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 2063              		.loc 1 878 0
 2064              		.cfi_startproc
 2065              		@ args = 0, pretend = 0, frame = 0
 2066              		@ frame_needed = 0, uses_anonymous_args = 0
 2067              	.LVL176:
 879:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 880:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 2068              		.loc 1 880 0
 2069 0000 4FF4A842 		mov	r2, #21504
 2070 0004 4FF4B043 		mov	r3, #22528
 2071 0008 C4F20002 		movt	r2, 16384
 2072 000c C4F20003 		movt	r3, 16384
 2073 0010 9042     		cmp	r0, r2
 2074 0012 18BF     		it	ne
 2075 0014 9842     		cmpne	r0, r3
 878:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 2076              		.loc 1 878 0
 2077 0016 10B5     		push	{r4, lr}
 2078              	.LCFI25:
 2079              		.cfi_def_cfa_offset 8
 2080              		.cfi_offset 4, -8
 2081              		.cfi_offset 14, -4
 878:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 2082              		.loc 1 878 0
 2083 0018 0446     		mov	r4, r0
 2084              		.loc 1 880 0
 2085 001a 0DD0     		beq	.L227
 2086              		.loc 1 880 0 is_stmt 0 discriminator 1
 2087 001c 4FF4B843 		mov	r3, #23552
 2088 0020 C4F20003 		movt	r3, 16384
 2089 0024 9842     		cmp	r0, r3
 2090 0026 07D0     		beq	.L227
 2091 0028 40F20000 		movw	r0, #:lower16:.LC0
 2092              	.LVL177:
 2093 002c C0F20000 		movt	r0, #:upper16:.LC0
 2094 0030 4FF45C71 		mov	r1, #880
 2095 0034 FFF7FEFF 		bl	assert_failed
 2096              	.LVL178:
 2097              	.L227:
 881:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Return the selected I2C PEC value */
 882:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   return ((I2Cx->SR2) >> 8);
 2098              		.loc 1 882 0 is_stmt 1
 2099 0038 208B     		ldrh	r0, [r4, #24]
 883:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 2100              		.loc 1 883 0
 2101 003a C0F30720 		ubfx	r0, r0, #8, #8
 2102 003e 10BD     		pop	{r4, pc}
 2103              		.cfi_endproc
 2104              	.LFE147:
 2106              		.section	.text.I2C_DMACmd,"ax",%progbits
 2107              		.align	2
 2108              		.global	I2C_DMACmd
 2109              		.thumb
 2110              		.thumb_func
 2112              	I2C_DMACmd:
 2113              	.LFB148:
 884:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 885:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 886:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @}
 887:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 888:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 889:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /** @defgroup I2C_Group4 DMA transfers management functions
 890:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  *  @brief   DMA transfers management functions 
 891:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  *
 892:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** @verbatim   
 893:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================
 894:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                 ##### DMA transfers management functions #####
 895:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================  
 896:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   This section provides functions allowing to configure the I2C DMA channels 
 897:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   requests.
 898:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
 899:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** @endverbatim
 900:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @{
 901:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 902:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 903:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 904:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C DMA requests.
 905:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 906:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C DMA transfer.
 907:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 908:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 909:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 910:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_DMACmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 911:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 2114              		.loc 1 911 0
 2115              		.cfi_startproc
 2116              		@ args = 0, pretend = 0, frame = 0
 2117              		@ frame_needed = 0, uses_anonymous_args = 0
 2118              	.LVL179:
 2119 0000 38B5     		push	{r3, r4, r5, lr}
 2120              	.LCFI26:
 2121              		.cfi_def_cfa_offset 16
 2122              		.cfi_offset 3, -16
 2123              		.cfi_offset 4, -12
 2124              		.cfi_offset 5, -8
 2125              		.cfi_offset 14, -4
 912:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 913:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 2126              		.loc 1 913 0
 2127 0002 4FF4A842 		mov	r2, #21504
 2128 0006 4FF4B043 		mov	r3, #22528
 2129 000a C4F20002 		movt	r2, 16384
 2130 000e C4F20003 		movt	r3, 16384
 2131 0012 9042     		cmp	r0, r2
 2132 0014 18BF     		it	ne
 2133 0016 9842     		cmpne	r0, r3
 911:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 2134              		.loc 1 911 0
 2135 0018 0446     		mov	r4, r0
 2136 001a 0D46     		mov	r5, r1
 2137              		.loc 1 913 0
 2138 001c 0DD0     		beq	.L232
 2139              		.loc 1 913 0 is_stmt 0 discriminator 1
 2140 001e 4FF4B843 		mov	r3, #23552
 2141 0022 C4F20003 		movt	r3, 16384
 2142 0026 9842     		cmp	r0, r3
 2143 0028 07D0     		beq	.L232
 2144 002a 40F20000 		movw	r0, #:lower16:.LC0
 2145              	.LVL180:
 2146 002e C0F20000 		movt	r0, #:upper16:.LC0
 2147 0032 40F29131 		movw	r1, #913
 2148              	.LVL181:
 2149 0036 FFF7FEFF 		bl	assert_failed
 2150              	.LVL182:
 2151              	.L232:
 914:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2152              		.loc 1 914 0 is_stmt 1
 2153 003a 012D     		cmp	r5, #1
 2154 003c 0DD9     		bls	.L233
 2155              		.loc 1 914 0 is_stmt 0 discriminator 1
 2156 003e 40F20000 		movw	r0, #:lower16:.LC0
 2157 0042 C0F20000 		movt	r0, #:upper16:.LC0
 2158 0046 40F29231 		movw	r1, #914
 2159 004a FFF7FEFF 		bl	assert_failed
 2160              	.LVL183:
 2161              	.L234:
 915:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 916:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 917:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable the selected I2C DMA requests */
 918:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR2 |= I2C_CR2_DMAEN;
 2162              		.loc 1 918 0 is_stmt 1
 2163 004e A388     		ldrh	r3, [r4, #4]
 2164 0050 9BB2     		uxth	r3, r3
 2165 0052 43F40063 		orr	r3, r3, #2048
 2166 0056 A380     		strh	r3, [r4, #4]	@ movhi
 2167 0058 38BD     		pop	{r3, r4, r5, pc}
 2168              	.LVL184:
 2169              	.L233:
 915:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 2170              		.loc 1 915 0
 2171 005a 002D     		cmp	r5, #0
 2172 005c F7D1     		bne	.L234
 919:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 920:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 921:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 922:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable the selected I2C DMA requests */
 923:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR2 &= (uint16_t)~((uint16_t)I2C_CR2_DMAEN);
 2173              		.loc 1 923 0
 2174 005e A388     		ldrh	r3, [r4, #4]
 2175 0060 23F40063 		bic	r3, r3, #2048
 2176 0064 1B04     		lsls	r3, r3, #16
 2177 0066 1B0C     		lsrs	r3, r3, #16
 2178 0068 A380     		strh	r3, [r4, #4]	@ movhi
 2179 006a 38BD     		pop	{r3, r4, r5, pc}
 2180              		.cfi_endproc
 2181              	.LFE148:
 2183              		.section	.text.I2C_DMALastTransferCmd,"ax",%progbits
 2184              		.align	2
 2185              		.global	I2C_DMALastTransferCmd
 2186              		.thumb
 2187              		.thumb_func
 2189              	I2C_DMALastTransferCmd:
 2190              	.LFB149:
 924:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 925:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 926:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 927:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 928:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Specifies that the next DMA transfer is the last one.
 929:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 930:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C DMA last transfer.
 931:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 932:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 933:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 934:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_DMALastTransferCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 935:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 2191              		.loc 1 935 0
 2192              		.cfi_startproc
 2193              		@ args = 0, pretend = 0, frame = 0
 2194              		@ frame_needed = 0, uses_anonymous_args = 0
 2195              	.LVL185:
 2196 0000 38B5     		push	{r3, r4, r5, lr}
 2197              	.LCFI27:
 2198              		.cfi_def_cfa_offset 16
 2199              		.cfi_offset 3, -16
 2200              		.cfi_offset 4, -12
 2201              		.cfi_offset 5, -8
 2202              		.cfi_offset 14, -4
 936:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 937:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 2203              		.loc 1 937 0
 2204 0002 4FF4A842 		mov	r2, #21504
 2205 0006 4FF4B043 		mov	r3, #22528
 2206 000a C4F20002 		movt	r2, 16384
 2207 000e C4F20003 		movt	r3, 16384
 2208 0012 9042     		cmp	r0, r2
 2209 0014 18BF     		it	ne
 2210 0016 9842     		cmpne	r0, r3
 935:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 2211              		.loc 1 935 0
 2212 0018 0446     		mov	r4, r0
 2213 001a 0D46     		mov	r5, r1
 2214              		.loc 1 937 0
 2215 001c 0DD0     		beq	.L241
 2216              		.loc 1 937 0 is_stmt 0 discriminator 1
 2217 001e 4FF4B843 		mov	r3, #23552
 2218 0022 C4F20003 		movt	r3, 16384
 2219 0026 9842     		cmp	r0, r3
 2220 0028 07D0     		beq	.L241
 2221 002a 40F20000 		movw	r0, #:lower16:.LC0
 2222              	.LVL186:
 2223 002e C0F20000 		movt	r0, #:upper16:.LC0
 2224 0032 40F2A931 		movw	r1, #937
 2225              	.LVL187:
 2226 0036 FFF7FEFF 		bl	assert_failed
 2227              	.LVL188:
 2228              	.L241:
 938:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2229              		.loc 1 938 0 is_stmt 1
 2230 003a 012D     		cmp	r5, #1
 2231 003c 0DD9     		bls	.L242
 2232              		.loc 1 938 0 is_stmt 0 discriminator 1
 2233 003e 40F20000 		movw	r0, #:lower16:.LC0
 2234 0042 C0F20000 		movt	r0, #:upper16:.LC0
 2235 0046 40F2AA31 		movw	r1, #938
 2236 004a FFF7FEFF 		bl	assert_failed
 2237              	.LVL189:
 2238              	.L243:
 939:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 940:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 941:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Next DMA transfer is the last transfer */
 942:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR2 |= I2C_CR2_LAST;
 2239              		.loc 1 942 0 is_stmt 1
 2240 004e A388     		ldrh	r3, [r4, #4]
 2241 0050 9BB2     		uxth	r3, r3
 2242 0052 43F48053 		orr	r3, r3, #4096
 2243 0056 A380     		strh	r3, [r4, #4]	@ movhi
 2244 0058 38BD     		pop	{r3, r4, r5, pc}
 2245              	.LVL190:
 2246              	.L242:
 939:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 2247              		.loc 1 939 0
 2248 005a 002D     		cmp	r5, #0
 2249 005c F7D1     		bne	.L243
 943:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 944:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 945:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 946:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Next DMA transfer is not the last transfer */
 947:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR2 &= (uint16_t)~((uint16_t)I2C_CR2_LAST);
 2250              		.loc 1 947 0
 2251 005e A388     		ldrh	r3, [r4, #4]
 2252 0060 23F48053 		bic	r3, r3, #4096
 2253 0064 1B04     		lsls	r3, r3, #16
 2254 0066 1B0C     		lsrs	r3, r3, #16
 2255 0068 A380     		strh	r3, [r4, #4]	@ movhi
 2256 006a 38BD     		pop	{r3, r4, r5, pc}
 2257              		.cfi_endproc
 2258              	.LFE149:
 2260              		.section	.text.I2C_ReadRegister,"ax",%progbits
 2261              		.align	2
 2262              		.global	I2C_ReadRegister
 2263              		.thumb
 2264              		.thumb_func
 2266              	I2C_ReadRegister:
 2267              	.LFB150:
 948:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 949:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 950:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 951:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 952:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @}
 953:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 954:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 955:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /** @defgroup I2C_Group5 Interrupts events and flags management functions
 956:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  *  @brief   Interrupts, events and flags management functions
 957:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  *
 958:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** @verbatim   
 959:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================
 960:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****           ##### Interrupts, events and flags management functions #####
 961:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================
 962:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     [..]
 963:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     This section provides functions allowing to configure the I2C Interrupts 
 964:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     sources and check or clear the flags or pending bits status.
 965:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     The user should identify which mode will be used in his application to manage 
 966:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     the communication: Polling mode, Interrupt mode or DMA mode. 
 967:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 968:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 969:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                 ##### I2C State Monitoring Functions #####                   
 970:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  =============================================================================== 
 971:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     [..]  
 972:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     This I2C driver provides three different ways for I2C state monitoring
 973:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     depending on the application requirements and constraints:
 974:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****          
 975:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****    
 976:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****      (#) Basic state monitoring (Using I2C_CheckEvent() function)
 977:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****      
 978:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         It compares the status registers (SR1 and SR2) content to a given event
 979:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         (can be the combination of one or more flags).
 980:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         It returns SUCCESS if the current status includes the given flags 
 981:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         and returns ERROR if one or more flags are missing in the current status.
 982:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 983:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****           (++) When to use
 984:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              (+++) This function is suitable for most applications as well as for startup 
 985:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                activity since the events are fully described in the product reference 
 986:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                manual (RM0090).
 987:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              (+++) It is also suitable for users who need to define their own events.
 988:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 989:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****           (++) Limitations
 990:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                If an error occurs (ie. error flags are set besides to the monitored 
 991:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                flags), the I2C_CheckEvent() function may return SUCCESS despite 
 992:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                the communication hold or corrupted real state. 
 993:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                In this case, it is advised to use error interrupts to monitor 
 994:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                the error events and handle them in the interrupt IRQ handler.
 995:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****          
 996:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****      -@@- For error management, it is advised to use the following functions:
 997:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         (+@@) I2C_ITConfig() to configure and enable the error interrupts (I2C_IT_ERR).
 998:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         (+@@) I2Cx_ER_IRQHandler() which is called when the error interrupt occurs.
 999:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****               Where x is the peripheral instance (I2C1, I2C2 ...)
1000:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         (+@@) I2C_GetFlagStatus() or I2C_GetITStatus()  to be called into the 
1001:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****               I2Cx_ER_IRQHandler() function in order to determine which error occurred.
1002:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         (+@@) I2C_ClearFlag() or I2C_ClearITPendingBit() and/or I2C_SoftwareResetCmd() 
1003:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****               and/or I2C_GenerateStop() in order to clear the error flag and source 
1004:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****               and return to correct  communication status.
1005:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              
1006:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  
1007:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****      (#) Advanced state monitoring (Using the function I2C_GetLastEvent())
1008:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1009:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         Using the function I2C_GetLastEvent() which returns the image of both status 
1010:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         registers in a single word (uint32_t) (Status Register 2 value is shifted left 
1011:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         by 16 bits and concatenated to Status Register 1).
1012:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1013:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****           (++) When to use
1014:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              (+++) This function is suitable for the same applications above but it 
1015:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                allows to overcome the mentioned limitation of I2C_GetFlagStatus() 
1016:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                function.
1017:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              (+++) The returned value could be compared to events already defined in 
1018:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                the library (stm32f4xx_i2c.h) or to custom values defined by user.
1019:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                This function is suitable when multiple flags are monitored at the 
1020:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                same time.
1021:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              (+++) At the opposite of I2C_CheckEvent() function, this function allows 
1022:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                user to choose when an event is accepted (when all events flags are 
1023:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                set and no other flags are set or just when the needed flags are set 
1024:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                like I2C_CheckEvent() function.
1025:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1026:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****           (++) Limitations
1027:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              (+++) User may need to define his own events.
1028:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              (+++) Same remark concerning the error management is applicable for this 
1029:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                function if user decides to check only regular communication flags 
1030:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                (and ignores error flags).
1031:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       
1032:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  
1033:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****      (#) Flag-based state monitoring (Using the function I2C_GetFlagStatus())
1034:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****      
1035:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       Using the function I2C_GetFlagStatus() which simply returns the status of 
1036:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       one single flag (ie. I2C_FLAG_RXNE ...). 
1037:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1038:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****           (++) When to use
1039:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              (+++) This function could be used for specific applications or in debug 
1040:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                phase.
1041:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              (+++) It is suitable when only one flag checking is needed (most I2C 
1042:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                events are monitored through multiple flags).
1043:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****           (++) Limitations: 
1044:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              (+++) When calling this function, the Status register is accessed. 
1045:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                Some flags are cleared when the status register is accessed. 
1046:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                So checking the status of one Flag, may clear other ones.
1047:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              (+++) Function may need to be called twice or more in order to monitor 
1048:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                one single event.
1049:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  
1050:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****    For detailed description of Events, please refer to section I2C_Events in 
1051:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****    stm32f4xx_i2c.h file.
1052:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****        
1053:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** @endverbatim
1054:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @{
1055:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
1056:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****    
1057:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
1058:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Reads the specified I2C register and returns its value.
1059:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_Register: specifies the register to read.
1060:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
1061:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_CR1:  CR1 register.
1062:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_CR2:   CR2 register.
1063:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_OAR1:  OAR1 register.
1064:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_OAR2:  OAR2 register.
1065:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_DR:    DR register.
1066:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_SR1:   SR1 register.
1067:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_SR2:   SR2 register.
1068:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_CCR:   CCR register.
1069:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_TRISE: TRISE register.
1070:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval The value of the read register.
1071:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
1072:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** uint16_t I2C_ReadRegister(I2C_TypeDef* I2Cx, uint8_t I2C_Register)
1073:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 2268              		.loc 1 1073 0
 2269              		.cfi_startproc
 2270              		@ args = 0, pretend = 0, frame = 8
 2271              		@ frame_needed = 0, uses_anonymous_args = 0
 2272              	.LVL191:
 2273 0000 30B5     		push	{r4, r5, lr}
 2274              	.LCFI28:
 2275              		.cfi_def_cfa_offset 12
 2276              		.cfi_offset 4, -12
 2277              		.cfi_offset 5, -8
 2278              		.cfi_offset 14, -4
1074:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   __IO uint32_t tmp = 0;
1075:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1076:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
1077:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 2279              		.loc 1 1077 0
 2280 0002 4FF4A842 		mov	r2, #21504
 2281 0006 4FF4B043 		mov	r3, #22528
1073:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   __IO uint32_t tmp = 0;
 2282              		.loc 1 1073 0
 2283 000a 0446     		mov	r4, r0
 2284 000c 83B0     		sub	sp, sp, #12
 2285              	.LCFI29:
 2286              		.cfi_def_cfa_offset 24
 2287              		.loc 1 1077 0
 2288 000e C4F20002 		movt	r2, 16384
 2289 0012 C4F20003 		movt	r3, 16384
1074:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   __IO uint32_t tmp = 0;
 2290              		.loc 1 1074 0
 2291 0016 0020     		movs	r0, #0
 2292              	.LVL192:
 2293              		.loc 1 1077 0
 2294 0018 9442     		cmp	r4, r2
 2295 001a 18BF     		it	ne
 2296 001c 9C42     		cmpne	r4, r3
1073:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   __IO uint32_t tmp = 0;
 2297              		.loc 1 1073 0
 2298 001e 0D46     		mov	r5, r1
1074:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   __IO uint32_t tmp = 0;
 2299              		.loc 1 1074 0
 2300 0020 0190     		str	r0, [sp, #4]
 2301              		.loc 1 1077 0
 2302 0022 17D1     		bne	.L263
 2303              	.LVL193:
 2304              	.L250:
1078:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_REGISTER(I2C_Register));
 2305              		.loc 1 1078 0
 2306 0024 15F0F303 		ands	r3, r5, #243
 2307 0028 0BD0     		beq	.L251
 2308              		.loc 1 1078 0 is_stmt 0 discriminator 1
 2309 002a 102B     		cmp	r3, #16
 2310 002c 09D0     		beq	.L251
 2311 002e 202D     		cmp	r5, #32
 2312 0030 07D0     		beq	.L251
 2313 0032 40F20000 		movw	r0, #:lower16:.LC0
 2314 0036 C0F20000 		movt	r0, #:upper16:.LC0
 2315 003a 40F23641 		movw	r1, #1078
 2316 003e FFF7FEFF 		bl	assert_failed
 2317              	.LVL194:
 2318              	.L251:
1079:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1080:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmp = (uint32_t) I2Cx;
 2319              		.loc 1 1080 0 is_stmt 1
 2320 0042 0194     		str	r4, [sp, #4]
1081:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmp += I2C_Register;
 2321              		.loc 1 1081 0
 2322 0044 019B     		ldr	r3, [sp, #4]
 2323 0046 1D44     		add	r5, r5, r3
 2324 0048 0195     		str	r5, [sp, #4]
1082:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1083:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Return the selected register value */
1084:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   return (*(__IO uint16_t *) tmp);
 2325              		.loc 1 1084 0
 2326 004a 019B     		ldr	r3, [sp, #4]
 2327 004c 1888     		ldrh	r0, [r3]
 2328 004e 80B2     		uxth	r0, r0
1085:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 2329              		.loc 1 1085 0
 2330 0050 03B0     		add	sp, sp, #12
 2331              		@ sp needed
 2332 0052 30BD     		pop	{r4, r5, pc}
 2333              	.LVL195:
 2334              	.L263:
1077:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_REGISTER(I2C_Register));
 2335              		.loc 1 1077 0 discriminator 1
 2336 0054 4FF4B843 		mov	r3, #23552
 2337 0058 C4F20003 		movt	r3, 16384
 2338 005c 9C42     		cmp	r4, r3
 2339 005e E1D0     		beq	.L250
 2340 0060 40F20000 		movw	r0, #:lower16:.LC0
 2341 0064 C0F20000 		movt	r0, #:upper16:.LC0
 2342 0068 40F23541 		movw	r1, #1077
 2343              	.LVL196:
 2344 006c FFF7FEFF 		bl	assert_failed
 2345              	.LVL197:
 2346 0070 D8E7     		b	.L250
 2347              		.cfi_endproc
 2348              	.LFE150:
 2350 0072 00BF     		.section	.text.I2C_ITConfig,"ax",%progbits
 2351              		.align	2
 2352              		.global	I2C_ITConfig
 2353              		.thumb
 2354              		.thumb_func
 2356              	I2C_ITConfig:
 2357              	.LFB151:
1086:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1087:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
1088:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C interrupts.
1089:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1090:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_IT: specifies the I2C interrupts sources to be enabled or disabled. 
1091:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be any combination of the following values:
1092:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_BUF: Buffer interrupt mask
1093:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_EVT: Event interrupt mask
1094:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_ERR: Error interrupt mask
1095:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the specified I2C interrupts.
1096:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
1097:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
1098:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
1099:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_ITConfig(I2C_TypeDef* I2Cx, uint16_t I2C_IT, FunctionalState NewState)
1100:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 2358              		.loc 1 1100 0
 2359              		.cfi_startproc
 2360              		@ args = 0, pretend = 0, frame = 0
 2361              		@ frame_needed = 0, uses_anonymous_args = 0
 2362              	.LVL198:
 2363 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2364              	.LCFI30:
 2365              		.cfi_def_cfa_offset 24
 2366              		.cfi_offset 3, -24
 2367              		.cfi_offset 4, -20
 2368              		.cfi_offset 5, -16
 2369              		.cfi_offset 6, -12
 2370              		.cfi_offset 7, -8
 2371              		.cfi_offset 14, -4
1101:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
1102:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 2372              		.loc 1 1102 0
 2373 0002 4FF4A847 		mov	r7, #21504
 2374 0006 4FF4B043 		mov	r3, #22528
 2375 000a C4F20007 		movt	r7, 16384
 2376 000e C4F20003 		movt	r3, 16384
 2377 0012 B842     		cmp	r0, r7
 2378 0014 18BF     		it	ne
 2379 0016 9842     		cmpne	r0, r3
1100:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 2380              		.loc 1 1100 0
 2381 0018 0446     		mov	r4, r0
 2382 001a 0D46     		mov	r5, r1
 2383 001c 1646     		mov	r6, r2
 2384              		.loc 1 1102 0
 2385 001e 0DD0     		beq	.L265
 2386              		.loc 1 1102 0 is_stmt 0 discriminator 1
 2387 0020 4FF4B843 		mov	r3, #23552
 2388 0024 C4F20003 		movt	r3, 16384
 2389 0028 9842     		cmp	r0, r3
 2390 002a 07D0     		beq	.L265
 2391 002c 40F20000 		movw	r0, #:lower16:.LC0
 2392              	.LVL199:
 2393 0030 C0F20000 		movt	r0, #:upper16:.LC0
 2394 0034 40F24E41 		movw	r1, #1102
 2395              	.LVL200:
 2396 0038 FFF7FEFF 		bl	assert_failed
 2397              	.LVL201:
 2398              	.L265:
1103:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2399              		.loc 1 1103 0 is_stmt 1
 2400 003c 012E     		cmp	r6, #1
 2401 003e 07D9     		bls	.L266
 2402              		.loc 1 1103 0 is_stmt 0 discriminator 1
 2403 0040 40F20000 		movw	r0, #:lower16:.LC0
 2404 0044 C0F20000 		movt	r0, #:upper16:.LC0
 2405 0048 40F24F41 		movw	r1, #1103
 2406 004c FFF7FEFF 		bl	assert_failed
 2407              	.LVL202:
 2408              	.L266:
1104:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_CONFIG_IT(I2C_IT));
 2409              		.loc 1 1104 0 is_stmt 1
 2410 0050 4FF6FF03 		movw	r3, #63743
 2411 0054 2B40     		ands	r3, r3, r5
 2412 0056 3BB9     		cbnz	r3, .L267
 2413              		.loc 1 1104 0 is_stmt 0 discriminator 2
 2414 0058 35B1     		cbz	r5, .L267
1105:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
1106:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
1107:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
1108:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable the selected I2C interrupts */
1109:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR2 |= I2C_IT;
 2415              		.loc 1 1109 0 is_stmt 1
 2416 005a A388     		ldrh	r3, [r4, #4]
 2417 005c 9BB2     		uxth	r3, r3
1106:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 2418              		.loc 1 1106 0
 2419 005e 7EB9     		cbnz	r6, .L274
 2420              	.L269:
1110:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
1111:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
1112:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
1113:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable the selected I2C interrupts */
1114:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR2 &= (uint16_t)~I2C_IT;
 2421              		.loc 1 1114 0
 2422 0060 23EA0505 		bic	r5, r3, r5
 2423 0064 A580     		strh	r5, [r4, #4]	@ movhi
 2424 0066 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2425              	.LVL203:
 2426              	.L267:
1104:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
 2427              		.loc 1 1104 0 discriminator 1
 2428 0068 40F20000 		movw	r0, #:lower16:.LC0
 2429 006c C0F20000 		movt	r0, #:upper16:.LC0
 2430 0070 4FF48A61 		mov	r1, #1104
 2431 0074 FFF7FEFF 		bl	assert_failed
 2432              	.LVL204:
1109:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 2433              		.loc 1 1109 0 discriminator 1
 2434 0078 A388     		ldrh	r3, [r4, #4]
 2435 007a 9BB2     		uxth	r3, r3
1106:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 2436              		.loc 1 1106 0 discriminator 1
 2437 007c 002E     		cmp	r6, #0
 2438 007e EFD0     		beq	.L269
 2439              	.L274:
1109:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 2440              		.loc 1 1109 0
 2441 0080 1D43     		orrs	r5, r5, r3
 2442 0082 A580     		strh	r5, [r4, #4]	@ movhi
 2443 0084 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2444              		.cfi_endproc
 2445              	.LFE151:
 2447 0086 00BF     		.section	.text.I2C_CheckEvent,"ax",%progbits
 2448              		.align	2
 2449              		.global	I2C_CheckEvent
 2450              		.thumb
 2451              		.thumb_func
 2453              	I2C_CheckEvent:
 2454              	.LFB152:
1115:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
1116:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
1117:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1118:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /*
1119:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================
1120:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                           1. Basic state monitoring                    
1121:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================  
1122:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  */
1123:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1124:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
1125:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Checks whether the last I2Cx Event is equal to the one passed
1126:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         as parameter.
1127:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1128:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_EVENT: specifies the event to be checked. 
1129:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
1130:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_TRANSMITTER_ADDRESS_MATCHED: EV1
1131:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_RECEIVER_ADDRESS_MATCHED: EV1
1132:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_TRANSMITTER_SECONDADDRESS_MATCHED: EV1
1133:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_RECEIVER_SECONDADDRESS_MATCHED: EV1
1134:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_GENERALCALLADDRESS_MATCHED: EV1
1135:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_BYTE_RECEIVED: EV2
1136:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg (I2C_EVENT_SLAVE_BYTE_RECEIVED | I2C_FLAG_DUALF): EV2
1137:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg (I2C_EVENT_SLAVE_BYTE_RECEIVED | I2C_FLAG_GENCALL): EV2
1138:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_BYTE_TRANSMITTED: EV3
1139:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg (I2C_EVENT_SLAVE_BYTE_TRANSMITTED | I2C_FLAG_DUALF): EV3
1140:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg (I2C_EVENT_SLAVE_BYTE_TRANSMITTED | I2C_FLAG_GENCALL): EV3
1141:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_ACK_FAILURE: EV3_2
1142:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_STOP_DETECTED: EV4
1143:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_MODE_SELECT: EV5
1144:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED: EV6     
1145:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_RECEIVER_MODE_SELECTED: EV6
1146:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_BYTE_RECEIVED: EV7
1147:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_BYTE_TRANSMITTING: EV8
1148:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_BYTE_TRANSMITTED: EV8_2
1149:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_MODE_ADDRESS10: EV9
1150:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *     
1151:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   For detailed description of Events, please refer to section I2C_Events
1152:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         in stm32f4xx_i2c.h file.
1153:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *    
1154:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval An ErrorStatus enumeration value:
1155:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *           - SUCCESS: Last event is equal to the I2C_EVENT
1156:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *           - ERROR: Last event is different from the I2C_EVENT
1157:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
1158:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** ErrorStatus I2C_CheckEvent(I2C_TypeDef* I2Cx, uint32_t I2C_EVENT)
1159:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 2455              		.loc 1 1159 0
 2456              		.cfi_startproc
 2457              		@ args = 0, pretend = 0, frame = 0
 2458              		@ frame_needed = 0, uses_anonymous_args = 0
 2459              	.LVL205:
 2460 0000 38B5     		push	{r3, r4, r5, lr}
 2461              	.LCFI31:
 2462              		.cfi_def_cfa_offset 16
 2463              		.cfi_offset 3, -16
 2464              		.cfi_offset 4, -12
 2465              		.cfi_offset 5, -8
 2466              		.cfi_offset 14, -4
1160:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint32_t lastevent = 0;
1161:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint32_t flag1 = 0, flag2 = 0;
1162:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   ErrorStatus status = ERROR;
1163:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1164:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
1165:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 2467              		.loc 1 1165 0
 2468 0002 4FF4A842 		mov	r2, #21504
 2469 0006 4FF4B043 		mov	r3, #22528
 2470 000a C4F20002 		movt	r2, 16384
 2471 000e C4F20003 		movt	r3, 16384
 2472 0012 9042     		cmp	r0, r2
 2473 0014 18BF     		it	ne
 2474 0016 9842     		cmpne	r0, r3
1159:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint32_t lastevent = 0;
 2475              		.loc 1 1159 0
 2476 0018 0546     		mov	r5, r0
 2477 001a 0C46     		mov	r4, r1
 2478              		.loc 1 1165 0
 2479 001c 0DD0     		beq	.L276
 2480              		.loc 1 1165 0 is_stmt 0 discriminator 1
 2481 001e 4FF4B843 		mov	r3, #23552
 2482 0022 C4F20003 		movt	r3, 16384
 2483 0026 9842     		cmp	r0, r3
 2484 0028 07D0     		beq	.L276
 2485 002a 40F20000 		movw	r0, #:lower16:.LC0
 2486              	.LVL206:
 2487 002e C0F20000 		movt	r0, #:upper16:.LC0
 2488 0032 40F28D41 		movw	r1, #1165
 2489              	.LVL207:
 2490 0036 FFF7FEFF 		bl	assert_failed
 2491              	.LVL208:
 2492              	.L276:
1166:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_EVENT(I2C_EVENT));
 2493              		.loc 1 1166 0 is_stmt 1
 2494 003a 8223     		movs	r3, #130
 2495 003c C0F20603 		movt	r3, 6
 2496 0040 24F48032 		bic	r2, r4, #65536
 2497 0044 9A42     		cmp	r2, r3
 2498 0046 18BF     		it	ne
 2499 0048 B4F1021F 		cmpne	r4, #131074
 2500 004c 39D0     		beq	.L277
 2501              		.loc 1 1166 0 is_stmt 0 discriminator 1
 2502 004e 8023     		movs	r3, #128
 2503 0050 C0F28603 		movt	r3, 134
 2504 0054 24F04001 		bic	r1, r4, #64
 2505 0058 24F00400 		bic	r0, r4, #4
 2506 005c 9842     		cmp	r0, r3
 2507 005e 18BF     		it	ne
 2508 0060 B1F5020F 		cmpne	r1, #8519680
 2509 0064 2DD0     		beq	.L277
 2510 0066 4023     		movs	r3, #64
 2511 0068 C0F20203 		movt	r3, 2
 2512 006c B1F5901F 		cmp	r1, #1179648
 2513 0070 18BF     		it	ne
 2514 0072 9A42     		cmpne	r2, r3
 2515 0074 25D0     		beq	.L277
 2516 0076 8423     		movs	r3, #132
 2517 0078 C0F20603 		movt	r3, 6
 2518 007c 9A42     		cmp	r2, r3
 2519 007e 20D0     		beq	.L277
 2520 0080 8423     		movs	r3, #132
 2521 0082 C0F21603 		movt	r3, 22
 2522 0086 9C42     		cmp	r4, r3
 2523 0088 18BF     		it	ne
 2524 008a 102C     		cmpne	r4, #16
 2525 008c 19D0     		beq	.L277
 2526 008e A4F54033 		sub	r3, r4, #196608
 2527 0092 013B     		subs	r3, r3, #1
 2528 0094 012B     		cmp	r3, #1
 2529 0096 14D9     		bls	.L277
 2530 0098 8023     		movs	r3, #128
 2531 009a C0F20703 		movt	r3, 7
 2532 009e 9C42     		cmp	r4, r3
 2533 00a0 0FD0     		beq	.L277
 2534 00a2 0823     		movs	r3, #8
 2535 00a4 C0F20303 		movt	r3, 3
 2536 00a8 9C42     		cmp	r4, r3
 2537 00aa 18BF     		it	ne
 2538 00ac B4F5806F 		cmpne	r4, #1024
 2539 00b0 07D0     		beq	.L277
 2540 00b2 40F20000 		movw	r0, #:lower16:.LC0
 2541 00b6 C0F20000 		movt	r0, #:upper16:.LC0
 2542 00ba 40F28E41 		movw	r1, #1166
 2543 00be FFF7FEFF 		bl	assert_failed
 2544              	.LVL209:
 2545              	.L277:
1167:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1168:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Read the I2Cx status register */
1169:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   flag1 = I2Cx->SR1;
 2546              		.loc 1 1169 0 is_stmt 1
 2547 00c2 A88A     		ldrh	r0, [r5, #20]
1170:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   flag2 = I2Cx->SR2;
 2548              		.loc 1 1170 0
 2549 00c4 2B8B     		ldrh	r3, [r5, #24]
1169:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   flag2 = I2Cx->SR2;
 2550              		.loc 1 1169 0
 2551 00c6 80B2     		uxth	r0, r0
 2552              	.LVL210:
1171:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   flag2 = flag2 << 16;
1172:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1173:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get the last event value from I2C status register */
1174:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   lastevent = (flag1 | flag2) & FLAG_MASK;
 2553              		.loc 1 1174 0
 2554 00c8 40EA0340 		orr	r0, r0, r3, lsl #16
 2555              	.LVL211:
 2556 00cc 24F07F43 		bic	r3, r4, #-16777216
 2557              	.LVL212:
1175:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1176:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check whether the last event contains the I2C_EVENT */
1177:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if ((lastevent & I2C_EVENT) == I2C_EVENT)
 2558              		.loc 1 1177 0
 2559 00d0 1840     		ands	r0, r0, r3
1178:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
1179:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* SUCCESS: last event is equal to I2C_EVENT */
1180:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     status = SUCCESS;
1181:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
1182:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
1183:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
1184:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* ERROR: last event is different from I2C_EVENT */
1185:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     status = ERROR;
1186:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
1187:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Return status */
1188:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   return status;
1189:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 2560              		.loc 1 1189 0
 2561 00d2 231A     		subs	r3, r4, r0
 2562 00d4 5842     		rsbs	r0, r3, #0
 2563 00d6 5841     		adcs	r0, r0, r3
 2564 00d8 38BD     		pop	{r3, r4, r5, pc}
 2565              		.cfi_endproc
 2566              	.LFE152:
 2568 00da 00BF     		.section	.text.I2C_GetLastEvent,"ax",%progbits
 2569              		.align	2
 2570              		.global	I2C_GetLastEvent
 2571              		.thumb
 2572              		.thumb_func
 2574              	I2C_GetLastEvent:
 2575              	.LFB153:
1190:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1191:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /*
1192:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================
1193:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                           2. Advanced state monitoring                   
1194:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================  
1195:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  */
1196:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1197:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
1198:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Returns the last I2Cx Event.
1199:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1200:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *     
1201:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   For detailed description of Events, please refer to section I2C_Events
1202:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         in stm32f4xx_i2c.h file.
1203:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *    
1204:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval The last event
1205:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
1206:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** uint32_t I2C_GetLastEvent(I2C_TypeDef* I2Cx)
1207:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 2576              		.loc 1 1207 0
 2577              		.cfi_startproc
 2578              		@ args = 0, pretend = 0, frame = 0
 2579              		@ frame_needed = 0, uses_anonymous_args = 0
 2580              	.LVL213:
1208:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint32_t lastevent = 0;
1209:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint32_t flag1 = 0, flag2 = 0;
1210:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1211:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
1212:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 2581              		.loc 1 1212 0
 2582 0000 4FF4A842 		mov	r2, #21504
 2583 0004 4FF4B043 		mov	r3, #22528
 2584 0008 C4F20002 		movt	r2, 16384
 2585 000c C4F20003 		movt	r3, 16384
 2586 0010 9042     		cmp	r0, r2
 2587 0012 18BF     		it	ne
 2588 0014 9842     		cmpne	r0, r3
1207:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint32_t lastevent = 0;
 2589              		.loc 1 1207 0
 2590 0016 10B5     		push	{r4, lr}
 2591              	.LCFI32:
 2592              		.cfi_def_cfa_offset 8
 2593              		.cfi_offset 4, -8
 2594              		.cfi_offset 14, -4
1207:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint32_t lastevent = 0;
 2595              		.loc 1 1207 0
 2596 0018 0446     		mov	r4, r0
 2597              		.loc 1 1212 0
 2598 001a 0DD0     		beq	.L297
 2599              		.loc 1 1212 0 is_stmt 0 discriminator 1
 2600 001c 4FF4B843 		mov	r3, #23552
 2601 0020 C4F20003 		movt	r3, 16384
 2602 0024 9842     		cmp	r0, r3
 2603 0026 07D0     		beq	.L297
 2604 0028 40F20000 		movw	r0, #:lower16:.LC0
 2605              	.LVL214:
 2606 002c C0F20000 		movt	r0, #:upper16:.LC0
 2607 0030 40F2BC41 		movw	r1, #1212
 2608 0034 FFF7FEFF 		bl	assert_failed
 2609              	.LVL215:
 2610              	.L297:
1213:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1214:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Read the I2Cx status register */
1215:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   flag1 = I2Cx->SR1;
 2611              		.loc 1 1215 0 is_stmt 1
 2612 0038 A08A     		ldrh	r0, [r4, #20]
1216:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   flag2 = I2Cx->SR2;
 2613              		.loc 1 1216 0
 2614 003a 238B     		ldrh	r3, [r4, #24]
1215:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   flag2 = I2Cx->SR2;
 2615              		.loc 1 1215 0
 2616 003c 80B2     		uxth	r0, r0
 2617              	.LVL216:
1217:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   flag2 = flag2 << 16;
1218:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1219:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get the last event value from I2C status register */
1220:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   lastevent = (flag1 | flag2) & FLAG_MASK;
 2618              		.loc 1 1220 0
 2619 003e 40EA0340 		orr	r0, r0, r3, lsl #16
 2620              	.LVL217:
1221:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1222:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Return status */
1223:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   return lastevent;
1224:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 2621              		.loc 1 1224 0
 2622 0042 20F07F40 		bic	r0, r0, #-16777216
 2623 0046 10BD     		pop	{r4, pc}
 2624              		.cfi_endproc
 2625              	.LFE153:
 2627              		.section	.text.I2C_GetFlagStatus,"ax",%progbits
 2628              		.align	2
 2629              		.global	I2C_GetFlagStatus
 2630              		.thumb
 2631              		.thumb_func
 2633              	I2C_GetFlagStatus:
 2634              	.LFB154:
1225:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1226:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /*
1227:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================
1228:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                           3. Flag-based state monitoring                   
1229:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================  
1230:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  */
1231:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1232:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
1233:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Checks whether the specified I2C flag is set or not.
1234:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1235:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_FLAG: specifies the flag to check. 
1236:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
1237:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_DUALF: Dual flag (Slave mode)
1238:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_SMBHOST: SMBus host header (Slave mode)
1239:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_SMBDEFAULT: SMBus default header (Slave mode)
1240:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_GENCALL: General call header flag (Slave mode)
1241:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_TRA: Transmitter/Receiver flag
1242:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_BUSY: Bus busy flag
1243:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_MSL: Master/Slave flag
1244:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_SMBALERT: SMBus Alert flag
1245:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_TIMEOUT: Timeout or Tlow error flag
1246:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_PECERR: PEC error in reception flag
1247:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_OVR: Overrun/Underrun flag (Slave mode)
1248:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_AF: Acknowledge failure flag
1249:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_ARLO: Arbitration lost flag (Master mode)
1250:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_BERR: Bus error flag
1251:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_TXE: Data register empty flag (Transmitter)
1252:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_RXNE: Data register not empty (Receiver) flag
1253:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_STOPF: Stop detection flag (Slave mode)
1254:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_ADD10: 10-bit header sent flag (Master mode)
1255:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_BTF: Byte transfer finished flag
1256:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_ADDR: Address sent flag (Master mode) "ADSL"
1257:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                                Address matched flag (Slave mode)"ENDAD"
1258:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_SB: Start bit flag (Master mode)
1259:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval The new state of I2C_FLAG (SET or RESET).
1260:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
1261:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** FlagStatus I2C_GetFlagStatus(I2C_TypeDef* I2Cx, uint32_t I2C_FLAG)
1262:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 2635              		.loc 1 1262 0
 2636              		.cfi_startproc
 2637              		@ args = 0, pretend = 0, frame = 8
 2638              		@ frame_needed = 0, uses_anonymous_args = 0
 2639              	.LVL218:
 2640 0000 30B5     		push	{r4, r5, lr}
 2641              	.LCFI33:
 2642              		.cfi_def_cfa_offset 12
 2643              		.cfi_offset 4, -12
 2644              		.cfi_offset 5, -8
 2645              		.cfi_offset 14, -4
1263:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   FlagStatus bitstatus = RESET;
1264:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   __IO uint32_t i2creg = 0, i2cxbase = 0;
1265:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1266:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
1267:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 2646              		.loc 1 1267 0
 2647 0002 4FF4A842 		mov	r2, #21504
 2648 0006 4FF4B043 		mov	r3, #22528
1262:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   FlagStatus bitstatus = RESET;
 2649              		.loc 1 1262 0
 2650 000a 83B0     		sub	sp, sp, #12
 2651              	.LCFI34:
 2652              		.cfi_def_cfa_offset 24
1262:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   FlagStatus bitstatus = RESET;
 2653              		.loc 1 1262 0
 2654 000c 0546     		mov	r5, r0
 2655              		.loc 1 1267 0
 2656 000e C4F20002 		movt	r2, 16384
 2657 0012 C4F20003 		movt	r3, 16384
1264:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 2658              		.loc 1 1264 0
 2659 0016 0020     		movs	r0, #0
 2660              	.LVL219:
 2661              		.loc 1 1267 0
 2662 0018 9542     		cmp	r5, r2
 2663 001a 18BF     		it	ne
 2664 001c 9D42     		cmpne	r5, r3
1264:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 2665              		.loc 1 1264 0
 2666 001e 0090     		str	r0, [sp]
1262:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   FlagStatus bitstatus = RESET;
 2667              		.loc 1 1262 0
 2668 0020 0C46     		mov	r4, r1
1264:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 2669              		.loc 1 1264 0
 2670 0022 0190     		str	r0, [sp, #4]
 2671              		.loc 1 1267 0
 2672 0024 0DD0     		beq	.L302
 2673              		.loc 1 1267 0 is_stmt 0 discriminator 1
 2674 0026 4FF4B843 		mov	r3, #23552
 2675 002a C4F20003 		movt	r3, 16384
 2676 002e 9D42     		cmp	r5, r3
 2677 0030 07D0     		beq	.L302
 2678 0032 40F20000 		movw	r0, #:lower16:.LC0
 2679 0036 C0F20000 		movt	r0, #:upper16:.LC0
 2680 003a 40F2F341 		movw	r1, #1267
 2681              	.LVL220:
 2682 003e FFF7FEFF 		bl	assert_failed
 2683              	.LVL221:
 2684              	.L302:
1268:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_GET_FLAG(I2C_FLAG));
 2685              		.loc 1 1268 0 is_stmt 1
 2686 0042 B4F5000F 		cmp	r4, #8388608
 2687 0046 18BF     		it	ne
 2688 0048 B4F5800F 		cmpne	r4, #4194304
 2689 004c 05D0     		beq	.L303
 2690              		.loc 1 1268 0 is_stmt 0 discriminator 1
 2691 004e B4F5001F 		cmp	r4, #2097152
 2692 0052 18BF     		it	ne
 2693 0054 B4F5801F 		cmpne	r4, #1048576
 2694 0058 16D1     		bne	.L336
 2695              	.L303:
1269:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1270:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get the I2Cx peripheral base address */
1271:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   i2cxbase = (uint32_t)I2Cx;
1272:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
1273:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Read flag register index */
1274:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   i2creg = I2C_FLAG >> 28;
 2696              		.loc 1 1274 0 is_stmt 1
 2697 005a 230F     		lsrs	r3, r4, #28
1271:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
 2698              		.loc 1 1271 0
 2699 005c 0195     		str	r5, [sp, #4]
 2700              		.loc 1 1274 0
 2701 005e 0093     		str	r3, [sp]
1275:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
1276:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get bit[23:0] of the flag */
1277:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2C_FLAG &= FLAG_MASK;
1278:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
1279:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if(i2creg != 0)
 2702              		.loc 1 1279 0
 2703 0060 009B     		ldr	r3, [sp]
1277:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
 2704              		.loc 1 1277 0
 2705 0062 24F07F44 		bic	r4, r4, #-16777216
 2706              	.LVL222:
 2707              		.loc 1 1279 0
 2708 0066 53B1     		cbz	r3, .L304
1280:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
1281:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Get the I2Cx SR1 register address */
1282:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     i2cxbase += 0x14;
 2709              		.loc 1 1282 0
 2710 0068 019B     		ldr	r3, [sp, #4]
 2711 006a 1433     		adds	r3, r3, #20
 2712 006c 0193     		str	r3, [sp, #4]
 2713              	.L305:
1283:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
1284:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
1285:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
1286:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Flag in I2Cx SR2 Register */
1287:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2C_FLAG = (uint32_t)(I2C_FLAG >> 16);
1288:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Get the I2Cx SR2 register address */
1289:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     i2cxbase += 0x18;
1290:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
1291:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
1292:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if(((*(__IO uint32_t *)i2cxbase) & I2C_FLAG) != (uint32_t)RESET)
 2714              		.loc 1 1292 0
 2715 006e 019B     		ldr	r3, [sp, #4]
 2716 0070 1B68     		ldr	r3, [r3]
 2717              	.LVL223:
 2718 0072 1C42     		tst	r4, r3
1293:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
1294:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* I2C_FLAG is set */
1295:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     bitstatus = SET;
1296:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
1297:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
1298:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
1299:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* I2C_FLAG is reset */
1300:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     bitstatus = RESET;
1301:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
1302:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
1303:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Return the I2C_FLAG status */
1304:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   return  bitstatus;
1305:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 2719              		.loc 1 1305 0
 2720 0074 0CBF     		ite	eq
 2721 0076 0020     		moveq	r0, #0
 2722 0078 0120     		movne	r0, #1
 2723 007a 03B0     		add	sp, sp, #12
 2724              		@ sp needed
 2725 007c 30BD     		pop	{r4, r5, pc}
 2726              	.LVL224:
 2727              	.L304:
1289:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 2728              		.loc 1 1289 0
 2729 007e 019B     		ldr	r3, [sp, #4]
 2730 0080 1833     		adds	r3, r3, #24
1287:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Get the I2Cx SR2 register address */
 2731              		.loc 1 1287 0
 2732 0082 240C     		lsrs	r4, r4, #16
 2733              	.LVL225:
1289:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 2734              		.loc 1 1289 0
 2735 0084 0193     		str	r3, [sp, #4]
 2736 0086 F2E7     		b	.L305
 2737              	.L336:
1268:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 2738              		.loc 1 1268 0 discriminator 1
 2739 0088 B4F5802F 		cmp	r4, #262144
 2740 008c 18BF     		it	ne
 2741 008e B4F5003F 		cmpne	r4, #131072
 2742 0092 E2D0     		beq	.L303
 2743 0094 4FF40043 		mov	r3, #32768
 2744 0098 C1F20003 		movt	r3, 4096
 2745 009c B4F5803F 		cmp	r4, #65536
 2746 00a0 18BF     		it	ne
 2747 00a2 9C42     		cmpne	r4, r3
 2748 00a4 D9D0     		beq	.L303
 2749 00a6 4FF48043 		mov	r3, #16384
 2750 00aa C1F20003 		movt	r3, 4096
 2751 00ae 9C42     		cmp	r4, r3
 2752 00b0 18BF     		it	ne
 2753 00b2 B4F1102F 		cmpne	r4, #268439552
 2754 00b6 D0D0     		beq	.L303
 2755 00b8 4FF40062 		mov	r2, #2048
 2756 00bc 4FF48063 		mov	r3, #1024
 2757 00c0 C1F20002 		movt	r2, 4096
 2758 00c4 C1F20003 		movt	r3, 4096
 2759 00c8 9442     		cmp	r4, r2
 2760 00ca 18BF     		it	ne
 2761 00cc 9C42     		cmpne	r4, r3
 2762 00ce C4D0     		beq	.L303
 2763 00d0 4FF40072 		mov	r2, #512
 2764 00d4 4FF48073 		mov	r3, #256
 2765 00d8 C1F20002 		movt	r2, 4096
 2766 00dc C1F20003 		movt	r3, 4096
 2767 00e0 9442     		cmp	r4, r2
 2768 00e2 18BF     		it	ne
 2769 00e4 9C42     		cmpne	r4, r3
 2770 00e6 B8D0     		beq	.L303
 2771 00e8 8022     		movs	r2, #128
 2772 00ea 4023     		movs	r3, #64
 2773 00ec C1F20002 		movt	r2, 4096
 2774 00f0 C1F20003 		movt	r3, 4096
 2775 00f4 9442     		cmp	r4, r2
 2776 00f6 18BF     		it	ne
 2777 00f8 9C42     		cmpne	r4, r3
 2778 00fa AED0     		beq	.L303
 2779 00fc 1022     		movs	r2, #16
 2780 00fe 0823     		movs	r3, #8
 2781 0100 C1F20002 		movt	r2, 4096
 2782 0104 C1F20003 		movt	r3, 4096
 2783 0108 9442     		cmp	r4, r2
 2784 010a 18BF     		it	ne
 2785 010c 9C42     		cmpne	r4, r3
 2786 010e A4D0     		beq	.L303
 2787 0110 0423     		movs	r3, #4
 2788 0112 C1F20003 		movt	r3, 4096
 2789 0116 9C42     		cmp	r4, r3
 2790 0118 9FD0     		beq	.L303
 2791 011a 04F17043 		add	r3, r4, #-268435456
 2792 011e 013B     		subs	r3, r3, #1
 2793 0120 012B     		cmp	r3, #1
 2794 0122 9AD9     		bls	.L303
 2795 0124 40F20000 		movw	r0, #:lower16:.LC0
 2796 0128 C0F20000 		movt	r0, #:upper16:.LC0
 2797 012c 40F2F441 		movw	r1, #1268
 2798 0130 FFF7FEFF 		bl	assert_failed
 2799              	.LVL226:
 2800 0134 91E7     		b	.L303
 2801              		.cfi_endproc
 2802              	.LFE154:
 2804 0136 00BF     		.section	.text.I2C_ClearFlag,"ax",%progbits
 2805              		.align	2
 2806              		.global	I2C_ClearFlag
 2807              		.thumb
 2808              		.thumb_func
 2810              	I2C_ClearFlag:
 2811              	.LFB155:
1306:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1307:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
1308:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Clears the I2Cx's pending flags.
1309:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1310:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_FLAG: specifies the flag to clear. 
1311:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be any combination of the following values:
1312:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_SMBALERT: SMBus Alert flag
1313:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_TIMEOUT: Timeout or Tlow error flag
1314:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_PECERR: PEC error in reception flag
1315:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_OVR: Overrun/Underrun flag (Slave mode)
1316:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_AF: Acknowledge failure flag
1317:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_ARLO: Arbitration lost flag (Master mode)
1318:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_BERR: Bus error flag
1319:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *   
1320:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   STOPF (STOP detection) is cleared by software sequence: a read operation 
1321:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          to I2C_SR1 register (I2C_GetFlagStatus()) followed by a write operation 
1322:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          to I2C_CR1 register (I2C_Cmd() to re-enable the I2C peripheral).
1323:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   ADD10 (10-bit header sent) is cleared by software sequence: a read 
1324:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          operation to I2C_SR1 (I2C_GetFlagStatus()) followed by writing the 
1325:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          second byte of the address in DR register.
1326:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   BTF (Byte Transfer Finished) is cleared by software sequence: a read 
1327:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          operation to I2C_SR1 register (I2C_GetFlagStatus()) followed by a 
1328:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          read/write to I2C_DR register (I2C_SendData()).
1329:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   ADDR (Address sent) is cleared by software sequence: a read operation to 
1330:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          I2C_SR1 register (I2C_GetFlagStatus()) followed by a read operation to 
1331:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          I2C_SR2 register ((void)(I2Cx->SR2)).
1332:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   SB (Start Bit) is cleared software sequence: a read operation to I2C_SR1
1333:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          register (I2C_GetFlagStatus()) followed by a write operation to I2C_DR
1334:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          register (I2C_SendData()).
1335:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *  
1336:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
1337:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
1338:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_ClearFlag(I2C_TypeDef* I2Cx, uint32_t I2C_FLAG)
1339:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 2812              		.loc 1 1339 0
 2813              		.cfi_startproc
 2814              		@ args = 0, pretend = 0, frame = 0
 2815              		@ frame_needed = 0, uses_anonymous_args = 0
 2816              	.LVL227:
 2817 0000 38B5     		push	{r3, r4, r5, lr}
 2818              	.LCFI35:
 2819              		.cfi_def_cfa_offset 16
 2820              		.cfi_offset 3, -16
 2821              		.cfi_offset 4, -12
 2822              		.cfi_offset 5, -8
 2823              		.cfi_offset 14, -4
1340:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint32_t flagpos = 0;
1341:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
1342:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 2824              		.loc 1 1342 0
 2825 0002 4FF4A842 		mov	r2, #21504
 2826 0006 4FF4B043 		mov	r3, #22528
 2827 000a C4F20002 		movt	r2, 16384
 2828 000e C4F20003 		movt	r3, 16384
 2829 0012 9042     		cmp	r0, r2
 2830 0014 18BF     		it	ne
 2831 0016 9842     		cmpne	r0, r3
1339:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint32_t flagpos = 0;
 2832              		.loc 1 1339 0
 2833 0018 0446     		mov	r4, r0
 2834 001a 0D46     		mov	r5, r1
 2835              		.loc 1 1342 0
 2836 001c 0DD0     		beq	.L338
 2837              		.loc 1 1342 0 is_stmt 0 discriminator 1
 2838 001e 4FF4B843 		mov	r3, #23552
 2839 0022 C4F20003 		movt	r3, 16384
 2840 0026 9842     		cmp	r0, r3
 2841 0028 07D0     		beq	.L338
 2842 002a 40F20000 		movw	r0, #:lower16:.LC0
 2843              	.LVL228:
 2844 002e C0F20000 		movt	r0, #:upper16:.LC0
 2845 0032 40F23E51 		movw	r1, #1342
 2846              	.LVL229:
 2847 0036 FFF7FEFF 		bl	assert_failed
 2848              	.LVL230:
 2849              	.L338:
1343:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_CLEAR_FLAG(I2C_FLAG));
 2850              		.loc 1 1343 0 is_stmt 1
 2851 003a 42F2FF03 		movw	r3, #8447
 2852 003e 2B40     		ands	r3, r3, r5
 2853 0040 03B9     		cbnz	r3, .L339
 2854              		.loc 1 1343 0 is_stmt 0 discriminator 2
 2855 0042 3DB9     		cbnz	r5, .L340
 2856              	.L339:
 2857              		.loc 1 1343 0 discriminator 1
 2858 0044 40F20000 		movw	r0, #:lower16:.LC0
 2859 0048 C0F20000 		movt	r0, #:upper16:.LC0
 2860 004c 40F23F51 		movw	r1, #1343
 2861 0050 FFF7FEFF 		bl	assert_failed
 2862              	.LVL231:
 2863              	.L340:
1344:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get the I2C flag position */
1345:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   flagpos = I2C_FLAG & FLAG_MASK;
1346:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Clear the selected I2C flag */
1347:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->SR1 = (uint16_t)~flagpos;
 2864              		.loc 1 1347 0 is_stmt 1
 2865 0054 ED43     		mvns	r5, r5
 2866              	.LVL232:
 2867 0056 ADB2     		uxth	r5, r5
 2868              	.LVL233:
 2869 0058 A582     		strh	r5, [r4, #20]	@ movhi
 2870 005a 38BD     		pop	{r3, r4, r5, pc}
 2871              		.cfi_endproc
 2872              	.LFE155:
 2874              		.section	.text.I2C_GetITStatus,"ax",%progbits
 2875              		.align	2
 2876              		.global	I2C_GetITStatus
 2877              		.thumb
 2878              		.thumb_func
 2880              	I2C_GetITStatus:
 2881              	.LFB156:
1348:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
1349:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1350:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
1351:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Checks whether the specified I2C interrupt has occurred or not.
1352:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1353:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_IT: specifies the interrupt source to check. 
1354:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
1355:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_SMBALERT: SMBus Alert flag
1356:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_TIMEOUT: Timeout or Tlow error flag
1357:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_PECERR: PEC error in reception flag
1358:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_OVR: Overrun/Underrun flag (Slave mode)
1359:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_AF: Acknowledge failure flag
1360:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_ARLO: Arbitration lost flag (Master mode)
1361:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_BERR: Bus error flag
1362:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_TXE: Data register empty flag (Transmitter)
1363:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_RXNE: Data register not empty (Receiver) flag
1364:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_STOPF: Stop detection flag (Slave mode)
1365:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_ADD10: 10-bit header sent flag (Master mode)
1366:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_BTF: Byte transfer finished flag
1367:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_ADDR: Address sent flag (Master mode) "ADSL"
1368:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                              Address matched flag (Slave mode)"ENDAD"
1369:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_SB: Start bit flag (Master mode)
1370:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval The new state of I2C_IT (SET or RESET).
1371:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
1372:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** ITStatus I2C_GetITStatus(I2C_TypeDef* I2Cx, uint32_t I2C_IT)
1373:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 2882              		.loc 1 1373 0
 2883              		.cfi_startproc
 2884              		@ args = 0, pretend = 0, frame = 0
 2885              		@ frame_needed = 0, uses_anonymous_args = 0
 2886              	.LVL234:
 2887 0000 38B5     		push	{r3, r4, r5, lr}
 2888              	.LCFI36:
 2889              		.cfi_def_cfa_offset 16
 2890              		.cfi_offset 3, -16
 2891              		.cfi_offset 4, -12
 2892              		.cfi_offset 5, -8
 2893              		.cfi_offset 14, -4
1374:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   ITStatus bitstatus = RESET;
1375:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint32_t enablestatus = 0;
1376:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1377:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
1378:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 2894              		.loc 1 1378 0
 2895 0002 4FF4A842 		mov	r2, #21504
 2896 0006 4FF4B043 		mov	r3, #22528
 2897 000a C4F20002 		movt	r2, 16384
 2898 000e C4F20003 		movt	r3, 16384
 2899 0012 9042     		cmp	r0, r2
 2900 0014 18BF     		it	ne
 2901 0016 9842     		cmpne	r0, r3
1373:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   ITStatus bitstatus = RESET;
 2902              		.loc 1 1373 0
 2903 0018 0546     		mov	r5, r0
 2904 001a 0C46     		mov	r4, r1
 2905              		.loc 1 1378 0
 2906 001c 0DD0     		beq	.L345
 2907              		.loc 1 1378 0 is_stmt 0 discriminator 1
 2908 001e 4FF4B843 		mov	r3, #23552
 2909 0022 C4F20003 		movt	r3, 16384
 2910 0026 9842     		cmp	r0, r3
 2911 0028 07D0     		beq	.L345
 2912 002a 40F20000 		movw	r0, #:lower16:.LC0
 2913              	.LVL235:
 2914 002e C0F20000 		movt	r0, #:upper16:.LC0
 2915 0032 40F26251 		movw	r1, #1378
 2916              	.LVL236:
 2917 0036 FFF7FEFF 		bl	assert_failed
 2918              	.LVL237:
 2919              	.L345:
1379:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_GET_IT(I2C_IT));
 2920              		.loc 1 1379 0 is_stmt 1
 2921 003a 4FF40042 		mov	r2, #32768
 2922 003e 4FF48043 		mov	r3, #16384
 2923 0042 C0F20012 		movt	r2, 256
 2924 0046 C0F20013 		movt	r3, 256
 2925 004a 9442     		cmp	r4, r2
 2926 004c 18BF     		it	ne
 2927 004e 9C42     		cmpne	r4, r3
 2928 0050 0BD0     		beq	.L346
 2929              		.loc 1 1379 0 is_stmt 0 discriminator 1
 2930 0052 4FF48052 		mov	r2, #4096
 2931 0056 4FF40063 		mov	r3, #2048
 2932 005a C0F20012 		movt	r2, 256
 2933 005e C0F20013 		movt	r3, 256
 2934 0062 9442     		cmp	r4, r2
 2935 0064 18BF     		it	ne
 2936 0066 9C42     		cmpne	r4, r3
 2937 0068 0DD1     		bne	.L370
 2938              	.L346:
1380:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1381:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check if the interrupt source is enabled or not */
1382:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   enablestatus = (uint32_t)(((I2C_IT & ITEN_MASK) >> 16) & (I2Cx->CR2)) ;
 2939              		.loc 1 1382 0 is_stmt 1
 2940 006a AB88     		ldrh	r3, [r5, #4]
1383:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
1384:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get bit[23:0] of the flag */
1385:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2C_IT &= FLAG_MASK;
1386:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1387:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the status of the specified I2C flag */
1388:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (((I2Cx->SR1 & I2C_IT) != (uint32_t)RESET) && enablestatus)
 2941              		.loc 1 1388 0
 2942 006c A88A     		ldrh	r0, [r5, #20]
 2943 006e 80B2     		uxth	r0, r0
 2944 0070 2040     		ands	r0, r4, r0
1382:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
 2945              		.loc 1 1382 0
 2946 0072 9BB2     		uxth	r3, r3
 2947              	.LVL238:
 2948              		.loc 1 1388 0
 2949 0074 06D0     		beq	.L347
1382:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
 2950              		.loc 1 1382 0 discriminator 1
 2951 0076 04F0E064 		and	r4, r4, #117440512
 2952              	.LVL239:
 2953              		.loc 1 1388 0 discriminator 1
 2954 007a 13EA1444 		ands	r4, r3, r4, lsr #16
 2955              	.LVL240:
1389:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
1390:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* I2C_IT is set */
1391:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     bitstatus = SET;
 2956              		.loc 1 1391 0 discriminator 1
 2957 007e 0CBF     		ite	eq
 2958 0080 0020     		moveq	r0, #0
 2959 0082 0120     		movne	r0, #1
 2960              	.L347:
 2961              	.LVL241:
1392:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
1393:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
1394:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
1395:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* I2C_IT is reset */
1396:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     bitstatus = RESET;
1397:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
1398:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Return the I2C_IT status */
1399:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   return  bitstatus;
1400:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 2962              		.loc 1 1400 0
 2963 0084 38BD     		pop	{r3, r4, r5, pc}
 2964              	.LVL242:
 2965              	.L370:
1379:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 2966              		.loc 1 1379 0 discriminator 1
 2967 0086 4FF48062 		mov	r2, #1024
 2968 008a 4FF40073 		mov	r3, #512
 2969 008e C0F20012 		movt	r2, 256
 2970 0092 C0F20013 		movt	r3, 256
 2971 0096 9442     		cmp	r4, r2
 2972 0098 18BF     		it	ne
 2973 009a 9C42     		cmpne	r4, r3
 2974 009c E5D0     		beq	.L346
 2975 009e 8023     		movs	r3, #128
 2976 00a0 C0F20063 		movt	r3, 1536
 2977 00a4 B4F1012F 		cmp	r4, #16777472
 2978 00a8 18BF     		it	ne
 2979 00aa 9C42     		cmpne	r4, r3
 2980 00ac DDD0     		beq	.L346
 2981 00ae 4022     		movs	r2, #64
 2982 00b0 1023     		movs	r3, #16
 2983 00b2 C0F20062 		movt	r2, 1536
 2984 00b6 C0F20023 		movt	r3, 512
 2985 00ba 9442     		cmp	r4, r2
 2986 00bc 18BF     		it	ne
 2987 00be 9C42     		cmpne	r4, r3
 2988 00c0 D3D0     		beq	.L346
 2989 00c2 0822     		movs	r2, #8
 2990 00c4 0423     		movs	r3, #4
 2991 00c6 C0F20022 		movt	r2, 512
 2992 00ca C0F20023 		movt	r3, 512
 2993 00ce 9442     		cmp	r4, r2
 2994 00d0 18BF     		it	ne
 2995 00d2 9C42     		cmpne	r4, r3
 2996 00d4 C9D0     		beq	.L346
 2997 00d6 04F17E43 		add	r3, r4, #-33554432
 2998 00da 013B     		subs	r3, r3, #1
 2999 00dc 012B     		cmp	r3, #1
 3000 00de C4D9     		bls	.L346
 3001 00e0 40F20000 		movw	r0, #:lower16:.LC0
 3002 00e4 C0F20000 		movt	r0, #:upper16:.LC0
 3003 00e8 40F26351 		movw	r1, #1379
 3004 00ec FFF7FEFF 		bl	assert_failed
 3005              	.LVL243:
 3006 00f0 BBE7     		b	.L346
 3007              		.cfi_endproc
 3008              	.LFE156:
 3010 00f2 00BF     		.section	.text.I2C_ClearITPendingBit,"ax",%progbits
 3011              		.align	2
 3012              		.global	I2C_ClearITPendingBit
 3013              		.thumb
 3014              		.thumb_func
 3016              	I2C_ClearITPendingBit:
 3017              	.LFB157:
1401:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1402:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
1403:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Clears the I2Cx's interrupt pending bits.
1404:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1405:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_IT: specifies the interrupt pending bit to clear. 
1406:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be any combination of the following values:
1407:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_SMBALERT: SMBus Alert interrupt
1408:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_TIMEOUT: Timeout or Tlow error interrupt
1409:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_PECERR: PEC error in reception  interrupt
1410:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_OVR: Overrun/Underrun interrupt (Slave mode)
1411:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_AF: Acknowledge failure interrupt
1412:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_ARLO: Arbitration lost interrupt (Master mode)
1413:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_BERR: Bus error interrupt
1414:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * 
1415:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   STOPF (STOP detection) is cleared by software sequence: a read operation 
1416:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          to I2C_SR1 register (I2C_GetITStatus()) followed by a write operation to 
1417:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          I2C_CR1 register (I2C_Cmd() to re-enable the I2C peripheral).
1418:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   ADD10 (10-bit header sent) is cleared by software sequence: a read 
1419:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          operation to I2C_SR1 (I2C_GetITStatus()) followed by writing the second 
1420:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          byte of the address in I2C_DR register.
1421:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   BTF (Byte Transfer Finished) is cleared by software sequence: a read 
1422:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          operation to I2C_SR1 register (I2C_GetITStatus()) followed by a 
1423:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          read/write to I2C_DR register (I2C_SendData()).
1424:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   ADDR (Address sent) is cleared by software sequence: a read operation to 
1425:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          I2C_SR1 register (I2C_GetITStatus()) followed by a read operation to 
1426:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          I2C_SR2 register ((void)(I2Cx->SR2)).
1427:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   SB (Start Bit) is cleared by software sequence: a read operation to 
1428:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          I2C_SR1 register (I2C_GetITStatus()) followed by a write operation to 
1429:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          I2C_DR register (I2C_SendData()).
1430:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
1431:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
1432:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_ClearITPendingBit(I2C_TypeDef* I2Cx, uint32_t I2C_IT)
1433:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 3018              		.loc 1 1433 0
 3019              		.cfi_startproc
 3020              		@ args = 0, pretend = 0, frame = 0
 3021              		@ frame_needed = 0, uses_anonymous_args = 0
 3022              	.LVL244:
 3023 0000 38B5     		push	{r3, r4, r5, lr}
 3024              	.LCFI37:
 3025              		.cfi_def_cfa_offset 16
 3026              		.cfi_offset 3, -16
 3027              		.cfi_offset 4, -12
 3028              		.cfi_offset 5, -8
 3029              		.cfi_offset 14, -4
1434:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint32_t flagpos = 0;
1435:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
1436:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 3030              		.loc 1 1436 0
 3031 0002 4FF4A842 		mov	r2, #21504
 3032 0006 4FF4B043 		mov	r3, #22528
 3033 000a C4F20002 		movt	r2, 16384
 3034 000e C4F20003 		movt	r3, 16384
 3035 0012 9042     		cmp	r0, r2
 3036 0014 18BF     		it	ne
 3037 0016 9842     		cmpne	r0, r3
1433:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint32_t flagpos = 0;
 3038              		.loc 1 1433 0
 3039 0018 0446     		mov	r4, r0
 3040 001a 0D46     		mov	r5, r1
 3041              		.loc 1 1436 0
 3042 001c 0DD0     		beq	.L372
 3043              		.loc 1 1436 0 is_stmt 0 discriminator 1
 3044 001e 4FF4B843 		mov	r3, #23552
 3045 0022 C4F20003 		movt	r3, 16384
 3046 0026 9842     		cmp	r0, r3
 3047 0028 07D0     		beq	.L372
 3048 002a 40F20000 		movw	r0, #:lower16:.LC0
 3049              	.LVL245:
 3050 002e C0F20000 		movt	r0, #:upper16:.LC0
 3051 0032 40F29C51 		movw	r1, #1436
 3052              	.LVL246:
 3053 0036 FFF7FEFF 		bl	assert_failed
 3054              	.LVL247:
 3055              	.L372:
1437:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_CLEAR_IT(I2C_IT));
 3056              		.loc 1 1437 0 is_stmt 1
 3057 003a 42F2FF03 		movw	r3, #8447
 3058 003e 2B40     		ands	r3, r3, r5
 3059 0040 03B9     		cbnz	r3, .L373
 3060              		.loc 1 1437 0 is_stmt 0 discriminator 2
 3061 0042 3DB9     		cbnz	r5, .L374
 3062              	.L373:
 3063              		.loc 1 1437 0 discriminator 1
 3064 0044 40F20000 		movw	r0, #:lower16:.LC0
 3065 0048 C0F20000 		movt	r0, #:upper16:.LC0
 3066 004c 40F29D51 		movw	r1, #1437
 3067 0050 FFF7FEFF 		bl	assert_failed
 3068              	.LVL248:
 3069              	.L374:
1438:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1439:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get the I2C flag position */
1440:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   flagpos = I2C_IT & FLAG_MASK;
1441:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1442:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Clear the selected I2C flag */
1443:Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->SR1 = (uint16_t)~flagpos;
 3070              		.loc 1 1443 0 is_stmt 1
 3071 0054 ED43     		mvns	r5, r5
 3072              	.LVL249:
 3073 0056 ADB2     		uxth	r5, r5
 3074              	.LVL250:
 3075 0058 A582     		strh	r5, [r4, #20]	@ movhi
 3076 005a 38BD     		pop	{r3, r4, r5, pc}
 3077              		.cfi_endproc
 3078              	.LFE157:
 3080              		.section	.rodata.str1.4,"aMS",%progbits,1
 3081              		.align	2
 3082              	.LC0:
 3083 0000 4C696272 		.ascii	"Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_"
 3083      61726965 
 3083      732F5354 
 3083      4D333246 
 3083      3478785F 
 3084 0033 6932632E 		.ascii	"i2c.c\000"
 3084      6300
 3085 0039 000000   		.text
 3086              	.Letext0:
 3087              		.file 2 "/opt/toolchains/eabi/arm-2014.05/arm-none-eabi/include/stdint.h"
 3088              		.file 3 "inc/stm32f4xx.h"
 3089              		.file 4 "Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rcc.h"
 3090              		.file 5 "Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_i2c.h"
 3091              		.file 6 "inc/stm32f4xx_conf.h"
 3092              		.file 7 "Libraries/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_i2c.c
     /tmp/ccePr9Cv.s:21     .text.I2C_DeInit:00000000 $t
     /tmp/ccePr9Cv.s:26     .text.I2C_DeInit:00000000 I2C_DeInit
     /tmp/ccePr9Cv.s:3082   .rodata.str1.4:00000000 .LC0
     /tmp/ccePr9Cv.s:132    .text.I2C_Init:00000000 $t
     /tmp/ccePr9Cv.s:137    .text.I2C_Init:00000000 I2C_Init
     /tmp/ccePr9Cv.s:436    .text.I2C_StructInit:00000000 $t
     /tmp/ccePr9Cv.s:441    .text.I2C_StructInit:00000000 I2C_StructInit
     /tmp/ccePr9Cv.s:481    .text.I2C_Cmd:00000000 $t
     /tmp/ccePr9Cv.s:486    .text.I2C_Cmd:00000000 I2C_Cmd
     /tmp/ccePr9Cv.s:558    .text.I2C_AnalogFilterCmd:00000000 $t
     /tmp/ccePr9Cv.s:563    .text.I2C_AnalogFilterCmd:00000000 I2C_AnalogFilterCmd
     /tmp/ccePr9Cv.s:635    .text.I2C_DigitalFilterConfig:00000000 $t
     /tmp/ccePr9Cv.s:640    .text.I2C_DigitalFilterConfig:00000000 I2C_DigitalFilterConfig
     /tmp/ccePr9Cv.s:711    .text.I2C_GenerateSTART:00000000 $t
     /tmp/ccePr9Cv.s:716    .text.I2C_GenerateSTART:00000000 I2C_GenerateSTART
     /tmp/ccePr9Cv.s:788    .text.I2C_GenerateSTOP:00000000 $t
     /tmp/ccePr9Cv.s:793    .text.I2C_GenerateSTOP:00000000 I2C_GenerateSTOP
     /tmp/ccePr9Cv.s:865    .text.I2C_Send7bitAddress:00000000 $t
     /tmp/ccePr9Cv.s:870    .text.I2C_Send7bitAddress:00000000 I2C_Send7bitAddress
     /tmp/ccePr9Cv.s:944    .text.I2C_AcknowledgeConfig:00000000 $t
     /tmp/ccePr9Cv.s:949    .text.I2C_AcknowledgeConfig:00000000 I2C_AcknowledgeConfig
     /tmp/ccePr9Cv.s:1021   .text.I2C_OwnAddress2Config:00000000 $t
     /tmp/ccePr9Cv.s:1026   .text.I2C_OwnAddress2Config:00000000 I2C_OwnAddress2Config
     /tmp/ccePr9Cv.s:1087   .text.I2C_DualAddressCmd:00000000 $t
     /tmp/ccePr9Cv.s:1092   .text.I2C_DualAddressCmd:00000000 I2C_DualAddressCmd
     /tmp/ccePr9Cv.s:1164   .text.I2C_GeneralCallCmd:00000000 $t
     /tmp/ccePr9Cv.s:1169   .text.I2C_GeneralCallCmd:00000000 I2C_GeneralCallCmd
     /tmp/ccePr9Cv.s:1241   .text.I2C_SoftwareResetCmd:00000000 $t
     /tmp/ccePr9Cv.s:1246   .text.I2C_SoftwareResetCmd:00000000 I2C_SoftwareResetCmd
     /tmp/ccePr9Cv.s:1317   .text.I2C_StretchClockCmd:00000000 $t
     /tmp/ccePr9Cv.s:1322   .text.I2C_StretchClockCmd:00000000 I2C_StretchClockCmd
     /tmp/ccePr9Cv.s:1394   .text.I2C_FastModeDutyCycleConfig:00000000 $t
     /tmp/ccePr9Cv.s:1399   .text.I2C_FastModeDutyCycleConfig:00000000 I2C_FastModeDutyCycleConfig
     /tmp/ccePr9Cv.s:1476   .text.I2C_NACKPositionConfig:00000000 $t
     /tmp/ccePr9Cv.s:1481   .text.I2C_NACKPositionConfig:00000000 I2C_NACKPositionConfig
     /tmp/ccePr9Cv.s:1558   .text.I2C_SMBusAlertConfig:00000000 $t
     /tmp/ccePr9Cv.s:1563   .text.I2C_SMBusAlertConfig:00000000 I2C_SMBusAlertConfig
     /tmp/ccePr9Cv.s:1640   .text.I2C_ARPCmd:00000000 $t
     /tmp/ccePr9Cv.s:1645   .text.I2C_ARPCmd:00000000 I2C_ARPCmd
     /tmp/ccePr9Cv.s:1717   .text.I2C_SendData:00000000 $t
     /tmp/ccePr9Cv.s:1722   .text.I2C_SendData:00000000 I2C_SendData
     /tmp/ccePr9Cv.s:1769   .text.I2C_ReceiveData:00000000 $t
     /tmp/ccePr9Cv.s:1774   .text.I2C_ReceiveData:00000000 I2C_ReceiveData
     /tmp/ccePr9Cv.s:1820   .text.I2C_TransmitPEC:00000000 $t
     /tmp/ccePr9Cv.s:1825   .text.I2C_TransmitPEC:00000000 I2C_TransmitPEC
     /tmp/ccePr9Cv.s:1897   .text.I2C_PECPositionConfig:00000000 $t
     /tmp/ccePr9Cv.s:1902   .text.I2C_PECPositionConfig:00000000 I2C_PECPositionConfig
     /tmp/ccePr9Cv.s:1979   .text.I2C_CalculatePEC:00000000 $t
     /tmp/ccePr9Cv.s:1984   .text.I2C_CalculatePEC:00000000 I2C_CalculatePEC
     /tmp/ccePr9Cv.s:2056   .text.I2C_GetPEC:00000000 $t
     /tmp/ccePr9Cv.s:2061   .text.I2C_GetPEC:00000000 I2C_GetPEC
     /tmp/ccePr9Cv.s:2107   .text.I2C_DMACmd:00000000 $t
     /tmp/ccePr9Cv.s:2112   .text.I2C_DMACmd:00000000 I2C_DMACmd
     /tmp/ccePr9Cv.s:2184   .text.I2C_DMALastTransferCmd:00000000 $t
     /tmp/ccePr9Cv.s:2189   .text.I2C_DMALastTransferCmd:00000000 I2C_DMALastTransferCmd
     /tmp/ccePr9Cv.s:2261   .text.I2C_ReadRegister:00000000 $t
     /tmp/ccePr9Cv.s:2266   .text.I2C_ReadRegister:00000000 I2C_ReadRegister
     /tmp/ccePr9Cv.s:2351   .text.I2C_ITConfig:00000000 $t
     /tmp/ccePr9Cv.s:2356   .text.I2C_ITConfig:00000000 I2C_ITConfig
     /tmp/ccePr9Cv.s:2448   .text.I2C_CheckEvent:00000000 $t
     /tmp/ccePr9Cv.s:2453   .text.I2C_CheckEvent:00000000 I2C_CheckEvent
     /tmp/ccePr9Cv.s:2569   .text.I2C_GetLastEvent:00000000 $t
     /tmp/ccePr9Cv.s:2574   .text.I2C_GetLastEvent:00000000 I2C_GetLastEvent
     /tmp/ccePr9Cv.s:2628   .text.I2C_GetFlagStatus:00000000 $t
     /tmp/ccePr9Cv.s:2633   .text.I2C_GetFlagStatus:00000000 I2C_GetFlagStatus
     /tmp/ccePr9Cv.s:2805   .text.I2C_ClearFlag:00000000 $t
     /tmp/ccePr9Cv.s:2810   .text.I2C_ClearFlag:00000000 I2C_ClearFlag
     /tmp/ccePr9Cv.s:2875   .text.I2C_GetITStatus:00000000 $t
     /tmp/ccePr9Cv.s:2880   .text.I2C_GetITStatus:00000000 I2C_GetITStatus
     /tmp/ccePr9Cv.s:3011   .text.I2C_ClearITPendingBit:00000000 $t
     /tmp/ccePr9Cv.s:3016   .text.I2C_ClearITPendingBit:00000000 I2C_ClearITPendingBit
     /tmp/ccePr9Cv.s:3081   .rodata.str1.4:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
assert_failed
RCC_APB1PeriphResetCmd
RCC_GetClocksFreq
